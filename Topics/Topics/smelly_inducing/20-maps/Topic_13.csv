Topic_no,Keywords,Contrib,System,Text
13,"android, cleanup, refactor, fix, update, common, transfer, start, show, search, issue, dialog, stop, song, action, view, fragment, play, seed, download",0.0774,conscrypt,"Remove java.lang.IntegralToString usage. java.lang.IntegralToString is going away, replaced its usage by small helper class, Hex. + Fixes the ""Illegal class access"" exception from TrustedCertificateStoreTest & TrustManagerImplTest. (cherry-picked from 61e984f441b9194f0ae907e6fc28502858df6852 + 61e984f441b9194f0ae907e6fc28502858df6852) Bug: 24932279 (cherry picked from commit e279a9854d15d20a0b3807fe96f0805b43cd4dae) Change-Id: Id48cd9c2dfade328f01c669afa20fe2e7a630fc2/"
,,0.0716,Frostwire,[desktop] Updated to jlibtorrent 1.1.0.22/
,,0.0737,Frostwire,[desktop] share from library in a single click./
,,0.0673,Frostwire,[desktop] Updated to jlibtorrent 1.1.0.22/
,,0.0879,Frostwire,"[desktop] Not using rxjava in search, using old plain listener./"
,,0.1218,Frostwire,[alll] Update to jlibtorrent 1.1.0.25/[common] Adding jlibtorrent listener as early as possible/
,,0.0716,Frostwire,[all] Update to jlibtorrent 1.1.0.23/
,,0.2299,Frostwire,"[common] Bullet proofed EZTV search. Now works on android, supports both .torrents and magnets./[common] Fixes EZTV search (Issue"
,,0.0744,Frostwire,[common] Added parsing of secondary content in YT/[common] Avoid channels in YT search performer/
,,0.1806,Frostwire,"[common] Bullet proofed EZTV search. Now works on android, supports both .torrents and magnets./"
,,0.1314,Frostwire,[android] Updated to jlibtorrent 1.1.0.21 and fixed issues with common changes/[common] Added static API to sc performer to allow for better DRY code reuse/
,,0.1157,Frostwire,[common] Should fix Monova search. Issue (tested only on desktop)/[common] DaysOld calculation does not belong to (abstract)SearchResult since its a used for consideration in particular cases/
,,0.0833,Frostwire,[common][fmp4] Refactor for better design and performance/
,,0.0996,Frostwire,[android] more fragment refactors. more player code cleanup./
,,0.1121,Frostwire,[android] this should close (adding album songs to empty playlist) (more cases pending)/
,,0.1473,Frostwire,[android] fixed scrolling issue on profile adapters./[android] feedback when creating new playlist with list of tracks./[android] more player code cleanup./
,,0.444,Frostwire,"[android/apollo] Bug fix. Now a playlist can be created out of More by artist songs./[android] build 242 Fixes refresh issues adding/removing playlists. Refactors, cleanup./[android] dont call refresh() inside restartLoader. minor optimizations. hunting for bug on favoritefragment./[android] multiple fixes and cleanup. Back arrow on top bar and back button behave the same goBack(). If user is inside an album view, it goes back to the artist profile, otherwise it finishes the task. When an album is removed list of albums is refreshed and songs are removed from recent./[android] fixes issue where last added favorite wasnt displaying. other refresh issues remain./[android] fixes on playlist handling./[android] fix display of recents, refactor on albumLoader./[android] fixes crash on long pressing special playlists./[android] almost ready to merge, cleaning up, fixes./[android] mistery solved, several fixes, lots of logging to find it./[android] more refactors. brought Ref.class to apollo to be able to submit this work to cyanogens project later on./[android] more fragment refactors. player refactor. next batch of fragment refactors and fixes./[android] more player code cleanup./"
,,0.098,Frostwire,[android] player refactor. next batch of fragment refactors and fixes./[android] more player code cleanup./
,,0.1204,Frostwire,[android] more fragment refactors. player refactor.
,,0.0677,Frostwire,"[android] almost ready to merge, cleaning up, fixes./"
,,0.1448,Frostwire,[android] this should close (adding album songs to empty playlist) (more cases pending)/[android] more player code cleanup./
,,0.1081,Frostwire,[android] typo refactor./[android] fixes on playlist handling./
,,0.19699999999999998,Frostwire,"[android] fix backgrounds of MyMusic search. cleanup, refactors./[android] more refactors. brought Ref.class to apollo to be able to submit this work to cyanogens project later on./[android] more player code cleanup./"
,,0.1061,Frostwire,"[android] fix display of recents, refactor on albumLoader./"
,,0.0936,Frostwire,"[android] refactors, more fragments working./"
,,0.1061,Frostwire,[android] updated My Music delete dialog/
,,0.1216,Frostwire,"[android] wip BasePlaylistDialog/[android] build 242 Fixes refresh issues adding/removing playlists. Refactors, cleanup./"
,,0.3508,Frostwire,[android] Fixed show cover on lockscreen is stopped not show is paused from notification show is close notification not show is paused from foreground not show is kill notification and paused- not show/[android] Avoiding NPE related to apollo/[android] Dont crash if we cant get the MODIFY_PHONE_STATE permission. This is only used for remote control from the lock screen./[android] merge from master/[android] player release refactor./[android] refactor. less aggresive locking./[android] NPEs are possible even after checking for non null. Fix./
,,0.1413,Frostwire,"[android] fix display of recents, refactor on albumLoader./[android] Loaders refactor./"
,,0.1121,Frostwire,[android] fixed scrolling issue on profile adapters./
,,0.3855,Frostwire,"[android] style set up for confirm list dialog/[android] simplification ConfirmListDialog./[android] confirm list dialog not dependent on SearchResult. Refactors adds label that shows how many items have been checked./[android] adding selected checkbox counter and event handlers. wip/Making more fail safe getting the last selected item from results lists/Single selection Mode Already working on dialog menu/[android] work on ConfirmListDialog (checkboxes, radiobuttons)/[android] simplification ConfirmListDialog./[android] confirm list dialog not dependent on SearchResult. Refactors adds label that shows how many items have been checked./[android] adding selected checkbox counter and event handlers. wip/Making more fail safe getting the last selected item from results lists/Single selection Mode Already working on dialog menu/[android] work on ConfirmListDialog (checkboxes, radiobuttons)/[android] Updated to jlibtorrent 1.1.0.21 and fixed issues with common changes/"
,,0.2748,Frostwire,"[android] pluggin HandpickedTorrentDialog on more use cases, got it to crash./[android] trying to plug handpick dialog without adding any UI thread code inside TransferManager. Attempting to do it with a torrent fetcher listener object that creates the handpick dialog as soon as it knows about the .torrent byte array./[android] Improved BitTorrent Status display on transfers./"
,,0.1564,Frostwire,"[android] style set up for the custom default dialog/[android] pluggin HandpickedTorrentDialog on more use cases, got it to crash./[android] Not using rxjava in search, using old plain listener./"
,,0.1989,Frostwire,"[android] Pull-to-refresh the android way/[android] refresh when files removed/added from transfers./[android] Fixes issue update My files headers on file deletion. Updates ""My Files"" header file count when: File is removed from ""My Files"" File is/are removed from ""My Music"", context menu actions. File is removed from Music Player screen during playback. File is/are removed from a finished transfer./[android] Updates file count after files are deleted. Fixes"
,,0.066,Frostwire,[common] Removed DirectoryUtils/
,,0.0804,Frostwire,[android] Making sure temp is created in http downloads/
,,0.0899,Frostwire,"[android] Not using rxjava in search, using old plain listener./"
,,0.3155,Frostwire,[android] adding seed action to finished non torrent transfers in transfer list adapter. (untested)/[android] Seed one or more selected files in My Files/[android] Shows descriptive error on Internet dropped (Issue Clears errored cloud transfers./[android] Changed presentation of demuxig progress/[android] DRY refactor/
,,0.1139,Frostwire,"[android] brought back size parsing for audio, previews both audio and video results./No british here/"
,,0.0939,Frostwire,[android] copyright fixes. DRY refactor with dlg.setStyle()/[android] updated ui for the onLastDialog and onShutdownDialog/
,,0.2814,Frostwire,[android] updated TermsUseDialog added new dialog_default_scroll xml/[android] updated ui for the onLastDialog and onShutdownDialog/[android] search and other torrent downloads now support partial download dialog. edge cases to fix./[android] trying to plug handpick dialog without adding any UI thread code inside TransferManager. Attempting to do it with a torrent fetcher listener object that creates the handpick dialog as soon as it knows about the .torrent byte array./
,,0.2262,Frostwire,[android] support for single selection mode./[android] confirm list dialog not dependent on SearchResult. Refactors selection Mode Already working on dialog menu/[android] confirm list dialog not dependent on SearchResult. Refactors
,,0.1456,Frostwire,"[desktop] only show transfers tab after user has started partial download dialog. Still need to work on some kind of temporary feedback as torrent fetching might take a few seconds, specially in the case of magnet search results./"
,,0.1361,Frostwire,[desktop] update filters when cloud transfers are seeded. added focus listener to text filter. updated changelog to include update about translations./
,,0.2875,Frostwire,"[desktop] When transfers are started we make sure ALL transfers are shown. I attempted to show transfers on their downloading or seeding state depending on what I thought they should be, but this automatic picking of the filter is a terrible experience as transfers can change state rapidly and then the user may think they didnt donwload or theyre gone. Instead, whenever we depend on an automatic switch to the transfers tab its better to leave the experience as it used to be, show all. If the user wants to filter transfers this must be a voluntary action. The experience is much nicer./"
,,0.2918,Frostwire,"[desktop] cleanup/[desktop] When transfers are started we make sure ALL transfers are shown. I attempted to show transfers on their downloading or seeding state depending on what I thought they should be, but this automatic picking of the filter is a terrible experience as transfers can change state rapidly and then the user may think they didnt donwload or theyre gone. Instead, whenever we depend on an automatic switch to the transfers tab its better to leave the experience as it used to be, show all. If the user wants to filter transfers this must be a voluntary action. The experience is much nicer./"
,,0.1172,Frostwire,"[common] Another NPE fix due to bad timing, in need of refactor/[common] Fixed NPE but the main reason is bad timing in loading (needs refactor)/"
,,0.098,Frostwire,[common] No more populateDynamicTrashChecker/[common] further improvements on eztv parsing/
,,0.1084,Frostwire,[common] Fixes YT search issues/[common] fix some yt regex/[common] YT preliminary html offset finder was broken after updates./
,,0.0807,Frostwire,[common] Fixes Torlock Search/
,,0.2705,Frostwire,"[android] fixed missing remote control update logic path/[android] no need of duplicated Ref class/[android] avoid NPE/[android] reverted ""true"" argument in stop playback, notification was not working properly/[android] NPE fix reported in console/[android] try to stop and dismiss music faster. avoid issue of music that stopped coming back on next session./[android] Using last service id for stopSelf in MusicPlaybackService/"
,,0.1006,Frostwire,[android] default waterfall shortcodes/[android] added missing support frostwire logic for plus/
,,0.1062,Frostwire,[android] Added swipe detector on search. TO-DO: Add it on panel that shows while no results are in./
,,0.1281,Frostwire,[android] changelog/[android] turned off ui-debug flag./[android] refactored Software Update dialog to extend AbstractDialog./[android] SoftwareUpdater dialog bullets working./
,,0.1277,Frostwire,[android] pass magnet url if you have it to add it to torrent_params so that the download after the magnet download can start faster./
,,0.0916,Frostwire,"[android] Now, starting from Lollipop, everyone uses the same media scanning method/"
,,0.2802,Frostwire,"[android] SeedAction class refactor/[android] crash reported in console/[android] pass magnet url if you have it to add it to torrent_params so that the download after the magnet download can start faster./[android] re-implemented ShowNoWifiInformationDialog by extending AbstractDialog./[android] updated NoWifi dialog, added ok button for easy dismissal/[android] temporarily disable Seed action for single files if save path is SD Card./[android] ResumeDownloadMenuAction no longer doubles up for Seeding. Now Seeding action also supports BittorrentDownloads in constructor and has a new dialog to turn on BitTorrent in case its turned off./"
,,0.1121,Frostwire,[android] use .newInstance()/[android] Rename File action dialog refactor./
,,0.1101,Frostwire,[android] refactored Delete files menu action dialog./
,,0.1747,Frostwire,[android] refactored Cancel Menu Ation dialogs to extend AbstractDialog./[android] Removed redundant DownloadTransfer/[android] Refactor to use Transfer from common/
,,0.1309,Frostwire,[android] Playlist creation dialog brought up to speed./[android] set up an onClickListener class for the CreateNewPlaylistMenuAction Dialog/
,,0.3411,Frostwire,[android] Closes more descriptive error on Connection timed out for cloud transfers./[android] UI refresh optimization Minor formatting/[android] ResumeDownloadMenuAction no longer doubles up for Seeding. Now Seeding action also supports BittorrentDownloads in constructor and has a new dialog to turn on BitTorrent in case its turned off./[android] Coded UI scanning status/[android] Using new ui YouTubedDownload/[common] HttpDownload DRY refactor/[android] Added new transfer states/[android] Refactor preparing to remove ui BittorrentDownload/[android] Refactor to remove payment options from ui BittorrentDownload/[android] Moved formatting out of model/[android] Removed UI isPausable method/[android] Removed redundant DownloadTransfer/[android] Refactor to use Transfer from common/[android] Using common TransferState directly in the UI/
,,0.1589,Frostwire,[android] pass magnet url if you have it to add it to torrent_params so that the download after the magnet download can start faster./[android] make sure handpicked torrent download happens on the background./
,,0.315,Frostwire,"[android] better handling of action view intent (minor issue left with second open)/[android] fixes bug where torrent download dialog would keep coming back./[android] Refactor, moved adnetworks classes to offers/[android] fixed refresh of player notifier, build 263/[android] merge/[android] Fixed logic for SD permission check from MainActivity/[android] Only check SD lost permissions if in SAF/[android] Added dialog in case storage path is inaccessible/"
,,0.128,Frostwire,"[android] fixed refresh of player notifier, build 263/"
,,0.1554,Frostwire,Moving permanent notification updating to EngineService/[android] Restored ugly hack of killProcess due to some remaining HTTP connections/[android] Enable/disable receiver. Removed ugly hack of killProcess/[android] Improved okhttp shutdown process/
,,0.0697,Frostwire,[android] Updated android billing helper framework/
,,0.066,Frostwire,[all] restore parse of magnet peers parameter/
,,0.1139,Frostwire,[desktop] cleanup/[desktop] support for build based updates. cleanup./[desktop] accommodated InstallerUpdater to new jlibtorrent/
,,0.066,Frostwire,[all] refactor to easy the path for jlibtorrent 1.2/
,,0.1452,Frostwire,[desktop] GUIMediator cleanup/[desktop] fixes bug where transfers wouldnt be shown upon a download starting./
,,0.185,Frostwire,[common] added PEER_LOG logging in BTEngine/[all] restore parse of magnet peers parameter/[common] using new jlibtorrent API for load settings (fix log setting)/update to jlibtorrent 1.2.0.0-beta1/[common] support jlibtorrent log alerts in BTEngine/[all] update to jlibtorrent 1.1.1.39 with local jlibtorrent 1.2 API layer/[all] final refactor to new BTEngine/[all] more on BTEngine simplification/[common] BTEngine cleanup/
,,0.1484,Frostwire,[common] improved getProgress calculation/[common] avoid possible NPE/[all] using new TrasferState from jlibtorrent2 proxy layer/[common] more changes related to jlibtorren2/
,,0.1293,Frostwire,[android] More edge cases and better shutdown. MusicUtils.mService renamed to MusicUtils.musicPlaybackServices Fixed log entry on Offers.dismissAndOrShutdownIfNecessary Cleanup/
,,0.1651,Frostwire,"[android] new opt-out haptic feedback support on some UI actions/[android] More edge cases and better shutdown. MusicUtils.mService renamed to MusicUtils.musicPlaybackServices Fixed log entry on Offers.dismissAndOrShutdownIfNecessary Cleanup/[android] refactor to delete old swipe detector, no more hacks for proper gesture detection/"
,,0.13699999999999998,Frostwire,[android] More edge cases and better shutdown. MusicUtils.mService renamed to MusicUtils.musicPlaybackServices Fixed log entry on Offers.dismissAndOrShutdownIfNecessary Cleanup/
,,0.1293,Frostwire,[android] More edge cases and better shutdown. MusicUtils.mService renamed to MusicUtils.musicPlaybackServices Fixed log entry on Offers.dismissAndOrShutdownIfNecessary Cleanup/
,,0.0759,Frostwire,[android] cleanup/
,,0.3785,Frostwire,"[android] fix crash on MusicPlaybackService.getQueue() when the playlist is null, import cleanup/[android] dont crash if you cant register the apollo remote control client/[android] fixes premature music service stop during music playback, refactor, much better shutdown./[android] More edge cases and better shutdown. MusicUtils.mService renamed to MusicUtils.musicPlaybackServices Fixed log entry on Offers.dismissAndOrShutdownIfNecessary Cleanup/[android] Fixes auto-restarting on exit issue. the issue was MusicPlaybackServices shutdown logic. The way this service shuts itself down is by receiving a delayed PendingIntent (this is a way to start a service at a later time even if the app isnt running) via Androids AlarmManager. This shutdown was being scheduled in 60 seconds. If the service is started normally with Context.startService() its onStartCommand() method returns START_STICKY, but if its started with the special SHUTDOWN command, it checks if theres anything playing, and if its not playing, it releases everything and returns START_NOT_STICKY./[android] more cleanup and formatting/[android] rminor cleanup and formatting/"
,,0.1422,Frostwire,[android] music playback isnt interrupted when video ad is displayed/[android] TOS dialog replaced for checkbox on wizard. Other refactors and cleanup./
,,0.1854,Frostwire,[all] refactor to easy the path for jlibtorrent 1.2/[android] MobFoxAdnetwork tells its listener when not to act on interstitial closed/[android] make sure InMobi initialization happens on the UI thread (when invoked from the software udpater thread)/[android] refactored AdNetworks. Encapsulated logic to enable/disable networks. Created Offers.AdNetworkHelper class to reduce code repetition among networks by using composition./
,,0.1432,Frostwire,[android] refactored AdNetworks. Encapsulated logic to enable/disable networks. Created Offers.AdNetworkHelper class to reduce code repetition among networks by using composition./
,,0.145,Frostwire,[android] refactored AdNetworks. Encapsulated logic to enable/disable networks. Created Offers.AdNetworkHelper class to reduce code repetition among networks by using composition./
,,0.0818,Frostwire,[android] new opt-out haptic feedback support on some UI actions/
,,0.0913,Frostwire,"[android] lint cleanup/[all] after so much time, it does not make sense to have a dedicated package for the single class Logger/"
,,0.0844,Frostwire,[android] code cleanup/
,,0.0677,Frostwire,[android] more haptic feedback on transfers. Build 307/[all] removed MagnetUriBuilder/
,,0.066,Frostwire,[all] restore parse of magnet peers parameter/
,,0.2784,Frostwire,"[android] avoid double finish/[android] MobFoxAdnetwork tells its listener when not to act on interstitial closed/[android] finish or shutdown on dismiss DRY refactor All ad networks reuse logic to handle dismiss or shutdown, fixing possible case where app wouldnt be shutdown on one of the networks. Future proofing improvement on Offers.getActiveNetworks() for new network codes or configuration typos./[android] TOS dialog replaced for checkbox on wizard. Other refactors and cleanup./"
,,0.3303,Frostwire,"[android] build 301. waitWhileServicesAreRunning now includes a timeout parameter and a variadic interface/[android] More edge cases and better shutdown. MusicUtils.mService renamed to MusicUtils.musicPlaybackServices Fixed log entry on Offers.dismissAndOrShutdownIfNecessary Cleanup/[android] Fixes auto-restarting on exit issue. the issue was MusicPlaybackServices shutdown logic. The way this service shuts itself down is by receiving a delayed PendingIntent (this is a way to start a service at a later time even if the app isnt running) via Androids AlarmManager. This shutdown was being scheduled in 60 seconds. If the service is started normally with Context.startService() its onStartCommand() method returns START_STICKY, but if its started with the special SHUTDOWN command, it checks if theres anything playing, and if its not playing, it releases everything and returns START_NOT_STICKY./[android] MainActivity::finish() override refactor/[android] NPE opening drawer too quickly java.lang.IllegalArgumentException: No drawer view found with gravity LEFT at android.support.v4.widget.DrawerLayout.openDrawer(DrawerLayout.java:1618) at android.support.v4.app.ActionBarDrawerToggle.onOptionsItemSelected(ActionBarDrawerToggle.java:409) at com.frostwire.android.gui.activities.MainActivity.onOptionsItemSelected(MainActivity.java:804)/[android] ad_menuItem showing when menu_player visibility is set to gone/[all] after so much time, it does not make sense to have a dedicated package for the single class Logger/"
,,0.0818,Frostwire,[android] new opt-out haptic feedback support on some UI actions/
,,0.3008,Frostwire,"[android] More edge cases and better shutdown. MusicUtils.mService renamed to MusicUtils.musicPlaybackServices Fixed log entry on Offers.dismissAndOrShutdownIfNecessary Cleanup/[android] Fixes auto-restarting on exit issue. the issue was MusicPlaybackServices shutdown logic. The way this service shuts itself down is by receiving a delayed PendingIntent (this is a way to start a service at a later time even if the app isnt running) via Androids AlarmManager. This shutdown was being scheduled in 60 seconds. If the service is started normally with Context.startService() its onStartCommand() method returns START_STICKY, but if its started with the special SHUTDOWN command, it checks if theres anything playing, and if its not playing, it releases everything and returns START_NOT_STICKY./"
,,0.0643,Frostwire,[desktop] azureus folder code cleanup/
,,0.0807,Frostwire,"[desktop] DRY abstraction refactor of all Http BTDownloads, cleanup./"
,,0.0789,Frostwire,"[desktop] library DnD 2016fication tyding up as I study and remember how this all worked, might refactor into less transfer handlers in the future/"
,,0.2576,Frostwire,"[desktop] Playlist explorer contextual popup menu refactor No need to keep pre-built pop up menues in memory, just keep the actions to build menus New methods build up menues and receive the underlying playlist to reduce the number of available actions to a minimum Create New Playlist item has right click menu refactored code to 2016 style cleanup and code compacting/"
,,0.0792,Frostwire,[desktop] Make MPlayerInstance independent from azureus code/[desktop] MPlayerInstance cleanup/
,,0.0577,Frostwire,[common] fixed limetorrents details regex/
,,0.1193,Frostwire,[common] fixed monova engine using the http torrent url/[common] added unit test for monova and partial fix to search (still not working)/
,,0.2228,Frostwire,[android] MoPub progress Added close ad button and handling logic. Does not load the ad if user disabled ads. NPE onDestroy fixed. Refactor on AudioPlayerActivity::PlaybackStatus Avoid temporary crashes while the landscape mode isnt finished./[android] make sure unit is destroyed on onDestroy()/[android] unit loads. onclick doesnt do much. layout and closing button needed/[android] hides removeAds after a purchase/[android/WIP] getting things ready on Music Player activity/
,,0.4388,Frostwire,"[android] asynchronous notification update (#262)/[android] moving updating of RemoteControlClient to asynchronous task due to bitmap operations (#260)/[android] Allow simple playback of ringtones without adversly affecting the users current playback and incidental stop/play status fix for file lists (affects both ringtone and music playback): something is playing and a ringtone is to be played the current played music will be paused a ringtone is playing and music playback is resumed/started then the ringtone will be stopped one ringtone can be played at the same time. Starting new playback will stop the old one. a ringtone that is being played will stop the playback out of the fragment or changing the tab carusel will stop playback of a ringtone. (User can no longer see the stop button, so its stopped for him)/"
,,0.16,Frostwire,[android] asynchronous blurring (#263) * [android] asynchronous blurring and improved ImageLoader API/
,,0.0786,Frostwire,[android/WIP] more on AdNetworks abstraction/[android] WIP more on AbstractAdNetwork refactor/
,,0.1309,Frostwire,"[android/WIP] more on AdNetworks abstraction/[android] More AppLovinAdNetwork cleanup/[android] WIP, AdNetworks abstraction refactor, starting, stopping and all common logic moved up to new AbstractAdNetwork/"
,,0.0686,Frostwire,[android] WIP more on AbstractAdNetwork refactor/
,,0.2803,Frostwire,"[android] InMobi/Offers maintenance after 0 impressions from InMobi Moved InMobi constant to InMobiAdNetwork UIUtils.inUIThread() new convenience method InMobi checks/flags to avoid double interstitial loading Offer checks to avoid too rapid network re-initialization Raised InMobi reload period from 20secs to 60secs InMobiInterstitialListener now implements InMobiInterstitial.InterstitialAdListener2, as InMobiInterstitial.InterstitialAdListener is now deprecated and will be phased out soon InMobi InterstitialReloader avoids double interstitial loading It seems InMobi changed account parameters, everything should be working but error says to contact partner. I believe there was a conflict between MoPub and InMobi and thats why we were getting the double loading of InMobi interstitials, most likely will remove InMobi manual integration next (while leaving the libraries for MoPub to use)/[android] refactor, cleanup/[android] no more broadcast receiver leaks, improved abstractions, brainfart refactors/[android] MoPub interstitial integration, ads not displaying yet./[android] boolean master :)/[android/WIP] more on AdNetworks abstraction/[android] WIP more on AbstractAdNetwork refactor/[android] WIP, AdNetworks abstraction refactor, starting, stopping and all common logic moved up to new AbstractAdNetwork/[android] added placement parameter that individual networks can map out of to obtain the right ad ids if placements are supported/[android/WIP] getting things ready on Music Player activity/"
,,0.1657,Frostwire,[android] asynchronous blurring (#263) * [android] asynchronous blurring and improved ImageLoader API/
,,0.2049,Frostwire,"[android] better experience switching to other media types/[android] hide everything/[android] improved scroll direction detection/[android] keyword filters available manually on search/[android] new ListViewScrollDirectionDetector, installed on SearchFragments ListView/[android] no special offers in horizontal mode. fix number of slides when in landscape mode to always have an even number/"
,,0.4362,Frostwire,"[android] Allow simple playback of ringtones without adversly affecting the users current playback and incidental stop/play status fix for file lists (affects both ringtone and music playback): something is playing and a ringtone is to be played the current played music will be paused a ringtone is playing and music playback is resumed/started then the ringtone will be stopped one ringtone can be played at the same time. Starting new playback will stop the old one. a ringtone that is being played will stop the playback out of the fragment or changing the tab carusel will stop playback of a ringtone. (User can no longer see the stop button, so its stopped for him)/[android] Fix for ringtone item selection and context menu the ability to check multiple ringtones by hiding the checkboxes there are no items for the context menu dont show it menu ignores other checked files (always can play and set as ringtone)/"
,,0.1973,Frostwire,[android] feature/mobile data protection fix (#338) * [android] check if torrents should be resumed when on mobile data and mobile data saving is on * [android] seeding while on mobile data saving and no wifi/
,,0.0717,Frostwire,[android/crash] fixes index out of bounds crash/
,,0.1773,Frostwire,[android] make checked listener in abstract list adapter operate on items instead of views. (#302) * [android] make checked listener in abstract list adapter operate on items instead of views. * [android] restore compundbutton info in listener callback/
,,0.1633,Frostwire,[android] added placement parameter that individual networks can map out of to obtain the right ad ids if placements are supported/[android] handle logic post video preview on MainActivity.onActivityResult()/
,,0.0686,Frostwire,[android] PreviewPlayerActivity using AbstractActivity2/
,,0.2707,Frostwire,[android] make checked listener in abstract list adapter operate on items instead of views. (#302) * [android] make checked listener in abstract list adapter operate on items instead of views. * [android] restore compundbutton info in listener callback/[android] Fix for ringtone item selection and context menu the ability to check multiple ringtones by hiding the checkboxes there are no items for the context menu dont show it menu ignores other checked files (always can play and set as ringtone)/
,,0.1969,Frostwire,[android] Fix for ringtone item selection and context menu the ability to check multiple ringtones by hiding the checkboxes there are no items for the context menu dont show it menu ignores other checked files (always can play and set as ringtone)/
,,0.0673,Frostwire,[desktop] lyrics support on playlists/
,,0.0977,Frostwire,"[android] do not stop btEngine, the app never assumes btEngine is stopped./[desktop] VPN-drop guard/"
,,0.0804,Frostwire,[desktop] New: Options > Advanced > Experimental/[desktop] WIP inform the user in statusbar/
,,0.098,Frostwire,[android] feature/delete torrent on download (#334)/
,,0.0673,Frostwire,[common] fixed YT player regex/[common] fixed YT/
,,0.0686,Frostwire,[common] fix SC/
,,0.0916,Frostwire,[common] TorLock search fixed/
,,0.0849,Frostwire,[common] monova filtering adjustments/
,,0.0828,Frostwire,[android] refactor in apollo fragments to use native components/
,,0.1306,Frostwire,[android] consistent layouts for recent tab (#374)/[android] refactored hierarchy design of AlbumFragment/
,,0.1065,Frostwire,[android] Enable icon display in toolbars overflow menu This is a refactor of a reflection hack found as a solution. See (never merged)/[android] menu refactor for compatibility with appcompat library/
,,0.1675,Frostwire,[android] Enable icon display in toolbars overflow menu This is a refactor of a reflection hack found as a solution. See (never merged)/[android] removed ThemeUtils/[android] cleanup refactor in AudioPlayerActivity/[android] implementing AudioPlayerActivity with AbstractActivity/
,,0.0995,Frostwire,[android] Enable icon display in toolbars overflow menu This is a refactor of a reflection hack found as a solution. See (never merged)/[android] implemented apollo BaseActivity with new AbstractActivity/
,,0.0618,Frostwire,[android] apollo source code cleanup and formatting/
,,0.0643,Frostwire,[android] cleanup refactor in ShuffleButton/
,,0.0664,Frostwire,[android] cleanup refactor in RepeatButton/
,,0.0905,Frostwire,[android] dont crash if mopub couldnt load interstitial. It may happen that MoPubs network request queue cant be started because context.getCacheDir() might return null at the time of the call. See
,,0.1325,Frostwire,"[android] post review cleanup ImageLoader revert/removal of callback passing method. AbstractListAdapter.CheckboxOnCheckedChangeListener onPostCheckedChange left over code removal. CheckableImageView does not load images in constructor, adds new loadImages() method to load images on demand by class user. CheckableImageView constructor signature refactor (Supports width, height, image uris as a array, reordering of parameters). New lines./"
,,0.0932,Frostwire,[android] restored lost feature of DHT peers in transfers status bar/
,,0.2591,Frostwire,"[android] GridView for My Files Images and Audio (Issue MyFiles new action toolbar on selection mode (#413) Brings out action mode on long press styled ActionMode toolbar Handles visibility of menu action depending on different factors like, number of files checked, file type, SAF Bug fix: When seeding was only enabled for WiFi, the file would still be added to transfers in Finished state. Now it doesnt add the file and it stays in the same screen as it was originally./[android] remove SupressLint warning on inflate. Also, make sure all checkboxes are unchecked when going into selection mode from long press./[android] Long clicking on Files in My Files toggles selection mode/[android] My Files > Action Bar updates Done in one day. Way to go./"
,,0.1773,Frostwire,"[android] UIUtils.openFile(..., boolean useFileProvider) To solve issue of FrostWire not knowing how to handle its own .apk update. Works on Android 7.0, need to test on Android 4.0, 5.0 and 6.0/[android] Old menu replaced with Material Design menu/"
,,0.0962,Frostwire,[android] ad placement invocation adjustment to single unit/
,,0.1721,Frostwire,[android] feature/dont start bittorrent without vpn (#343) new UIUtils.showDismissableMessage/[android] feature/delete torrent on download (#334)/
,,0.1002,Frostwire,[android] ad placement invocation adjustment to single unit/
,,0.0903,Frostwire,[android] ad placement invocation adjustment to single unit/
,,0.2773,Frostwire,"[android] ad placement invocation adjustment to single unit/[android] MainActivity/NavigationMenu refactors. NavigationMenu moved to com.frostwire.android.gui/activities.internal package. Removed unnecessary circular references to NavigationMenu on MenuDrawerToggles constructor MenuDrawerToggle no longer static so it can directly access the NavigationMenu instance that creates it More fields in NavigationMenu now final/[android] NavigationMenu extracted out of MainActivity. MainController now works with weak reference to MainActivity and enhances its functionality. Cleanup and refactoring of MainActivity, zero warnings./[android] Old menu replaced with Material Design menu/[android] better control of toolbar custom view gravity and fixed visibility issue/[android] abstracted feature of custom view in main toolbar/[android] formatting and import cleanup/"
,,0.2642,Frostwire,"[android] InHouseAds integrated with PreviewPlayerActivity/[android] Fixes Broadcast receiver leaked error on PreviewActivity/[android] updated preview activity layouts/[android] added toggle fullscreen button, layout cleanup, lots of details/[android] more on preview activity, unregister broadcast listener on destroy, remote config value/[android] preview screen mopub integration/"
,,0.1353,Frostwire,[android] GridView for My Files Images and Audio (Issue Long clicking on Files in My Files toggles selection mode/
,,0.192,Frostwire,"[android] ensures creation of ConfigurationManager in onStartCommand/[android] return START_NOT_STICKY instead of 0 in onStartCommand/[android] disable presage service when shutdown (testing)/[android] method name refactor/[android] better shutdown of EngineService via intent, to allow for use of START_NOT_STICKY/[android] debug output shutting down/"
,,0.0833,Frostwire,"[desktop] code formatting, minor refactor, headers/"
,,0.1061,Frostwire,[common] avoid re-download of torrent is already complete/
,,0.1211,Frostwire,"[android] When Queue is cleared... Dont close the activity Clear the queue, refresh the adapter If a song was being played, play it after the queue has been cleared, this means the song has to be restarted (I tried using the seek method to resume playback wherever it was but this didnt work)/"
,,0.275,Frostwire,"[android] avoid ANR adding to recently played/[android] avoid possible ANR by android.app.AlarmManager.cancel()/[android] NPE on MusicPlaybackService/[android] might aswell do these in the background too/[android] anti-ANR MusicPlaybackService refactors Addresses tickets and Operations like .openXXX() and .duration() may take a long time and cause ANRs if invoked in the main thread. The code has been refactored to use callbacks to the main thread and avoid the numerous ANR reports weve been getting in the google play console Also fixes a possible NPE on ensurePlayListCapacity/[android] possible NPE on a fast start and shutdown averted/[android] minor typos/[android] attempt to recover from IllegalStateException in MusicPlaybackService#getAlbumId/[android] mitigating another NPE in MusicPlaybackService#onDestroy (documented the possible reason of mShutdownIntent being null)/[android] mitigating another NPE in MusicPlaybackService#scheduleDelayedShutdown due to excessive (and bad) use of mutable state in player/[android] log StaleDataException error and return false in MusicPlaybackService#openFile/[android] log UnsupportedOperationException error and return false in MusicPlaybackService#openFile/[android] MusicPlaybackService possible Runtime Exception submitting task/[android] fixed NPE in releaseServiceUiAndStop/[android] fixed issue if visible mini player when existing the app/[android] avoid ANR, dont lock whole service object to get audioSessionId/[android] MusicPlaybackService initiation was causing ANRs. Moved initService() to a background thread The app starts way faster now/[android] possible NPE on RemoteControlClient::MetadataEditor.apply()/"
,,0.4117,Frostwire,"[android] one more context leak check in ImageLoader/[android] using generic ImageLoader#load method with parameters in image viewer/[android] implemented ImageLoader#load with retry using the common load/[android] using Params class in ImageLoader#load to mitigate the type-less interchangeable parameters anti-pattern with overloads/[android] ImageViewer simplifications. ImageLoader DEBUG_ERRORS flag/[android] My Files thumbnails and ImageViewer optimizations. Build 382 Build 382 File List Adapter thumbnails resolution increased from 128 pixels to 256 pixels Thumbnail loading now done using new loadBitmapAsync function (High priority, and disk cached) ImageViewer 3 image loading strategy now calls postInvalidate on Bitmap load success ImageViewers first low resolution image is now a 20th of the screens resolution ImageViewers second loaded image now uses Picassos fit() function to resize exactly to target TouchImageView ImageViewers images dont make use of the disk cache, thus not evicting thumbnails on My Files ImageViewers disk cache sizes raised from [5MB, 50MB] to closest powers of two interval [8MB, 64MB]/[android] image viewer fragment refactor, different image loading strategy test/[android] fixes bug loading high res images/[android] ImageViewer fragment (#437) * [android] ImageViewer activity, Video/Pic grid improvements * [android] Fixes selection mode issues on grids, Media Overlay View, Pinch and Zoom * [android] ads metadata to image viewer fragment * [android] set wallpaper action non-blocking * [android] ImageLoader asyncload wraps fetch() to use Picassos background threads * [android] New FileInformation action shows file information dialog * [android] add preview screen listener * [android] Cleanup and bug fixes. Fixes bug on ImageViewerFragment where after renaming an image and rotating the screen, the window title would revert to the original file name. Cleanup, license headers./"
,,0.233,Frostwire,"[android] ignore HTTP transfers for resume all menu/[android] fix of menu logic in TransfersFragment/[android] transfers toolbar update (#470) * [android] code reformat, missing /n * [android] moved the transfers menu dialog to toolbar menu to keep consistent throughout the app replaced the menu in transfers that opened by clicking on three dots on the toolbar that opened a dialog to an android menu. Also turned the ë+í button on the toolbar into a menuItem. * [android] added new add_transfer string/[android] Transfers tab layout refactor. cleanup, formatting/"
,,0.3932,Frostwire,"[android] Refresh suggested tags when tags removed. It will no longer skip these UI updates based on rate, instead of aborting we: Make sure were not on the UI thread Wait enough to make each succesive update at least 500ms Also refactored the checkbox menu item visibility checks into a method on MyFilesFragment/[android] avoid NPE on rotations if fragments still not attached/[android] bug fix on filtered results. more on keywordtagview event handling there is still a bug when trying to change inclusion mode for a second tag, works fine with the first one only/[android] improved filtering. less aggresive filter() calling/[android] simpler logic to show filter button. SearchResultListAdapter.filter() upgrade We were getting inconsistent counts because we were only seeing the counts for the selected media type filtered search results. Now SearchResultListAdapter.filter() feeds its FilteredSearchResults with a new list that contains results matching the current keyword pipeline, regardless of their media type/[android] filter button visibility. KeywordTags still not inflating correctly/[android] keyword filters refactors/simplifications. UX upgrades, more optimizations needed/[android] recalculate suggested keywords when filter is applied/[android] KeywordDetector simplifications, cpu savings, animation stops when filter button clicked/[android] animate the filter button for a few seconds/[android] refactors to adjust to new KeywordDetector.Feature. logic improvements/[common/android] using List for histogram, better API and avoid extra memory creation/[android] Avoid any possible Context leaks when submitting results to KeywordDetector/[android] Search Filters (squashed) (#491) * [android] Search Filters (squashed) * [android] extra character on manifest * [android] KeywordDetector::HistogramUpdateRequestDispatcher cleanup/refactor/"
,,0.4466,Frostwire,"[android] hides selection checkbox when there is no files on the list, in My Files and My Files Filter (#540) * [android] hides selection checkbox when there is no files on the list Before even when there was 0 files a user could still enter selection mode in My Files. * [android] hides selection checkbox when there is no filtered files on the list/[android] avoid illegal state exception updating header on browse peer fragment/[android] Fixes issue where My Files SearchView was being hidden right after being shown. The culprit was a runnable sent from the ToolbarActionBar which would invoke populateOptionsMenu. This runnable was sent whenever the activitys invalidateOptionsMenu() method was called. After a search, the TransfersFragment.onTime() method was found to have a periodic call to invalidateOptionsMenu() from a recent fix on the transfers menu. The fix was making sure such invalidation only happened when the TransfersFragment was visible. 14 characters. The rest of the code changes had to do with a hard coded string and tighter checks on when to perform the filtering/[android] long running Finger was causing way too many ANRs. build 395/[android] fixes last tab selected issue on rotate/[android] Tab Layout refactor (#449) * [android] added tabLayout, removed TitlePageIndicator * [android] more cleanup * [android] more cleanup and missing license headers * [android] TabLayout on search fragments SearchInputView Core functionality is there: Search counters updated OnClick listener OnSwipe listener Remembering last selected file type selected * [android] refactor RadioButtonsListener to OnTabsListener, plugs SearchFragment.onFileTypeClicked * [android] added dividers, removed unused button from tabs * [android] added new file type image for tablayout * [android] adjusted search view tablayout * [android] initial set up of browse fragment tablayout * [android] added initial set up for the transfers tab layout TODO: add the horizontal divider line below ClearableEditTextView * [android] plugged tab layout on my files. very satisfactory cleanup * [android] Simplification on swipe. More cleanup/"
,,0.161,Frostwire,"[android] onResume interstitial logic/[android] onExit/onBackHome interstitial logic update, less ads/"
,,0.0962,Frostwire,"[android] refactor, moved configuration methods out from TransferManager to ConfigurationManager/"
,,0.3746,Frostwire,"[android] avoid context leak on DeleteFileMenuAction/[android] ImageViewer fragment (#437) * [android] ImageViewer activity, Video/Pic grid improvements * [android] Fixes selection mode issues on grids, Media Overlay View, Pinch and Zoom * [android] ads metadata to image viewer fragment * [android] set wallpaper action non-blocking * [android] ImageLoader asyncload wraps fetch() to use Picassos background threads * [android] New FileInformation action shows file information dialog * [android] add preview screen listener * [android] Cleanup and bug fixes. Fixes bug on ImageViewerFragment where after renaming an image and rotating the screen, the window title would revert to the original file name. Cleanup, license headers./"
,,0.1713,Frostwire,[android] Rename refactor: BrowsePeerFragment MyFilesFragment/[android] opens single image downloads with ImageViewerActivity/[android] refactor in SendFiatTipAction for less dependencies/
,,0.1328,Frostwire,[android] avoid capturing context references in startTorrentPartialDownload/[android] HandpickedTorrentDownloadDialog dialog dismiss crash fix/
,,0.2352,Frostwire,"[android] bug fix first display onResume interstitial/[android] onResume interstitial logic/[android] onExit/onBackHome interstitial logic update, less ads/[android] dont crash at runtime if call to commit in MainActivity#hideFragments fails with IllegalStateException/[android] properly shutdown app from DangerousPermissionsChecker/"
,,0.3944,Frostwire,"[android] Tab Layout refactor (#449) * [android] added tabLayout, removed TitlePageIndicator * [android] more cleanup * [android] more cleanup and missing license headers * [android] TabLayout on search fragments SearchInputView Core functionality is there: Search counters updated OnClick listener OnSwipe listener Remembering last selected file type selected * [android] refactor RadioButtonsListener to OnTabsListener, plugs SearchFragment.onFileTypeClicked * [android] added dividers, removed unused button from tabs * [android] added new file type image for tablayout * [android] adjusted search view tablayout * [android] initial set up of browse fragment tablayout * [android] added initial set up for the transfers tab layout TODO: add the horizontal divider line below ClearableEditTextView * [android] plugged tab layout on my files. very satisfactory cleanup * [android] Simplification on swipe. More cleanup/"
,,0.155,Frostwire,[android] ignoring SecurityException while canceling all notifications in EngineService#onStartCommand/[common][all] migration to ok code refactor related to notification update/
,,0.1174,Frostwire,[all] EZTV search fixed for the longest time it wasnt adding the search keywords to the search url. test code updated/
,,0.1028,Frostwire,"[common] give the opportunity to specify if an html page is valid to be crawled, minor refactor. For example, monova include in search results torrents that are actually removed./"
,,0.0618,Frostwire,[all] TorLock search fixed/
,,0.1984,Frostwire,"[common] using magnet url for yi-fi if torrent url fails/[common] minor code optimization/cleanup/[common] YifySearchPerformer/SearchResult using named groups, cleanup/"
,,0.1619,Frostwire,[android] bug fix on song fragments clicking on a song that was already being played would not open the music player screen. other cleanups/
,,0.0854,Frostwire,[android] apollos FavoriteStore and RecentStore optimizations Should avoid possible NPE in addSongId/
,,0.0792,Frostwire,[android] avoid crashes with NotificationManager (SecurityExceptions Issue
,,0.3084,Frostwire,"[android] MediaPlayer, factored mediaplayer async calls into single class/[android] issue avoid ANR updating remote control client playback state/[android] MusicPlaybackService.MultiPlayer flatened/[android] avoid context leak int MuscPlaybackService#updateNotificationAsync background task/[android] avoid context leak int MuscPlaybackService#setDataSourceImpl background task/[android] capturing only IllegalStateException and StaleDataException (partial revert of ANR/MusicPlaybackService.start fix Make sure mCurrentMediaPlayer.start() never occurs in main thread, where it can some times take too long performing isDrm() checks./[android] bug fix on song fragments clicking on a song that was already being played would not open the music player screen. other cleanups/[android] MusicPlaybackService.notifyChange() refactor/optimizations Make sure notifyChange logic always runs in background thread Avoid unnecessary database re-querying Invert string.equals() comparison to avoid possible NPEs/[android] MusicPlaybackService.changeQueueAsync refactor. isFavorite() deadlock avoidance The change on isFavorite() to not synchronize on the whole object is to help avoid the ANR reported on issue when notifyChange() is called, which is called quite a lot. A refactor on notifyChange() is coming/[android] crash fix on MusicPlaybackService (Issue"
,,0.1199,Frostwire,[android] bugfix: resume audio playback in case interstitial takes audio focus/
,,0.1019,Frostwire,[android] avoid context leak on MoPubAdNetwork.loadMoPubInterstitial/[android] ANR loading MoPub interstitial/
,,0.1866,Frostwire,"[android] Fix onResume interstitial display bug when app was minimized/[android] Less interstitial ads MainActivity and Search interstitials now share the same timestamp, this way we avoid all possibility of back to back interstitials/"
,,0.3508,Frostwire,[android] transfers selected tab on rotation bug fix/[android] ScrollListeners refactor./[android] Transfers > Seeding Views to encourage seeding Makes the new Seeding tab user experience a lot better when we can detect things like: is seeding disabled? or are there any transfers we should be seeding? Cleanup and fixes on TransfersFragment/[android] TransfersFragment cleanup & formatting/[android] Transfers > Seeding tab/
,,0.2243,Frostwire,[android] Issue ImageViewerActivity: Swipe to the next/previous picture (#612)/[android] typo/[android] Open Menu Action to open image with external Image Viewer (#586) * [android] Open Menu Action to open image with external Image Viewer Issue * [android] removed unncessary ëinFullScreenModeí from the ImageViewerFragment * [android] removed unnecessary characters put in by mistake/
,,0.1811,Frostwire,"[android] ScrollListeners refactor./[android] SearchFragment avoid context leaks/[android] using execute instead of submit to avoid unused creation of Future objects/[android] search fragment header banner (#573)/[android] bring back ratings reminder, simpler logic. cleanup./"
,,0.2151,Frostwire,"[android] make sure update icon is shown on first run if update available/[android] extracted SoftwareUpdaterDialog out of SoftwareUpdater/[android] consider when the last session started for the onResume Interstitial timeout duration/[android] search fragment header banner (#573)/[android] vpn offer name fix, remote vpn offer config/"
,,0.0686,Frostwire,[android] fix of context leak in prepareOnMediaScannerConnectedRunnable/
,,0.0891,Frostwire,[android] LocalSearchEngine minor cleanup/
,,0.3313,Frostwire,"[android] SeedAction can now be used to seed all finished transfers. Fixes bug where top menu seed all wouldnt show the dialogs pertinent to bittorrent off or seeding off. TransferFragment menu action now reuses SeedAction SeedAction cleanup, formatting and Context-leak avoidance maintenance/[android] Fixed context leak detected in SeedAction.onClick()/"
,,0.336,Frostwire,"[android] issue 594, shows transfer while fetching torrent (#596) Also, when transfers are removed the transfer list is now refreshed immediatly./[android] Transfers > Seeding tab/[android] cleanup/[WIP] additional ëno resultsí text on search for when connection Ö (#567) * [android] additional ëno resultsí text on search for when connection is not available. only when no Wifi and Data are available at the moment. * [android] NetworkManager broadcast listener refactor, integration with SearchProgressView (1st leg) * [android] wording on more results * [android] get rid of extra broadcast receiver, thanks * [android] show snackbar on search fragment when connection dropped Transfers already have a few way of showing, so not adding it there yet * [android] update link to more results url * [android] flip string checks, add default switch case * [android] NetworkManager parameter refactor, url fix/"
,,0.3656,Frostwire,"[android] reduce on-resume interstitial delay to 2 secs 20 secs gave a real bad experience/[android] make sure update icon is shown on first run if update available/[android] move updateNavigationMenu() call out of setupDrawer() avoid possible infinite loop/[android] MainActivity update system fixes Made BroadcastReceivers static classes with weak references to activity to avoid any possible memory leaks Persist an updateAvailable boolean state to update nav menu with upgrade icon notification. updateNavigationMenu(bool) check is also done when instantiating a new nav menu cleaned constructor of unnecessary ""this."" notation rearranged member declarations, simpler (smaller sized) types to the top/[android] using LocalBroadcastManager for update notify instead of hard type dependencies and strong references between components/[android] consider when the last session started for the onResume Interstitial timeout duration/[android/bugfix] issue that showed first ad ever way too soon/[android] issue 594, shows transfer while fetching torrent (#596) Also, when transfers are removed the transfer list is now refreshed immediatly./[android] using execute instead of submit to avoid unused creation of Future objects/[android] Fix onResume interstitial display bug when app was minimized/[android] avoid back to back interstitials/[android] search fragment header banner (#573)/[android] delay onResume ad/[android] Less interstitial ads MainActivity and Search interstitials now share the same timestamp, this way we avoid all possibility of back to back interstitials/"
,,0.0957,Frostwire,[android] string refactors. VPNStatusDetailActivity templeteable/
,,0.0751,Frostwire,[android] avoid crashes with NotificationManager (SecurityExceptions Issue
,,0.1413,Frostwire,[android] bugfix: resume audio playback in case interstitial takes audio focus/
,,0.0801,Frostwire,[android] code cleanup/
,,0.3243,Frostwire,"[android/issue-637] Showing songs instead of albums in recent player tab (#638) * [android][WIP] issue 637 Showing song instead of albums in recent player tab * [WIP] Code compiles. Having problems with closing a cursor. * [WIP] Project compiles. Add songs to the Recent Fragment and plays as expected. Need more work to put song related information on screen * [WIP] Changes to save track duration correctly * [WIP] Fixes in RecentSongLoader * [WIP] Reusing existent interface to get song field names * [WIP] Adding licenses and cleaning up * [WIP] Removing unnecessary classes to save some symbols. RecentSongLoader removed, all the functionality was added to RecentLoader. RecentSongStore class removed, all funcionality was added to RecentStore * [WIP] Removed BaseSongFragment. RecentFragment inherits from ApolloFragment directly. Removed menu for View as in Recent tab * Removed getLastSongForArtist because isnt used * [WIP] Cleaning up * More cleaning. Updating docstring * [WIP] choosing a better name for last time played column. * Minor Fixes requested by * [WIP] Calling restartLoader using force equals in order to update the Recent list without reload the Fragment * [WIP] Almost there, fixing odd behavior in Recent List * [android] lambda refactor, NPE checks on SongAdapter * exec improvements. reloading data in a different thread./"
,,0.0833,Frostwire,[android] When a song is shared attach a screenshot of the player/
,,0.0599,Frostwire,[android] more apollo ImageFetcher code cleanup/
,,0.1142,Frostwire,[android] MyFilesFragment AsyncTask refactor/[android] apollo ImageCache AsyncTask refactor/
,,0.0577,Frostwire,[android] more trivial apollo cleanup/
,,0.3646,Frostwire,"[android] MusicPlaybackService maintenance Avoid possible crash if Power Manager cant be obtained Avoid possible crash obtaining a lock on mFavoritesCache null, do not synchronize non-final objects/[android/issue-637] Showing songs instead of albums in recent player tab (#638) * [android][WIP] issue 637 Showing song instead of albums in recent player tab * [WIP] Code compiles. Having problems with closing a cursor. * [WIP] Project compiles. Add songs to the Recent Fragment and plays as expected. Need more work to put song related information on screen * [WIP] Changes to save track duration correctly * [WIP] Fixes in RecentSongLoader * [WIP] Reusing existent interface to get song field names * [WIP] Adding licenses and cleaning up * [WIP] Removing unnecessary classes to save some symbols. RecentSongLoader removed, all the functionality was added to RecentLoader. RecentSongStore class removed, all funcionality was added to RecentStore * [WIP] Removed BaseSongFragment. RecentFragment inherits from ApolloFragment directly. Removed menu for View as in Recent tab * Removed getLastSongForArtist because isnt used * [WIP] Cleaning up * More cleaning. Updating docstring * [WIP] choosing a better name for last time played column. * Minor Fixes requested by * [WIP] Calling restartLoader using force equals in order to update the Recent list without reload the Fragment * [WIP] Almost there, fixing odd behavior in Recent List * [android] lambda refactor, NPE checks on SongAdapter * exec improvements. reloading data in a different thread./[android] revert System.arraycopy Android Studio fixes, array out of bounds ensued left and right/[android] MusicPlaybackService cleanup/"
,,0.1121,Frostwire,"[android] MyFilesFragment lambda cleanup, warning cleanup/"
,,0.1625,Frostwire,"[android] refactor notification of no network notification Now the communication happens the android way, type decoupled and no inner visual component like SearchProgressView has any responsibility on it./[android] inner rename refactor in MainActivity/[android] lambda, if unwrap, explicity type cleanup/"
,,0.6499,Frostwire,"[WIP] Frostwire 2.0 (#624) * [android] new layouts for the transfer detail pages * [android] initial set up for the transfer detail activity * [android] added toolbar menu to TransferDetails * [android] Extended AbstractFragment from the remaining transfer detail screens * [android] cleanup in TransferDetailActivity * [android] added status tab to transfer details, code cleanup * [android] added status layout to torrent details, layout code cleanup and headers * [android] added resource values for transfer detail activity * [android] removed unnecessary styles * [android] adjusted style of the view_transfer_list_item * [android] replaced missing style in view_transfer_item_list_item.xml * [android] minor adjustement in dividers of view_transfer_list_item.xml * [android] Transfer detail fragments reused. cleanup on fragment classes * [android] TransferDetailActivity refactor. New AbstractTransferDetailFragment. * [android] remove setContext hack, do it the android way * [android] cleanup * [android] TransferManager::getBittorrentDownload(String infoHash) * [android] plugged BittorrentDownload object all the way to fragments Common section with title and progress plugged. Next transfer status and upload/download speed in that common section * [android] plugged transfer status string into common progress component New TransferStateStrings singleton class to map transfer states to strings TransferListAdapter refactored to use new TransferStateStrings * [android] plugged download and upload speeds on common progress panel * [android] transfer detail > status > Completed plugged renamed some of the textviews to have a _label suffix * [desktop] CommonUtils cleanup * [android] Transfer Detail > Status > Time remaining plugged * [android] Transfer Details, Status tab done * [android] abort updateDetailProgress when transfer is null * [android] transfer details layout cleanup * [android] adding a recyclerview to Details, moved mock layout for its views to fragment_transfer_detail_files_recyclerview_item.xml * [android] plugged number of files and total download size on FILES tab * [android] started pluggin ReciclerView, still not working * [android] got files showing on details > files. main transfer list broken, might transition to recycler view here too, testing with ListViewCompat (v7) * [android] cleanup * [android] cleanup * [android] TransferFragment RecyclerView refactor (broken) * [android] RecyclerView on TransfersFragment working * [android] cleanup, component lookup optimization in Transfers Fragment * [android] Progress on Transfer Detail > Details fragment * [common] BTDownload.getTorrentHandle() * [android] Details > Details > Comment section handled * [android] Transfer Detail > Details tab. Just have an issue with the Sequential Download checkbox * [android] updated torrent_details_files * [android] progress on Transfers Details > Trackers tab * [android] updated transfer detail trackers fragment layout * [android] new UIUtils.showEditTextDialog * [android] Transfer Detail > Trackers can add trackers to torrent * [android] fixed width issues with individual tracker layout * [android] minor refactor on TransferManager * [android] TransferDetailStatusFragment doesnt crash on rotation * [android] broken progress towards adding/editing trackers * [android] fix another on rotation crash * [android] uiBittorrentDownload is serialized and deserialized on screen rotation * [android] set adapter after youve set the layout manager * [android] adds and deletes trackers * [android] trackers can be removed. edit text dialog can be configured for single/multi line * [android] fixes issue where recycler views would not show items when tabs switched * [android/build] build.gradle flavorDimensions update for Android 3.0 * [android/build] build.gradle flavorDimensions update for Android 3.0 * [android] Transfer Details > Peers tab working * [andriod] fixed build.gradle to use new plugin 3.0.0 DSL * [android] Details tab cleanup. Removed Seeding On checkbox. That can be handled with action bar controls for seeding/pausing Dialog button handlers now use lambdas * [android] dont refresh tab if not visible cleanup * [android] Transfer Details > Pieces tab (not working correctly) Also lint cleanup on the activity and related fragments * [android] few minor changes to transfer detail layouts * [android] added and updated icons for the view_transfer_list_item * [android] set up for the right side transfer item actions * [android] pieces colors work, had to do r.getColor(). refactor * [android] First pass at setting the media type icon on transfer list items * [common] BittorrentDownload::getPredominantFileExtension() * [android] uses BittorrentDownloads getPredominantFileExtension() to determine transfer media icon * [android] show missing /s on transfer detail speed indicators * [android] warning cleanup on ClickAdapter<T> * [android] Details button on TransferListAdapter works. TransferListAdapter refactored so that we only have a single instance for every click listener, not individual listeners for every view created * [android] found inconsistency between download and upload rate unlimited values in libtorrent, cleanup * [android] fixed overlapping of the text on view_transfer_detail_peer_item * [android] updated TransferDetailDetails dialog title * [android] added appropriate padding to the pieces view in transfer detail * [android] fixes rotation crashes. refactors to deal with rotation if for some reason getting pieces takes a while, an indeterminate progress bar is shown in place of the pieces other rotation bugs fixed, more robust behavior * [android] files becomes the first, and default selected tab * [android] remove timer subscription responsibility from fragments Use only one TimeObserver subscriber defined in the TransferDetailActivity. Fragments still implement TimerObserver, have the single subscriber instance invoke the fragments onTime method only on the currently active fragment * [android] SectionsPagerAdapter doesnt need to keep a reference to activity Just pass a SparseArray with the string resources it actually needs Implements a new OnPageChangeListener that keeps track of what the current fragment is When current fragment changes invoke onTime() on it Implements TimerObserver on the activity which delegates an onTime() call to the current fragment * [android] isVisible() check no longer necessary also found out that in some cases, isVisible() would give a false negative * [android] more work towards avoiding issues on rotation and fast tab changes * [android] import cleanup, if unwraps * [android] stick to empty default constructors on YouTubeDownloadDialog * [android] lint warnings, import cleanups * [android] semi-aldenization of fragment code, still rotation issues * [android] move all init calls to initComponents * [android] cleanup. still issues on rotation, fragments not being added after rotation * [android] finally resolved rotation issue It seems the pager adapter and the programatic approach to adding transfers ended up in fragments not being able to be tracked correctly by their tags when the activity was reloaded. Some of the fragments we ended up with inside detailFragments[] wouldnt be added, however, we luckily have methods in the parent AbstractFragment class to keep track of fragments that have been added (since Android only provides these after API 21 or so), by looking at the added fragments Im able to find the correct instance and replace it inside our internal detailFragments array. Writing this commit message makes me want to use that list, and get rid of the internal detailFragments array, to keep track of the fragments used, they could easily be filtered if theyre instances of AbstractTransferDetailFragment * [android] edit text dialog is now an extension of AbstractDialog * [android] EditTextDialog moved to its own file, handles screen rotation * [android] removed unused vars * [android] rotation bug finally fixed * [android] inline call * [android] Transfer > Status > Time left only shown when downloading * [android] transfer detail tab layout cleanup * [android] transfer details details speed limit dialog issues When transfers are first created their upload/download rate limits come as When you want to set them to for unlimited, this does not go well. You have to use 0 for unlimited, after that, they return 0 Added a dialog closed listener that refreshes the fragment on close so new rate limit is reflected on the ui right away * [android] remove tracker dialog look is uniform. UIUtil.showYesNoDialog now uses YesNoDialog. * [android] dont hide time left textview, show 0 instead * [android] progress with transfer details action bar menu * [android] logic fix with pause/resume action bar action * [android] updated action bar icons, added new resume aciton bar icon * [android] removed double resume action That action is not on the main branch, it was added later it said resume but it was starting to seed even with seeding settings off. * [android] updated icons for resume and cancel context menu action * [android] added action bar seed icon * [android] removed repeating action menu option * [android] fixed and updated action_bar_seed icons Sorry saved them with a wrong setting, looked pixelated * [android] better logic on pause, resume, seed * [android] added clear option on details. cancel menu action uses the proper icon depending on the parameters * [android] removed Open action from details, files are already there for individual access * [android] added action_bar_stop_transfer icon * [android] seeding|pausing made left most action. delete transfer sent to the context menu and cancel transfer the 2nd action shown only if room is available * [android] use SeedAction when seedable * [android] Update Translation: Spanish * [android] Update Translation: Portuguese * [android] start of HexHiveView for piece display, bye RecyclerView in this fragment * [android] detail pieces layout cleanup * [android] updated files and trackers layouts RecyclerViewer no longer moves independently from the rest of hte scroll view better user experience on small screens and horizontal views. Fixed the files tab to open lower then top of the page. The issue was connected to recycleviewer receiving the focus. * [android] calculate height of other components to correctly measure height for hexhiveview * [android] HexHiveView sizing issues fixed No need to manually calculate bounds when the containing layout is simpler fragment_transfer_detail_pieces no longer inside ScrollView, no need to scroll as our HexHiveView will only use remaining vertical space To make this work, view_transfer_detail_progress now has a fixed height, otherwise the folder icon would go towards the center of the screen * [android] fix to the height of the detail_progress layout * [android] very wip hex drawing experiments * [android] Update Translations: French and Italian * [android] HexView advances New DrawingProperties object is used to create buffer objects and useful constants for drawing the hexagonal hive drawing functions refactored to reduce the number of parameter copies on each onDraw iteration more cleanup to be done, gotta take into consideration real pixel width of hexagon borders when moving along the hive * [android] hex fill logic implemented, wip, more fixes needed to calculate right max hex side length * [android] fixed color assigment bug, only repaint when number of pieces downloaded has changed * [android] made debug drawing an XML attribute. Better aproximation on desired hexagon length, still need to account for maximum rows. * [android] simplifications * [android] unneded file * [android] 2.0.0 (beta) build 473 * [android] stricter checks initializing UIBittorrentDownload * [android] no need to import Objects * [android] Update Translation: German * [android] NPE bullet proofing My guess is that the NPE reported on detailProgressStatusTextView.setText(transferStateStrings.get(uiBittorrentDownload.getState())); wasnt due to the view being null, but to the transferStateStrings object being null due to possible synchronization issues with TransferStateStrings.getInstance() To make sure this doesnt happen, I perform another check later on, and if weve been wrongly assigned a null value, we request the singleton again. * [android] rebasing left-overs * [android] math brainfart calculating Y position of rows fixed * [android] hex hive drawing fixes * [android] cube-piece drawing support * [android] upgrades dont animate tabs when touching tab title new CubePaint object extends Paint and calculates and keeps colors for dark left cube face and light top face out of the given fill color which is used on the right side face * [android] adds URL validation when adding or editing trackers * [android] fix bug with active time and seeding time calculation when context menu actions are invoked they invoke onTime() on the underlying activity (Context that implements TimerObserver) cleanup * [android] s/delete/remove torrent and data/ menu entry * [android] cleanup * [android] avoid Runtime error trying to open transfer with no infoHash/"
,,0.0998,Frostwire,[android] attempt to fix the ANR caused by io.presage.receiver.NetworkChangeReceiver/
,,0.087,Frostwire,[desktop] minor code cleanup/
,,0.1201,Frostwire,"[android] raise timeout to 20 seconds. 12 users reported BTEngine.ctx null at com.frostwire.android.gui.transfers.TransferManager.run (TransferManager.java:578) Galaxy J7, Xperia XA, Galaxy S8. All on Android 7.0/[android] Synchronize early access to BTEngine.instance() while .ctx is being built with CountDownLatch/"
,,0.1,Frostwire,[android/desktop] changelogs. [desktop] messages.jar/
,,0.0686,Frostwire,[common] LimeTorrentsSearchPerformer fix/
,,0.1339,Frostwire,[common] fixed yi-fi/[common] minor code refactor/[common] Zooqle search fixed/
,,0.0849,Frostwire,[common] Zooqle search fixed/
,,0.0828,Frostwire,[android] more mopub fixes/[android] AudioPlayerActivity async refactors/
,,0.066,Frostwire,[android] moving towards less use of nonsensical AsyncTask/
,,0.1219,Frostwire,"[android] Use NotificationCompat.Builders new constructor It receives the channel ID, so no need for fragmentation verification ifs./[android] Notifications work on Android 8.0 Issue apollo NotificationHelper fixes remove unused parameter remove unnecessary final keyword catch possible IllegalArgumentException exception on service.startForefound/"
,,0.2985,Frostwire,"[android] capture IllegalStateException in MusicPlaybackService#openFile/[android] make sure that MusicPlaybackService#onCreate runs strict/[android] give some room to the application to recover from OOM in changeRemoteControlClientTask/[android] bug fix, notification music player goes away when music fully stopped on miniplayer thanks Android Oreo(8) notification issues fixed/[android] NPE on MusicPlaybackService.initNextMediaPlayer/[android] lambda to method reference refactor/[android] NPE on MusicPlayer::playSimple/[android] core refactor in MusicPlaybackService/[android] enable position interaction API for remote control/[android] MusicPlayback service (last) setDataSource task async refactor/[android] MusicPlaybackService MediaPlayerRunnable async refactor/[android] MusicPlaybackService changeRemoteControlClientTask async task/[android] MusicPlaybackService remoteControlClientSetPlaybackState task refactor/[android] MusicPlaybackService notifyChange task, recentsStoreAddSongId task async refactors/[android] MusicPlaybackService cancelShutDown task async refactor/[android] MusicPlaybackService updateNotificationTask async refactor/[android] array out of bounds exception getting next song in shuffle mode aparently theres a possibility for mHistory to change its size during those iterations, to avoid the issue Ive made a copy of it and iterate over the copy/"
,,0.19699999999999998,Frostwire,[android] refactor prebid onBanner<Load|Failed> integration to a single liner/[android] SearchHeaderBanner listener onBannerFailed prebid logic/[android] PreBid integration on Search Header Banner Also NPE protection before inflating search header banner view/
,,0.0819,Frostwire,[android] 1 ConfigurationManager.instance() call per method/[android] force ad disablement right after update or on first session ever/
,,0.1667,Frostwire,[android] So long AbstractTask and ContextTask/[android] tab switching should occur on UI thread/[android] s/invokeAsync/async/[android] TransfersFragment invokeAsync refactor/[android] CalledFromWrongThreadException on TransfersFragment.updateTransferList/[android] ANR on TransfersFragment.onTime()/
,,0.1248,Frostwire,"[android] So long AbstractTask and ContextTask/[android] s/StartDownloadTask/AsyncStartDownload refactor Favors use of Asyncs api over buggy ContextTask/[android] remove AsyncTask in favor of our async function LoadSlideTask wasnt executed on the second run, not sure why. Maybe Android 8 restrictions/"
,,0.073,Frostwire,[android] update Config threshold defaults/
,,0.1102,Frostwire,[android] 1 ConfigurationManager.instance() call per method/[android] delete torrent from provider when deleting all files from torrent/
,,0.0813,Frostwire,[android] s/invokeAsync/async/[android] refactor in DeleteFileMenuAction#deleteFiles to use adapter as the context/
,,0.0972,Frostwire,[android] better fix for YesNoDialog clicklisteners/[android] Bug fix handling YesNoDialogs without positive or negative custom listeners/[android] YesNoDialog.setOnDialogClickListeners refactor/
,,0.2554,Frostwire,[android] MainActivity cleanup Dice roll refactor to use UIUtils.diceRollPassesThreshold NPE warnings fixed Removed TODO/[android] IllegalStateException on MainActivity.switchContent/[android] s/invokeAsync/async/[android] 2nd part of MainActivity::checkSDPermission async refactor. Thanks MainActivity. checkSDPermission + onDownloadCompleteNotification asyncInvoke refactors/[android] Issue Dont hog the main thread checking SD permissions on resume/
,,0.0874,Frostwire,[android] s/invokeAsync/async/[android] CalledFromWrongThreadException crash on NavigationMenu.refreshMenuRemoveAdsItem/
,,0.2156,Frostwire,"[android] VPN suggestion updates (#681) * [android] added new strings, drawables and vpn images * [android] updated text and layout of vpn page * [android] further vpn page adjustments readded vpn_button_background_selector after previous deletion * [android] added strings, updated vpn buttons * [android] updated headers/"
,,0.3602,Frostwire,"[android] Use NotificationCompat.Builders new constructor It receives the channel ID, so no need for fragmentation verification ifs./[android] Notifications work on Android 8.0 Issue EngineService async refactors, no warnings. ResumeBTEngine async refactor Component enabling async refactor Notification cancellation async refactor Permanent Notification Updates start async refactor null checks syncrhonization on local variable warning fixed/[android] compilation fix/[android] One last ANR on EngineService.onStartCommand and fixes Moved the start of the NotificationUpdateDemon to a background thread, it was the only ANR coming out of here with the last build. Since shutdownSupport is already a background thread no need to spawn more subthreads for component disable and NotificationCanceller Added some try/catch protections on all those methods to avoid unexpected crashes during startup/shutdown/[android] Cancel All Notifications refactor on EngineService When starting the app the main thread could be held gettings the notification system service, which in android 7 has the possibility of a security exception (catched already), then all notifications are asked to be cancelled. This code was repeated also when shutting down, also on the main thread This has now been moved to a background runnable to make startup and shutdown faster to the user./[android] ANR on EngineService.enableComponents() Note: Maybe we should remove the code that asks for Killing Ogury on Exit, I dont think well be changing that, and that was the cause of the ANR/[android] dont stop what hasnt started Thanks Dont hold back early exit/[android] EngineServices BTEngine resume call and state change occur in background thread It was possible for this method to lock the UI thread on startup/[android] ANR on EngineService components startup Issue"
,,0.2468,Frostwire,"[desktop] transfer tab title, filter text and buttons in the same row/[desktop] transfer splitter wont be at bottom for new transfers/[desktop] transfers splitter behavior as expected/[android] TransferDetail components foundation laid out New TransferDetailComponent is the holder component. It has a JToggleButton row to control which is the currently visible detail JPanel component. It can remember which one was the last component shown, it does so using a StringSetting (UISettings.LAST_SELECTED_TRANSFER_DETAIL_JPANEL)/"
,,0.1061,Frostwire,"[desktop] when transfers are started they remain selected, cleanup./"
,,0.1236,Frostwire,[desktop] rename refactor showDetails->showSearchResultWebPage Ive renamed this method so its not confused with showing torrent transfer details components/
,,0.1162,Frostwire,[common/desktop] Yify search fixes/
,,0.1222,Frostwire,[common/desktop] Yify search fixes/
,,0.2573,Frostwire,[android] Music player saves shuffle preferences Fixes also an array out of bound when trying to play the first song of a playlist when the last shuffle mode was true. Other refactors./[android] Fix empty message for playlist detailed view (#721) * [android] Fix empty message for playlist detailed view * [android] Changing empty text for PlaylistSongFragment * [android] Cleaning up imports. Using the default constructor/
,,0.1569,Frostwire,[android] Songs can be reordered in Queue Fragment (#728) [android] Songs can be reordered in Queue Fragment/
,,0.3937,Frostwire,"[android] AudioPlayer activity MoPubBannerView refactor/[android] Music player saves shuffle preferences Fixes also an array out of bound when trying to play the first song of a playlist when the last shuffle mode was true. Other refactors./[android] Less intrusive interstitial ads (#726) * [android] No more interstitial on resume No interstitial should be done before a transitional action, otherwise its too annoying and gets in the way of the user experience [android * [android] ok pro-guard rules * [android] interstitial logic on back pressed * [android] interstitial logic on nav menu other fixes and code added for APIs completion and consistency on MainController and MainActivity/"
,,0.1843,Frostwire,[android] Music player saves shuffle preferences Fixes also an array out of bound when trying to play the first song of a playlist when the last shuffle mode was true. Other refactors./
,,0.4053,Frostwire,"[android] NPE protections/[android] Fixes Illegal arg exception on random.nextInt()/[android] Songs can be reordered in Queue Fragment (#728) [android] Songs can be reordered in Queue Fragment/[android] Music player saves shuffle preferences Fixes also an array out of bound when trying to play the first song of a playlist when the last shuffle mode was true. Other refactors./[android ] Remember randomly played songs (#725) * [android] Cleaning up the player from the all shuffle stuff. No shuffle implementation functionality at this point"" * [android] Updated mechanism to get and set shuffle mode on and off. * [android] Introduced new logic for next and back in shuffle mode * [android] Rename method getShuffleMode to isShuffleEnabled, parameter shuffleMode to shuffleEnabled. mShuffleMode to mShuffleEnabled/[android] Album > Song (Long Press) > Add to Playlist Now shows mini-player view once the song has been added. Will not automatically start playback the first time a song has been added to the queue./"
,,0.2215,Frostwire,"[android ] Remember randomly played songs (#725) * [android] Cleaning up the player from the all shuffle stuff. No shuffle implementation functionality at this point"" * [android] Updated mechanism to get and set shuffle mode on and off. * [android] Introduced new logic for next and back in shuffle mode * [android] Rename method getShuffleMode to isShuffleEnabled, parameter shuffleMode to shuffleEnabled. mShuffleMode to mShuffleEnabled/"
,,0.3697,Frostwire,"[android] new home screen banner unit id/[android] Less intrusive interstitial ads (#726) * [android] No more interstitial on resume No interstitial should be done before a transitional action, otherwise its too annoying and gets in the way of the user experience [android * [android] ok pro-guard rules * [android] interstitial logic on back pressed * [android] interstitial logic on nav menu other fixes and code added for APIs completion and consistency on MainController and MainActivity/[android] MoPub 5.0.0 updates/"
,,0.1119,Frostwire,"[android] using internal PrebidManager application context in calls to attachBids. It happens that although not documented, the context in attachBids is used in multiple places internally, and a context leak is possible if its not an application context./[android] improved ergonomics in PrebidManager#getInstance to ensure an application context is used/"
,,0.3479,Frostwire,"[android] mopub consent dialog refactor No longer called on MainActivity.onResume, only once MoPub has actually been initialized inside MoPubAdNetwork, therefore we no longer need Offers.initAdNetworks() to return boolean/[android] fixed compilation issue/[android] readyForAnotherInterstitialAsync optimization dont bother checking all the other stuff if the session didnt start long enough ago/[android] Less intrusive interstitial ads (#726) * [android] No more interstitial on resume No interstitial should be done before a transitional action, otherwise its too annoying and gets in the way of the user experience [android * [android] ok pro-guard rules * [android] interstitial logic on back pressed * [android] interstitial logic on nav menu other fixes and code added for APIs completion and consistency on MainController and MainActivity/"
,,0.0933,Frostwire,[all] update to jlibtorrent 1.2.0.18-RC9/
,,0.174,Frostwire,[android] new home screen banner unit id/[android] avoid crash on KitKat showing mopub banner/[android] mopub banner on promotions view/
,,0.0664,Frostwire,[android] class rename refactor/
,,0.0801,Frostwire,[android] MoPub GDPR consent dialog integration/
,,0.0643,Frostwire,[android] PreviewPlayerActivity MopubBannerView refactor/
,,0.071,Frostwire,[android] ANR fix on loadMopubInterstitial/[android] shutdown logic revision/[android] more mopub/admob integration/
,,0.2188,Frostwire,"[android] MopubBannerView repairs Avoid ANRs, dont perform banner load on main thread Support for fallback banner loaded/dismissed listeners Dont use the banner onLoadListener after you load the fallback banner Do not destroy the banner onLoadFailed otherwise further banners cannot be loaded No need to keep reloading the fallback banner over and over onDismissBannerOnClickListener refactor and use of possibly given banner and fallback banner dismissed listeners used/"
,,0.1135,Frostwire,[android] only scan the contents folder on download finished removed hack to not scan one minute after starting/[android] Dont scan file system until one minute has passed from the last restart Otherwise it can take too long to load previous transfers/
,,0.155,Frostwire,"[android] SwitchPreference rendering issues fixed after sdk 28 min sdk bumped from 16 to 19 (android 4.4, app didnt really work on 4.1 and very little installs)/[android] refactor EngineService.foregroundStartForAndroidO Engine.foregroundServiceStartForAndroidO/[android] Android O services now should be started in foreground/"
,,0.1102,Frostwire,[android] save main thread cycles on ImageLoader.load/[android] NoSuchMethodError caught in ImageLoader.calculateDiskSize can occur in very old Android 4.2 now that weve upped the target/
,,0.0657,Frostwire,[android] revert async mopubBannerView.loadMoPubBanner call when view was destroyed not being on the main thread would cause the app to crash/[android] fix ANR on PromotionsAdapter loading mopub view/
,,0.1102,Frostwire,"[android] Engine.startService() refactor for ContextCompat.startForegroundService/[android] refactor EngineService.foregroundStartForAndroidO Engine.foregroundServiceStartForAndroidO/[android] EngineService::foregroundStartForAndroidO refactor Sorted declarations by encapsulation modifier in EngineService, prettification of the code/"
,,0.1137,Frostwire,"[desktop] java7 explicit types fix/[desktop] declarations made final/[desktop] cleanup empty methods, encapsulation fixes/[desktop] azureus code cleanup/"
,,0.0786,Frostwire,[desktop] unused code cleanup/
,,0.0899,Frostwire,[desktop] code formatting/[desktop] unused media player code cleanup/
,,0.1204,Frostwire,"[android] play-services-ads:18.1.0, Android X migration, Pixabay cleanup/"
,,0.1163,Frostwire,"[android] play-services-ads:18.1.0, Android X migration, Pixabay cleanup/"
,,0.1163,Frostwire,"[android] play-services-ads:18.1.0, Android X migration, Pixabay cleanup/"
,,0.1163,Frostwire,"[android] play-services-ads:18.1.0, Android X migration, Pixabay cleanup/"
,,0.1196,Frostwire,[android] Fallback to opening frostwire.com if update dialog cant open the update .apk/
,,0.1183,Frostwire,"[android] play-services-ads:18.1.0, Android X migration, Pixabay cleanup/"
,,0.1183,Frostwire,"[android] play-services-ads:18.1.0, Android X migration, Pixabay cleanup/"
,,0.1142,Frostwire,"[android] play-services-ads:18.1.0, Android X migration, Pixabay cleanup/"
,,0.0643,Frostwire,[android] Fixes issue fixes on EngineService startup/shutdown/
,,0.0588,Frostwire,[android] fixes on EngineService startup/shutdown/
,,0.1571,Frostwire,"[common] SC client_id update, fixes issue SC fixes avoid deserialization NPE when media null resolve url updated multitrack download fixes/[common/all] SC search updates/"
,,0.1375,Frostwire,"[android] dont show album art behind ad when switching songs/[android] crash only if on debug build/[android] simplifications and optimizations of mopub banner on audio player activity Thread.sleep() even done on another thread, kept slowing down the main thread for some reason, or just holding the execution on the threadpool, perhaps its a single threaded pool? hmm A deep revision on MopubBannerView, ongoing work but a lot better than yesterday/"
,,0.414,Frostwire,"[android] Save to playlist fixed, build 624/[android] Major MusicPlaybackService overhaul The most important playback issues are gone, playback continues through playlist, repeat modes work Theres still a glitch on the very first song played, gotta hit play again, will fix Now MusicPlaybackService is supposed to receive all of its background calls, or perhaps, all calls routed through its MusicPlayerHandler Thread/Loop. If all calls are routed through this queue, there should be no need to synchronize any resource and there should be no unexpected behaviors. No more expensive synchronized blocks, no more deadlocks. synchronized is evil. Also, no more anonymous callbacks, or nested callbacks. Since everything is done on the background and it doesnt block the UI thread, all methods that used to receive callbacks now return boolean, true for sucess, false for failure, usually on success callbacks are acted upon. Some callbacks used to get boolean results, its now very functional or a la go-lang, keep it simple stupid. anonymous callbacks, dynamic runnables and lambdas are also hard to debug/trace, its perhaps a bit more verbose but its clean and easy to read in stack traces and to step through in the debugger. Still a lot more to fix: album art not loading properly in song adapter or music activity/[android] IApolloService...??so long No need for inter process communication, stupid over complexity that leads to more uncertainty in this callback hell of a state machine. Good ridance/[android] Fixes issue where player would stop at the end of a song MusicPlaybackService is now decoupled from Asyncs.async/EngineThreadPool Do not compromise the performance of search and download when using the music player. Sending all background requests to a single HandlerThread in MusicPlaybackService makes things a lot simpler, less chances for race conditions if all requests are executed in the order theyre requested given all the synchronized blocks we inherited from Apollos codebase More fine grained intervals when notifying music player changes, depending on the change being notified There are still glitches with Repeat song mode, this code is full of overcomplexities that are hard to track down. My Music / Art Albums not loading Started debugging and doing a few fixes, album art isnt loading correctly for some reason/[android] MusicPlaybackService encapsulation fixes/[android] move image loader to its own dedicated HandlerThread This way the ImageLoader wont possibly hog the threads on EngineThreadPool and will run independently. ImageLoader.load was one of the most common Asyncs.async tasks used and would affect search and transfers performance/[common/android] Refactored (android) Async.Throttle (common) com.frostwire.util.TaskThrottle/[android] one less thread the old constraints dont apply anymore, now this service is started by the user on the first music playback, well after the engine thread pool has been created/[android] fixes after crash reports from 618 relaxed syncrhonization on entire MusicPlaybackService simplifications and cleanups multiplayer got lost (null)/[android] dont crash if you cant unbind serviceconnection listener on service shutdown/[android] cleanup/[android] cleanup/[android] bring back MusicPlaybackService initService latch/[android/apollo] Simplification of MusicPlaybackService lifecycle. Instead of constantly trying to cancel a shutdown alarm, the service is not started until its needed and stopped as soon as playback is fully stopped. Removed a bunch of unncessary stuff around that old logic/[android] bullet proof access to MusicPlaybackService::mPlayer (rare NPE crash fix attempt/[android] Fixes player notification bug where play/pause button wasnt refreshed on pause/[android] dont sweat Illegal State error onNotificationCreated()/[android] more on player notifications/[android] fix double notification issue/[android] long running music services gotta be started with startService, otherwise they will get killed/[android] use lock to access media remote control, which can trigger notifications/[android] MusicPlaybackService implements IApolloService/[android] Audio Player activity updates Improvements in thread usage and banner loading. We dont load banners unless the current song has played over 3 seconds, we do so after waiting 5 seconds/[android] MusicPlaybackService.java throttles background task submissions/[android] MusicPlaybackService updates AudioManager AudioFocusRequest based integration for Android O+ Dont call Engine.foregroundServicesStartForAndroidO(this), this seems to have been broken, it wasnt sending an icon and it included no information whatever the case we cant be using that mechanism. Initialization of repeat mode and shuffle is now done in an async task. This code would make use of the ConfigurationManager.instance() which can freeze the main thread if there are IO issues mAudioManager.abandonAudioFocusRequest(AUDIO_FOCUS_REQUEST_ for Android O+ cancelShutdown async tasks throttled to be spaced at least with 1 second in between notifyChange async task submissions are now throttled. META_CHANGE to 100ms, other changes to 200ms/"
,,0.0912,Frostwire,[android] PlayPauseButton async UI refresh optimizations/
,,0.0833,Frostwire,[android] dont try reloading rewarded video manually/
,,0.1136,Frostwire,"[android] com.unity3d.ads:unity-ads:3.4.0 new/[android] mopub-applovin adapter integration using mopub mediation dependency/[android] display test reward ad, hides ads, shows ads when time expires/"
,,0.1716,Frostwire,[android] AsyncStartDownload runs in an exclusive HandlerThread Search can occupy all of the 8 Asyncs threads and if the download is sent to that same queue it might take too long too start/[android] AsyncStartDownload: show transfers on main thread/
,,0.1991,Frostwire,[common/android] Refactored (android) Async.Throttle (common) com.frostwire.util.TaskThrottle/[android] SearchFragment cleanup and refactors/
,,0.1844,Frostwire,"[android] Fixes issue where an existing partial torrent transfer could not add more items from a .torrent in My files its not working 100% of the way, trying to figure out why the uiBittorrentDownload in the Transfer Detail fragment isnt updated all the times, it works most of the times. Gets wonky if the transfer is paused sometimes, but if you try again it will add all of the specified files. Gotta come back to this/"
,,0.0926,Frostwire,[android] addition of reward video payment option to BuyActivity/
,,0.0813,Frostwire,[android] dont try reloading rewarded video manually/
,,0.0807,OpenDDS,ChangeLogTag: Mon Mar 2 15:13:24 UTC 2015 Adam Mitz Fri Feb 27 22:55:08 UTC 2015 Adam Mitz Fri Feb 27 22:55:08 UTC 2015 Adam Mitz Mon Feb 16 23:19:42 UTC 2015 Adam Mitz Wed Jan 14 23:18:18 UTC 2015 Adam Mitz Wed Jan 14 21:11:32 UTC 2015 Jeff Schmitz Wed Jan 14 18:46:06 UTC 2015 Jeff Schmitz Fri Jan 9 16:16:41 UTC 2015 Jeff Schmitz Fri Jan 9 15:27:06 UTC 2015 Adam Mitz Thu Jan 8 22:37:55 UTC 2015 Jeff Schmitz Wed Jan 7 22:51:47 UTC 2015 Jeff Schmitz
,,0.0751,pljava,*** empty log message ***/*** empty log message ***/*** empty log message ***/Change of license text/
,,0.0929,realm-java,small update in error-text for Windows/Updated error-msg when we cant find the jni lib/Merge branch integration of github.com:nikuco/tightdb_java2 into integration Conflicts: src/main/java/com/tightdb/lib/TightDB.java/Better Error message when lib cant be loaded./Fixed library path configuration (issue
,,0.0979,realm-java,Make ViewHolder static./Fixed wrong usage of ViewHolder pattern. Fixed bad practise when inflating views./
,,0.0789,realm-java,Merge remote-tracking branch origin/master into nh-async-query/Milestone 4: before merging origin/master/Cleanup Group.java and SharedGroup.java/
