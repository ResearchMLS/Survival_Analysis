Topic_no,Keywords,Contrib,System,Text
15,"test, main_java, harmony_xnet, java_libcore, test_impl, provider_jsse, java_injecte, javax_net, support, change, apache_harmony, xnet_test, nativecrypto, native, object, openssl, common, java, sslparameter, method",0.8583,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.8596,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.858,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.8583,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.8608,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.8562,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.8593,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.8596,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.8574,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4995,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.0669,conscrypt,Set peer for new SSLSessionImpl instances. Bug:
,,0.8226,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.8299,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.8283,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.8226,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.815,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/Add a setHandshakeTimeout() to OpenSSLSocketImpl, which sets a read timeout that only applies to the SSL handshake step. Bug: 2362543/"
,,0.8262,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.15,conscrypt,Stop allocating empty arrays. Bug: 3166662 Change-Id: I151de373b2bf53786d19824336fa434c02b0b0e8/Make OpenSSLSocketFactory and SSLSocketFactory fields final Bug: 2954292 Change-Id: I4cad068d4da39a9c55ca25fad698f3ea136f2e24/am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.1667,conscrypt,am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.1667,conscrypt,am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.2424,conscrypt,"SSLParameters.getDefaultTrustManager() should lazily initialize its value Make SSLParametersImpls defaultKeyManager, defaultTrustManager, defaultSecureRandom, and defaultParameters all use the single check idiom for initialization. Move such initialization for defaultKeyManager and defaultTrustManager out of SSLParametersImpl constructor into static functions, replacing original getDefaultTrustManager simple accessor with code that performs lazy initialization. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java dirrect direct luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java hanshake handshake luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLRecordProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java Bug: 2954292 Change-Id: I19bae541613666903b57fccf3e8bfef65b74d6cf/am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/"
,,0.0905,conscrypt,"Retire SecurityManager. This change removes all the code that was calling getSecurityManager, and removes all use of AccessController.doPrivileged. It also changes the implementation of AccessController so it doesnt actually do anything; its only there for source-level compatibility. Bug: 2585285 Change-Id: I1f0295a4f12bce0316d8073011d8593fee116f71/"
