Topic_no,Keywords,Contrib,System,Text
6,"support, test, change, add, provider_jsse, remove, java, common, inject, update, native, enable, main, wilson_date, call, fix, pass, commit, net, request",0.4372,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4356,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4295,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4395,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4264,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4295,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4333,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4349,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4318,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4356,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.431,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.428,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4364,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4234,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4272,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4234,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4379,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4349,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4372,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4387,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4318,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4318,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4425,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4323,conscrypt,"Fix 32-bit int shifted >= 32 bits in SSLInputStream. This code isnt actually called by us, but its public API. Bug: 2099901/Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4211,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4295,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4333,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4303,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4387,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4287,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4387,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4425,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4364,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4341,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4356,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4287,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4249,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4379,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4326,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4249,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.4272,conscrypt,"Update x-net to Harmony r802921. Notable changes synchronization added where it was needed try/finally added to reliably tear down in DefaultSSLContext ContextImpl deleted, it wasnt necessary methods reordered to make statics first in the class PrivilegedActions parameterized with DigitalSignature now throws AssertionErrors in impossible states and throws AlertExceptions on invalid keys (rather than dumping a stacktrace) ValueKeys added to SSLSessionImpl instead of TwoKeyMaps SSLSessionImpl.clone() simplified to do a traditional clone Squashed commit of the following: commit 2d9e43d542ab7086af271bf52e847c582decbab1 Merge: 8b79eb4 a8dc377 Author: Jesse Wilson Date: Tue Aug 25 15:25:21 2009 Merge branch x-net_802921 into x-net_dalvik Conflicts: libcore/x-net/.classpath libcore/x-net/.settings/org.eclipse.jdt.core.prefs libcore/x-net/build.xml libcore/x-net/src/main/java/javax/net/DefaultServerSocketFactory.java libcore/x-net/src/main/java/javax/net/DefaultSocketFactory.java libcore/x-net/src/main/java/javax/net/ServerSocketFactory.java libcore/x-net/src/main/java/javax/net/SocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/CertPathTrustManagerParameters.java libcore/x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLContext.java libcore/x-net/src/main/java/javax/net/ssl/DefaultSSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedEvent.java libcore/x-net/src/main/java/javax/net/ssl/HandshakeCompletedListener.java libcore/x-net/src/main/java/javax/net/ssl/HostnameVerifier.java libcore/x-net/src/main/java/javax/net/ssl/HttpsURLConnection.java libcore/x-net/src/main/java/javax/net/ssl/KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/KeyManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java libcore/x-net/src/main/java/javax/net/ssl/ManagerFactoryParameters.java libcore/x-net/src/main/java/javax/net/ssl/SSLContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLContextSpi.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngine.java libcore/x-net/src/main/java/javax/net/ssl/SSLEngineResult.java libcore/x-net/src/main/java/javax/net/ssl/SSLException.java libcore/x-net/src/main/java/javax/net/ssl/SSLHandshakeException.java libcore/x-net/src/main/java/javax/net/ssl/SSLKeyException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPeerUnverifiedException.java libcore/x-net/src/main/java/javax/net/ssl/SSLPermission.java libcore/x-net/src/main/java/javax/net/ssl/SSLProtocolException.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLServerSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/SSLSession.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingEvent.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionBindingListener.java libcore/x-net/src/main/java/javax/net/ssl/SSLSessionContext.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocket.java libcore/x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactory.java libcore/x-net/src/main/java/javax/net/ssl/TrustManagerFactorySpi.java libcore/x-net/src/main/java/javax/net/ssl/X509ExtendedKeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509KeyManager.java libcore/x-net/src/main/java/javax/net/ssl/X509TrustManager.java libcore/x-net/src/main/java/javax/net/ssl/package-info.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImplWrapper.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoryImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketInputStream.java libcore/x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketOutputStream.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/CertPathTrustManagerParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/HttpsURLConnectionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/KeyStoreBuilderParametersTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLContext1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLEngineTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLPermissionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLServerSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/SSLSocketTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/TrustManagerFactory1Test.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/HandshakeCompletedEventTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLHandshakeExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLKeyExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLPeerUnverifiedExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLProtocolExceptionTest.java libcore/x-net/src/test/api/java/org/apache/harmony/xnet/tests/javax/net/ssl/serialization/SSLSessionBindingEventTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/SocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/DefaultSSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/HttpsURLConnection_ImplTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLServerSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/javax/net/ssl/SSLSocketFactoryTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/HandshakeProtocolTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/KeyManagerImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLEngineImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLServerSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionContextImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSessionImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFactoriesTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketFunctionalTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLSocketImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/SSLStreamedInputTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImplTest.java libcore/x-net/src/test/impl/java.injected/org/apache/harmony/xnet/provider/jsse/TrustManagerImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/DigitalSignatureTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/KeyManagerFactoryImplTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/ProtocolVersionTest.java libcore/x-net/src/test/impl/java/org/apache/harmony/xnet/tests/provider/jsse/TrustManagerFactoryImplTest.java libcore/x-net/src/test/java/javax/net/ssl/KeyManagerFactorySpiTests.java libcore/x-net/src/test/java/javax/net/ssl/MyKeyManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/MySSLContextSpi.java libcore/x-net/src/test/java/javax/net/ssl/MyTrustManagerFactorySpi.java libcore/x-net/src/test/java/javax/net/ssl/SSLContextSpiTests.java libcore/x-net/src/test/java/javax/net/ssl/TrustManagerFactorySpiTests.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory1Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/KeyManagerFactory2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLContext2Test.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionBindingEventTest.java libcore/x-net/src/test/java/tests/api/javax/net/ssl/TrustManagerFactory2Test.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyKeyManagerFactorySpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MySSLContextSpi.java libcore/x-net/src/test/support/common/java/org/apache/harmony/xnet/tests/support/MyTrustManagerFactorySpi.java commit 8b79eb40a27f0b336d5516606d43162ecead09ca Author: Jesse Wilson Date: Tue Aug 25 12:58:17 2009 x-net_dalvik commit a8dc3778cd2a1a5d6d0cfff6eec22e7bfbdb9c14 Author: Jesse Wilson Date: Tue Aug 25 12:56:55 2009 x-net_802921 commit 07ca0ed8aa5927c909f880559c17d162c111608e Author: Jesse Wilson Date: Tue Aug 25 12:56:07 2009 x-net_527399 commit 9b44ccfc38c2fc2a6cf2c3cc39a13cc5bce635ba Author: Jesse Wilson Date: Tue Aug 25 11:14:01 2009 Small changes missed in the original submission of 22482./"
,,0.1628,conscrypt,"Integrate luni module (but not tests) to Harmony r772995. Notable changes Stripped Android 1.0"" from many files. Most files are now 100% the same in Dalvik and Harmony. AbstractStringBuilder.reverse() supports surrogates AbstractStringBuilder shares less to waste less memory Bitset optimized BufferedInputStream changed to support unsynchronized close() BufferedOutputStream does flushInternal BufferedReader supports EBCDIC NEL Collections.synchronizedList().indexOf() does a copy for more concurrency Classes in nio module changed: DatagramChannelImpl, SocketChannelImpl and ServerSocketChannelImpl (these depend on internal APIs changed in this update) DataInputStream/DataOutputStream now use a small buffer to limit the number of times the underlying stream is accessed Date now has a minutes offset, more efficient toString() ExposedByteArrayInputStream: new internal class DeleteOnExit moved to top-level class FileDescriptor.isValid() now non-native Float, Double lessThan optimized (fix for compare(-0.0F, 0.0F) still pending) FileURLConnection now guesses content types from streams HashMap iterator changes Hashtable iterator changes INetworkSystem removes bind2(), createMulticastSocket, sendStream(), renames createSocket to createStreamSocket JarURLConnection rewritten LinkedHashMap: new iterator Locale, Currency, TimeZone: now use ICU in Harmony, plain Java in Dalvik ObjectInputStream: Accessor objects in Harmony, direct native in Dalvik ProxyClassFile many changes String optimized ascii for toLowerCase, toUpperCase, compare Timer rewritten TreeMap rewritten URLClassLoader new URLConnection new guessContentTypeFromStream(), uses org.apache.harmony.awt.www.content to lookup content type handlers/"
,,0.2688,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2704,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2737,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2737,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2737,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2737,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2721,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2672,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2606,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2655,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2623,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2606,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2574,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2802,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2639,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2704,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.259,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.27699999999999997,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2623,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2704,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.27699999999999997,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2639,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2704,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2639,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.259,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2704,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2753,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.27699999999999997,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2721,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2672,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2704,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2704,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2655,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2639,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2704,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2606,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2688,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2737,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2557,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.2737,conscrypt,Update crypto package to Harmony r802921. Only Javadoc changes. commit d5d4307b5b9f37e6f66ab1273be1acd2a29177de Merge: 2c2287b 1c60d7c Author: Jesse Wilson Date: Mon Aug 31 15:36:46 2009 Merge branch crypto_802921 into crypto_dalvik Conflicts: libcore/crypto/.classpath libcore/crypto/build.xml libcore/crypto/src/main/java/javax/crypto/BadPaddingException.java libcore/crypto/src/main/java/javax/crypto/Cipher.java libcore/crypto/src/main/java/javax/crypto/CipherInputStream.java libcore/crypto/src/main/java/javax/crypto/CipherOutputStream.java libcore/crypto/src/main/java/javax/crypto/CipherSpi.java libcore/crypto/src/main/java/javax/crypto/EncryptedPrivateKeyInfo.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanism.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismException.java libcore/crypto/src/main/java/javax/crypto/ExemptionMechanismSpi.java libcore/crypto/src/main/java/javax/crypto/IllegalBlockSizeException.java libcore/crypto/src/main/java/javax/crypto/KeyAgreement.java libcore/crypto/src/main/java/javax/crypto/KeyAgreementSpi.java libcore/crypto/src/main/java/javax/crypto/KeyGenerator.java libcore/crypto/src/main/java/javax/crypto/KeyGeneratorSpi.java libcore/crypto/src/main/java/javax/crypto/Mac.java libcore/crypto/src/main/java/javax/crypto/MacSpi.java libcore/crypto/src/main/java/javax/crypto/NoSuchPaddingException.java libcore/crypto/src/main/java/javax/crypto/NullCipher.java libcore/crypto/src/main/java/javax/crypto/SealedObject.java libcore/crypto/src/main/java/javax/crypto/SecretKey.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactory.java libcore/crypto/src/main/java/javax/crypto/SecretKeyFactorySpi.java libcore/crypto/src/main/java/javax/crypto/ShortBufferException.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPrivateKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/DHPublicKey.java libcore/crypto/src/main/java/javax/crypto/interfaces/PBEKey.java libcore/crypto/src/main/java/javax/crypto/spec/DESKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DESedeKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHGenParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPrivateKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/DHPublicKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/IvParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/OAEPParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEKeySpec.java libcore/crypto/src/main/java/javax/crypto/spec/PBEParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/PSource.java libcore/crypto/src/main/java/javax/crypto/spec/RC2ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/RC5ParameterSpec.java libcore/crypto/src/main/java/javax/crypto/spec/SecretKeySpec.java commit 2c2287b521cc5f558d9929e14e31ec92da6285b1 Author: Jesse Wilson Date: Mon Aug 31 14:56:45 2009 crypto_dalvik commit 1c60d7c222c55ae49add8345a192c54357bb4a1f Author: Jesse Wilson Date: Mon Aug 31 14:56:34 2009 crypto_802921 commit 50cf7f5d97de2f65ee0769aafec7b5a3551cb5d0 Author: Jesse Wilson Date: Mon Aug 31 14:56:27 2009 crypto_527399/
,,0.071,conscrypt,Set peer for new SSLSessionImpl instances. Bug:
,,0.0814,conscrypt,Fix our SSLSession implementations to call valueUnbound on remove. This addresses the other problem from the following abandoned change:
,,0.7855,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.2047,conscrypt,"am 1a29c735: Merge ""Fix server side SSLEngine ServerKeyExchange signature."" Merge commit 1a29c735752f4082c8e32347f4a6b10c4fdeb1f5 into dalvik-dev * commit 1a29c735752f4082c8e32347f4a6b10c4fdeb1f5: Fix server side SSLEngine ServerKeyExchange signature./Fix server side SSLEngine ServerKeyExchange signature. Code using SSLEngine for non-blocking SSL cant talk with openssl as a client, since the signature is computed on different content (and openssl checks it, unlike java). The fix is to use strip the 0x00 prefix when signing like it is done when generating the message, refactored both to use a common method. We also include the length in the signature, it was also missing./"
,,0.7904,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.1986,conscrypt,"am 1a29c735: Merge ""Fix server side SSLEngine ServerKeyExchange signature."" Merge commit 1a29c735752f4082c8e32347f4a6b10c4fdeb1f5 into dalvik-dev * commit 1a29c735752f4082c8e32347f4a6b10c4fdeb1f5: Fix server side SSLEngine ServerKeyExchange signature./Fix server side SSLEngine ServerKeyExchange signature. Code using SSLEngine for non-blocking SSL cant talk with openssl as a client, since the signature is computed on different content (and openssl checks it, unlike java). The fix is to use strip the 0x00 prefix when signing like it is done when generating the message, refactored both to use a common method. We also include the length in the signature, it was also missing./"
,,0.7901,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.7864,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.7811,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.7843,conscrypt,"Rewrite JSSE code to use one openssl SSL per SSLSocket an one SSL_CTX per SSLSessionContext Summary: b/1758225: Revisit OpenSSL locking Removed the locking original put in to address b/1678800 which had been causing problems for the HeapWorker thread which was timing out waiting for the lock in the finalizers while other threads were connecting. b/1678800: Reliability tool: Crash in libcrypto Properly fixed the native crash by avoid sharing SSL_SESSION objects between SSL_CTX objects Testing: adb shell run-core-tests tests.xnet.AllTests adb shell run-core-tests javax.net.ssl.AllTests Test app that reloads Details: Each AbstractSessionContext now has an associated SSL_CTX, referenced through the sslCtxNativePointer. SSL_CTX on the native side defines the scope of SSL_SESSION caching, and this brings the Java SSLSessionContext caching into alignment with the native code. OpenSSLSessionImpl now uses AbstractSessionContext instead of SSLSessionContext for access to the underlying SSL_CTX. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Added AbstractSessionContext.putSession so OpenSSLSocketImpl/OpenSSLSessionImpl can directly assign to the current AbstractSessionContext (whether it be a ClientSessionContext or a ServerSessionContext) without casting. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Cleaning up use of SSL_CTX and SSL instances in SSLSocket/SSLServerSocket implementation The major change is that openssl SSL instances are allocated for the life of the matching Java object, replacing the SSL_CTX and the SSL objects that had previously been allocated only starting at handshake time. We should never have been sharing SSL_SESSION instances between SSL_CTX instances, which was the source of the native crashes dating back to cupcake which the OpenSSLSocket.class locking had been preventing. NativeCrypto now has better defined and independant wrappers on openssl functionality. A followon checkin should move the remaining openssl JNI code here with the intent of being able to write and end-to-end test of the openssl code using NativeCrypto without the JSSE implementation classes. The following gives a list of the new native functions with a mapping to the old implementation code. The new code has a more functional style where SSL_CTX and SSL instances are passed and returned as arguments, not extracted from Java instances SSL_CTX_new OpenSSLSocketImpl.nativeinit, OpenSSLServerSocketImpl.nativeinit, SSLParameters.nativeinitsslctx SSL_CTX_get_ciphers_list OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_CTX_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree SSL_new OpenSSLSocketImpl.nativeinit, OpenSSLSocketImpl.init, OpenSSLServerSocketImpl.nativeinit, OpenSSLServerSocketImpl.init SSL_get_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_set_options OpenSSLSocketImpl.nativesetenabledprotocols SSL_get_ciphers OpenSSLSocketImpl.nativeGetEnabledCipherSuites SSL_set_cipher_list OpenSSLSocketImpl.nativeSetEnabledCipherSuites SSL_free OpenSSLSocketImpl.nativefree, OpenSSLServerSocketImpl.nativefree While the focus in NativeCrypto is on native code, it also contains some helpers/wrappers especially for code that doesnt depend on specific SSL_CTX, SSL instances or that needs to do massaging of data formats between Java and OpenSSL. Some of these had previously been duplicated in the client and server versions of the code. For example: getSupportedCipherSuites OpenSSLSocketImpl.nativegetsupportedciphersuites, OpenSSLServerSocketImpl.nativegetsupportedciphersuites getSupportedProtocols OpenSSLSocketImpl.getSupportedProtocols, OpenSSLServerSocketImpl.getSupportedProtocols getEnabledProtocols OpenSSLSocketImpl.getEnabledProtocols,OpenSSLServerSocketImpl.getEnabledProtocols setEnabledProtocols OpenSSLSocketImpl.setEnabledProtocols setEnabledCipherSuites OpenSSLSocketImpl.setEnabledCipherSuites Moved JNI initialization from OpenSSLSocketImpl to NativeCrypto which is the future home of all the openssl related native code. clinit OpenSSLSocketImpl.nativeinitstatic NativeCrypto.CertificateChainVerifier is a new interface to decouple callbacks from openssl from a specific dependence on a OpenSSLSocketImpl.verify_callback method. Changed to return boolean instead of int. Renamed OpenSSLSocketImpl.ssl to OpenSSLSocketImpl.sslNativePointer for consistency Changed OpenSSLSocketImpl nativeconnect, nativegetsslsession, nativecipherauthenticationmethod, nativeaccept, nativeread, nativewrite, nativeinterrupt, nativeclose, nativefree to take arguments instead of inspect object state in preparation for moving to NativeCrypto other notable NativeCrypto changes included * adding SSL_SESSION_get_peer_cert_chain, SSL_SESSION_get_version, and SSL_get_version (and get_ssl_version) which are ""missing methods"" in openssl * ssl_msg_callback_LOG callback and get_content_type for handshake debugging * removing jfieldIDs for our classes now that we pass in values in arguments * changed aliveAndKicking to be volative since we poll on it to communicate between threads * changed from C style declarations at beginning of block to C++ at first use on methods with major changes * stop freeing SSL instances on error, only SSL_clear it * improved session reuse logging when reproducing b/1678800 * change verify_callback to return verifyCertificateChain result x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketFactoryImpl.java When we accept a server socket, we pass the existing SSL state instance from the server socket to the newly accepted socket via the constructor where it is copied with SSL_dup, instead of through both the constructor and later the accept method. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Cleaned up nativesetclientauth from using SSL_CTX to SSL, passing ssl as argument in preparation for future movement to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java Removed ssl_op_no cache for rarely used enabled protocol methods so that code could more easily be shared in NativeCrypto between client and server. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed public getId, getCreationTime, getPeerCertificates, getCipherSuite, getProtocol from being instance methods that looked at the OpenSSLSessionImpl object state to be static mthods that take the native pointers as arguments in preparation for moving to NativeCrypto. Rename session sslSessionNativePointer for consistency. Inlined initializeNative, which wasnt really the native code. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Removed lock on OpenSSLSocketImpl.class lock from around OpenSSLSocketImpls use of nativeconnect, nativegetsslsession, and nativecipherauthenticationmethod as well as OpenSSLSessionImpls use of freeImpl, fixing b/1758225: Revisit OpenSSL locking x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Unrelated changes Removed unused ssl_ctx, nativeinitsslctx, getSSLCTX x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Fix bug in both putSession implementations where we cached sessions with zero length id. Also change indexById to pass in id in client implementation. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java Make sure we clone SSLParameters passed to the SSLSocketFactory and SSLServerSocketFactory so that muting the client instance does not change the server instance and vice versa. Explicitly set setUseClientMode(false) on the server SSLParameters. These changes are to bring things more into alignment with the original harmony classes which properly support client/server role switching during handshaking. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketFactoryImpl.java Make locks object fields final x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Moved updateInstanceCount(1) logic and sslParameters assignment to init method x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed getCachedClientSession to respect getUseClientMode x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling of listensers to listeners in javadoc x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Spelling SSLInputStream to SSLOutputStream in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Changed shutdownInput and shutdownOutput to call to the underlying socket x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Set sslNativePointer to 0 when freeing underlying SSL object x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed IOException logging in getSession, which is expected to simply return SSL_NULL_WITH_NULL_NULL when there are problems. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Disabled ""Using factory"" message on successful creation of SocketFactory which was a bit noisy running tests. However, added logging in failure case including the related exception: x-net/src/main/java/javax/net/ssl/SSLSocketFactory.java Disabled logging of OpenSSL session deallocation x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Register SSLContextImpl as a source of SSL and SSL3 SSLContexts, not just TLS and TLSv1. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/JSSEProvider.java Fix whitespace in comment x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java Change-Id: I99975ae22599c7df0d249fa013ae7ea7c9c08051/"
,,0.8571,conscrypt,"OpenSSLSocket handshake overhaul Summary: SSLSocket.startHandshake now generalized to handle both client and server handshaking as well as client/server role reversal handshake_cutthrough.patch is properly integrated with support delayed handshake completion now integrated with delayed updates to session cache and callbacks to HandshakeCompletedListeners Many fixes to SSLSession, which is the end product of the handshake Generally more RI and SSLEngine compliant behavior. More native code deletion through unification of client/server handshake, unification of client/server certificate chain verification, etc. More native code moved from various OpenSSL classes to cleaner NativeCrypto interfaces that more directly mirror the OpenSSL interfaces. Details: Delay SSL_new call until handshake time when we know for sure whether the OpenSSLSocket will be used in client or server mode and we can allocate the SSL_new from the apppriate client or server SSL_CTX used for session caching. Now that no SSL is allocated for an OpenSSLServerSocketImpl, store enabledProtocols and enabledCipherSuites in instance String arrays. Use new NativeCrypto.checkEnabled* methdods for argument validation. OpenSSLServerSocketImpl passes these enabled arrays to a new OpenSSLSocket constructor during accept(). Removed finalizer from OpenSSLServerSocketImpl since it no longer has any native storage and socket is already closed by PlainSocketImpl finalizer. X-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java OpenSSLSocket major overhaul to properly implement handshaking including switching client and server roles and session ID caching with handshake_cutthrough.patch. now implements NativeCrypto.HandshakeCompletedListeners for properly timed callback when handshake_cutthrough.patch delays handshake completion until first SSLSocket.getInputStream() read. similar enabledProtocols/enabledCipherSuites changes as OpenSSLServerSocketImpl since we need to store the state somewhere other than an openssl SSL struct until we are sure if we are doing a client or server handshake. added handshake completed field so that startHandshake can tell if handshake was completed during SSL_do_handshake or will be completed later by a call to HandshakeCompletedCallback.handshakeCompleted. removed nativegetsession as the equivalent value is now returned by SSL_do_handshake removed nativecipherauthenticationmethod as the value is now passed to verifyCertificateChain startHandshake is now a wrapper that forces a fully synchronous handshake startHandshake(boolean) is the the most changed method in this changelist, combinding both the old startHandshake logic, but also the OpenSSLSocketImpl.accept code as well. Notable differences from the old code: * now responsible for SSL_new * single code path for client/server handshaking dealing with SSLSession caching * now handles server certificate requests previously in OpenSSLServerSocketImpl, since a client can request to act like a server and therefore need to be able to make suck demands on its peer. * supports turning off handshake_cutthrough at a callers request via explicit call to startHandshake() * certificate verification happens during an upcall from openssl during SSL_do_handshake to verifyCertificateChain for both client and server cases. previously there was not quite right upcall support on the server side and post-handshake checking on the client, which did not allow for a proper alert to be sent to the peer informing them of the issue, which the RI and SSLEngine code do. * Similarly, setEnableSessionCreation(false) did not send an alert to the peer as the RI and SSLEngine code in the client case. In the server case, nothing was previously done. * The use of local certificates was not determined from introspecting the SSL struct post-handshake. This is now partially implemented and will be completed in a later change. SSLSocket.{shutdownInput,shutdownOutput} are now restored to the proper behavior of throwing UnsupportedOperationException. Gutted OpenSSLSocketImpl finalizer. The comment explains in detail the trouble of having the finalizer do anything more than touch its the instances own state due to unpredictable order of finalization and the future possability of parallel finalization. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java SSLSession fixes Made OpenSSLSessionImpl.sessionContext non-final so it could be nulled by SSLSession.invalidate to match RI behavior. As noted in AbstractSessionContext discussion, removed OpenSSLSessionImpl constructor that took SSLParameters, instead we take the possibly null localCertificates directly. OpenSSLSessionImpl.getLocalCertificates now simply returns the localCertificates member variable instead of incorrectly trying to query the KeyManager for certificates that may not have been used. OpenSSLSessionImpl now caches its native ID to avoid numerious native calls but also now provides as resetId which will update the cache when a delayed handshake happens due to the handshake_cutthrough.patch Fixed bug in getPeerPrincipal that it wasnt calling getPeerCertificates to initialize peerCertificates field. freeImpl is now public static in preparation for move to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java The old SSLSessionImpl class that is still used for representing the invalid session now returns isValid false and getProtocol ""NONE"" to match the RI. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java NativeCrypto improvements Adding NativeCrypto.SSL_{get,set,clear}_mode similar to NativeCrypto.SSL_{get,set,clear}_options along with SSL_MODE_HANDSHAKE_CUTTHROUGH constant which is used to explicitly disable/enable the Android handshake_cutthrough.patch behavior. Added missing NativeCrypto.SSL_clear_options and used to properly implement NativeCrypto.setEnabledProtocols. Added NativeCrypto.checkEnabledProtocols and NativeCrypto.checkEnabledCipherSuites helpers to implement exception compatability with the RI. While some of this code is refactored from existing NativeCrypto code, it is now also used by OpenSSLServerSocketImpl and OpenSSLSocketImpl which maintain their own String[]s of what is enabled until startHandshake time. (see below) Changed NativeCrypto.findSuite to use foreach style loop for clarity. Moved OpenSSLServerSocketImpl nativesetclientauth and SSL_VERIFY_* constants to NativeCrypto.SSL_set_verify Added NativeCrypto.SSL_set_session based on part of old OpenSSLSocketImpl.nativeconnect Added NativeCrypto.SSL_set_session_creation_enabled to properly implement SSLSocket.setEnableSessionCreation(false) which uses new external/openssl/patches/jsse.patch functionality. New NativeCrypto.SSL_do_handshake consolidates OpenSSLSocketImpl.{nativeconnect, nativeaccept} while properly implementing SSLSocket.setUseClientMode(false) for clients and SSLSocket.setUseClientMode(true) for servers. New NativeCrypto.SSL_get_certificate is determine if local certificate requested by peer. While functional, currently NativeCrypto.SSL_new always sets a value via SSL_use_certificate instead of relying on a callback set via SSL_CTX_set_client_cert_cb. Changed NativeCrypto.CertificateChainVerifier.verifyCertificateChain to throw a checked CertificateException to match TrustManager.{checkServerTrusted, checkClientTrusted}. It also takes an authMethod so avoid the need to call the old OpenSSLSocketImpl.nativecipherauthenticationmethod. Added NativeCrypto.HandshakeCompletedCallback which has its handshakeCompleted method called from OpenSSL when the now delayed handshake_cutthrough.patch handshake is completed so SSLSession caching can be delayed until a session ID is available and to provide a better time for HandshakeCompletedListeners to be notified. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Some other changes specific to the naitve side of the code Added JNITRACE calls (enabled at compile time with JNI_TRACE) for future debugging. throw SSLException subclass of IOException instead IOException itself for better RI compatability x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp changed from old struct app_data to new class AppData at enhs request Remove dubious usage of SSLParameters within AbstractSessionContext to pass through to OpenSSLSessionImpl constructor for use in calling getLocalCertificates for sessions created from a byte array with AbstractSessionContext.toSession. Our AbstractSessionContext.toBytes doesnt currently include the local certificates in its output, so it cannot be expected to have in toSession. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Test maintenance openssl 1.0.0 adds support for RFC 4507 session tickets which remove the need for server side session state. These tests needed to be updated for this new behavior. If IS_RI is true, they still follow the old behavior. luni/src/test/java/javax/net/ssl/SSLSessionContextTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Update KnownFailures and add specific comments at point of failure about what remains to be fixed. luni/src/test/java/javax/net/ssl/SSLSessionTest.java Added tests to cover the use of standard cipher suite names. Historically Android has used OpenSSL string constants for cipher suite names, but JSSE actually specifies supported and expected names. luni/src/test/java/javax/net/ssl/SSLSocketFactoryTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Create new support/src/test/java/javax/net/ssl with old Helper support code pulled from javax.net.ssl tests: SSLContextTest.Helper TestSSLContext SSLSocketTest.Helper TestSSLSocketPair SSLSessionTest.Helper TestSSLSessions Also added new StandardNames here, which contains a collection of expected constants for test validation. luni/src/test/java/javax/net/ssl/SSLContextTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java support/src/test/java/javax/net/ssl/TestSSLContext.java support/src/test/java/javax/net/ssl/TestSSLSocketPair.java support/src/test/java/javax/net/ssl/TestSSLSessions.java support/src/test/java/javax/net/ssl/StandardNames.java Removed some now fixed KnownFailures and unneeded IS_RI code. Marked some [Un]KnownFailures where exceptions are thrown and visible in the output but arent correctly causing the test to fail. Fixed assertNonNull to assertTrue in test_SSLSocketTest_Test_create. Added stress_test_SSLSocketTest_Test_create to track down test flakiness, leading to rewrite of SSLSocket finalization. luni/src/test/java/javax/net/ssl/SSLSocketTest.java Reenable javax.net.ssl.AllTests now that it is does not hang luni/src/test/java/tests/AllTests.java Improve error messages while debugging overflow problem. Added new assert when debugging new RFC 4507 behavior. Removed KnownFailure annotation for now working test case. x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionTest.java Client code changes Now that startHandshake implies synchronous vs Androids default async handshake, remove unneeded explict calls to SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed IBM 1.4.x codepath that involved startHandshake x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java Unrelated Remove unneed SSLSocket.setUseClientMode while removing unneeded SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed warnings due to now missing modules in classpath run-core-tests Change-Id: I6e149ae259b3feccdfb0673209c85cfeb60befc8/"
,,0.856,conscrypt,"OpenSSLSocket handshake overhaul Summary: SSLSocket.startHandshake now generalized to handle both client and server handshaking as well as client/server role reversal handshake_cutthrough.patch is properly integrated with support delayed handshake completion now integrated with delayed updates to session cache and callbacks to HandshakeCompletedListeners Many fixes to SSLSession, which is the end product of the handshake Generally more RI and SSLEngine compliant behavior. More native code deletion through unification of client/server handshake, unification of client/server certificate chain verification, etc. More native code moved from various OpenSSL classes to cleaner NativeCrypto interfaces that more directly mirror the OpenSSL interfaces. Details: Delay SSL_new call until handshake time when we know for sure whether the OpenSSLSocket will be used in client or server mode and we can allocate the SSL_new from the apppriate client or server SSL_CTX used for session caching. Now that no SSL is allocated for an OpenSSLServerSocketImpl, store enabledProtocols and enabledCipherSuites in instance String arrays. Use new NativeCrypto.checkEnabled* methdods for argument validation. OpenSSLServerSocketImpl passes these enabled arrays to a new OpenSSLSocket constructor during accept(). Removed finalizer from OpenSSLServerSocketImpl since it no longer has any native storage and socket is already closed by PlainSocketImpl finalizer. X-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java OpenSSLSocket major overhaul to properly implement handshaking including switching client and server roles and session ID caching with handshake_cutthrough.patch. now implements NativeCrypto.HandshakeCompletedListeners for properly timed callback when handshake_cutthrough.patch delays handshake completion until first SSLSocket.getInputStream() read. similar enabledProtocols/enabledCipherSuites changes as OpenSSLServerSocketImpl since we need to store the state somewhere other than an openssl SSL struct until we are sure if we are doing a client or server handshake. added handshake completed field so that startHandshake can tell if handshake was completed during SSL_do_handshake or will be completed later by a call to HandshakeCompletedCallback.handshakeCompleted. removed nativegetsession as the equivalent value is now returned by SSL_do_handshake removed nativecipherauthenticationmethod as the value is now passed to verifyCertificateChain startHandshake is now a wrapper that forces a fully synchronous handshake startHandshake(boolean) is the the most changed method in this changelist, combinding both the old startHandshake logic, but also the OpenSSLSocketImpl.accept code as well. Notable differences from the old code: * now responsible for SSL_new * single code path for client/server handshaking dealing with SSLSession caching * now handles server certificate requests previously in OpenSSLServerSocketImpl, since a client can request to act like a server and therefore need to be able to make suck demands on its peer. * supports turning off handshake_cutthrough at a callers request via explicit call to startHandshake() * certificate verification happens during an upcall from openssl during SSL_do_handshake to verifyCertificateChain for both client and server cases. previously there was not quite right upcall support on the server side and post-handshake checking on the client, which did not allow for a proper alert to be sent to the peer informing them of the issue, which the RI and SSLEngine code do. * Similarly, setEnableSessionCreation(false) did not send an alert to the peer as the RI and SSLEngine code in the client case. In the server case, nothing was previously done. * The use of local certificates was not determined from introspecting the SSL struct post-handshake. This is now partially implemented and will be completed in a later change. SSLSocket.{shutdownInput,shutdownOutput} are now restored to the proper behavior of throwing UnsupportedOperationException. Gutted OpenSSLSocketImpl finalizer. The comment explains in detail the trouble of having the finalizer do anything more than touch its the instances own state due to unpredictable order of finalization and the future possability of parallel finalization. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java SSLSession fixes Made OpenSSLSessionImpl.sessionContext non-final so it could be nulled by SSLSession.invalidate to match RI behavior. As noted in AbstractSessionContext discussion, removed OpenSSLSessionImpl constructor that took SSLParameters, instead we take the possibly null localCertificates directly. OpenSSLSessionImpl.getLocalCertificates now simply returns the localCertificates member variable instead of incorrectly trying to query the KeyManager for certificates that may not have been used. OpenSSLSessionImpl now caches its native ID to avoid numerious native calls but also now provides as resetId which will update the cache when a delayed handshake happens due to the handshake_cutthrough.patch Fixed bug in getPeerPrincipal that it wasnt calling getPeerCertificates to initialize peerCertificates field. freeImpl is now public static in preparation for move to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java The old SSLSessionImpl class that is still used for representing the invalid session now returns isValid false and getProtocol ""NONE"" to match the RI. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java NativeCrypto improvements Adding NativeCrypto.SSL_{get,set,clear}_mode similar to NativeCrypto.SSL_{get,set,clear}_options along with SSL_MODE_HANDSHAKE_CUTTHROUGH constant which is used to explicitly disable/enable the Android handshake_cutthrough.patch behavior. Added missing NativeCrypto.SSL_clear_options and used to properly implement NativeCrypto.setEnabledProtocols. Added NativeCrypto.checkEnabledProtocols and NativeCrypto.checkEnabledCipherSuites helpers to implement exception compatability with the RI. While some of this code is refactored from existing NativeCrypto code, it is now also used by OpenSSLServerSocketImpl and OpenSSLSocketImpl which maintain their own String[]s of what is enabled until startHandshake time. (see below) Changed NativeCrypto.findSuite to use foreach style loop for clarity. Moved OpenSSLServerSocketImpl nativesetclientauth and SSL_VERIFY_* constants to NativeCrypto.SSL_set_verify Added NativeCrypto.SSL_set_session based on part of old OpenSSLSocketImpl.nativeconnect Added NativeCrypto.SSL_set_session_creation_enabled to properly implement SSLSocket.setEnableSessionCreation(false) which uses new external/openssl/patches/jsse.patch functionality. New NativeCrypto.SSL_do_handshake consolidates OpenSSLSocketImpl.{nativeconnect, nativeaccept} while properly implementing SSLSocket.setUseClientMode(false) for clients and SSLSocket.setUseClientMode(true) for servers. New NativeCrypto.SSL_get_certificate is determine if local certificate requested by peer. While functional, currently NativeCrypto.SSL_new always sets a value via SSL_use_certificate instead of relying on a callback set via SSL_CTX_set_client_cert_cb. Changed NativeCrypto.CertificateChainVerifier.verifyCertificateChain to throw a checked CertificateException to match TrustManager.{checkServerTrusted, checkClientTrusted}. It also takes an authMethod so avoid the need to call the old OpenSSLSocketImpl.nativecipherauthenticationmethod. Added NativeCrypto.HandshakeCompletedCallback which has its handshakeCompleted method called from OpenSSL when the now delayed handshake_cutthrough.patch handshake is completed so SSLSession caching can be delayed until a session ID is available and to provide a better time for HandshakeCompletedListeners to be notified. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Some other changes specific to the naitve side of the code Added JNITRACE calls (enabled at compile time with JNI_TRACE) for future debugging. throw SSLException subclass of IOException instead IOException itself for better RI compatability x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp changed from old struct app_data to new class AppData at enhs request Remove dubious usage of SSLParameters within AbstractSessionContext to pass through to OpenSSLSessionImpl constructor for use in calling getLocalCertificates for sessions created from a byte array with AbstractSessionContext.toSession. Our AbstractSessionContext.toBytes doesnt currently include the local certificates in its output, so it cannot be expected to have in toSession. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Test maintenance openssl 1.0.0 adds support for RFC 4507 session tickets which remove the need for server side session state. These tests needed to be updated for this new behavior. If IS_RI is true, they still follow the old behavior. luni/src/test/java/javax/net/ssl/SSLSessionContextTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Update KnownFailures and add specific comments at point of failure about what remains to be fixed. luni/src/test/java/javax/net/ssl/SSLSessionTest.java Added tests to cover the use of standard cipher suite names. Historically Android has used OpenSSL string constants for cipher suite names, but JSSE actually specifies supported and expected names. luni/src/test/java/javax/net/ssl/SSLSocketFactoryTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Create new support/src/test/java/javax/net/ssl with old Helper support code pulled from javax.net.ssl tests: SSLContextTest.Helper TestSSLContext SSLSocketTest.Helper TestSSLSocketPair SSLSessionTest.Helper TestSSLSessions Also added new StandardNames here, which contains a collection of expected constants for test validation. luni/src/test/java/javax/net/ssl/SSLContextTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java support/src/test/java/javax/net/ssl/TestSSLContext.java support/src/test/java/javax/net/ssl/TestSSLSocketPair.java support/src/test/java/javax/net/ssl/TestSSLSessions.java support/src/test/java/javax/net/ssl/StandardNames.java Removed some now fixed KnownFailures and unneeded IS_RI code. Marked some [Un]KnownFailures where exceptions are thrown and visible in the output but arent correctly causing the test to fail. Fixed assertNonNull to assertTrue in test_SSLSocketTest_Test_create. Added stress_test_SSLSocketTest_Test_create to track down test flakiness, leading to rewrite of SSLSocket finalization. luni/src/test/java/javax/net/ssl/SSLSocketTest.java Reenable javax.net.ssl.AllTests now that it is does not hang luni/src/test/java/tests/AllTests.java Improve error messages while debugging overflow problem. Added new assert when debugging new RFC 4507 behavior. Removed KnownFailure annotation for now working test case. x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionTest.java Client code changes Now that startHandshake implies synchronous vs Androids default async handshake, remove unneeded explict calls to SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed IBM 1.4.x codepath that involved startHandshake x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java Unrelated Remove unneed SSLSocket.setUseClientMode while removing unneeded SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed warnings due to now missing modules in classpath run-core-tests Change-Id: I6e149ae259b3feccdfb0673209c85cfeb60befc8/"
,,0.8542,conscrypt,"OpenSSLSocket handshake overhaul Summary: SSLSocket.startHandshake now generalized to handle both client and server handshaking as well as client/server role reversal handshake_cutthrough.patch is properly integrated with support delayed handshake completion now integrated with delayed updates to session cache and callbacks to HandshakeCompletedListeners Many fixes to SSLSession, which is the end product of the handshake Generally more RI and SSLEngine compliant behavior. More native code deletion through unification of client/server handshake, unification of client/server certificate chain verification, etc. More native code moved from various OpenSSL classes to cleaner NativeCrypto interfaces that more directly mirror the OpenSSL interfaces. Details: Delay SSL_new call until handshake time when we know for sure whether the OpenSSLSocket will be used in client or server mode and we can allocate the SSL_new from the apppriate client or server SSL_CTX used for session caching. Now that no SSL is allocated for an OpenSSLServerSocketImpl, store enabledProtocols and enabledCipherSuites in instance String arrays. Use new NativeCrypto.checkEnabled* methdods for argument validation. OpenSSLServerSocketImpl passes these enabled arrays to a new OpenSSLSocket constructor during accept(). Removed finalizer from OpenSSLServerSocketImpl since it no longer has any native storage and socket is already closed by PlainSocketImpl finalizer. X-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java OpenSSLSocket major overhaul to properly implement handshaking including switching client and server roles and session ID caching with handshake_cutthrough.patch. now implements NativeCrypto.HandshakeCompletedListeners for properly timed callback when handshake_cutthrough.patch delays handshake completion until first SSLSocket.getInputStream() read. similar enabledProtocols/enabledCipherSuites changes as OpenSSLServerSocketImpl since we need to store the state somewhere other than an openssl SSL struct until we are sure if we are doing a client or server handshake. added handshake completed field so that startHandshake can tell if handshake was completed during SSL_do_handshake or will be completed later by a call to HandshakeCompletedCallback.handshakeCompleted. removed nativegetsession as the equivalent value is now returned by SSL_do_handshake removed nativecipherauthenticationmethod as the value is now passed to verifyCertificateChain startHandshake is now a wrapper that forces a fully synchronous handshake startHandshake(boolean) is the the most changed method in this changelist, combinding both the old startHandshake logic, but also the OpenSSLSocketImpl.accept code as well. Notable differences from the old code: * now responsible for SSL_new * single code path for client/server handshaking dealing with SSLSession caching * now handles server certificate requests previously in OpenSSLServerSocketImpl, since a client can request to act like a server and therefore need to be able to make suck demands on its peer. * supports turning off handshake_cutthrough at a callers request via explicit call to startHandshake() * certificate verification happens during an upcall from openssl during SSL_do_handshake to verifyCertificateChain for both client and server cases. previously there was not quite right upcall support on the server side and post-handshake checking on the client, which did not allow for a proper alert to be sent to the peer informing them of the issue, which the RI and SSLEngine code do. * Similarly, setEnableSessionCreation(false) did not send an alert to the peer as the RI and SSLEngine code in the client case. In the server case, nothing was previously done. * The use of local certificates was not determined from introspecting the SSL struct post-handshake. This is now partially implemented and will be completed in a later change. SSLSocket.{shutdownInput,shutdownOutput} are now restored to the proper behavior of throwing UnsupportedOperationException. Gutted OpenSSLSocketImpl finalizer. The comment explains in detail the trouble of having the finalizer do anything more than touch its the instances own state due to unpredictable order of finalization and the future possability of parallel finalization. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java SSLSession fixes Made OpenSSLSessionImpl.sessionContext non-final so it could be nulled by SSLSession.invalidate to match RI behavior. As noted in AbstractSessionContext discussion, removed OpenSSLSessionImpl constructor that took SSLParameters, instead we take the possibly null localCertificates directly. OpenSSLSessionImpl.getLocalCertificates now simply returns the localCertificates member variable instead of incorrectly trying to query the KeyManager for certificates that may not have been used. OpenSSLSessionImpl now caches its native ID to avoid numerious native calls but also now provides as resetId which will update the cache when a delayed handshake happens due to the handshake_cutthrough.patch Fixed bug in getPeerPrincipal that it wasnt calling getPeerCertificates to initialize peerCertificates field. freeImpl is now public static in preparation for move to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java The old SSLSessionImpl class that is still used for representing the invalid session now returns isValid false and getProtocol ""NONE"" to match the RI. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java NativeCrypto improvements Adding NativeCrypto.SSL_{get,set,clear}_mode similar to NativeCrypto.SSL_{get,set,clear}_options along with SSL_MODE_HANDSHAKE_CUTTHROUGH constant which is used to explicitly disable/enable the Android handshake_cutthrough.patch behavior. Added missing NativeCrypto.SSL_clear_options and used to properly implement NativeCrypto.setEnabledProtocols. Added NativeCrypto.checkEnabledProtocols and NativeCrypto.checkEnabledCipherSuites helpers to implement exception compatability with the RI. While some of this code is refactored from existing NativeCrypto code, it is now also used by OpenSSLServerSocketImpl and OpenSSLSocketImpl which maintain their own String[]s of what is enabled until startHandshake time. (see below) Changed NativeCrypto.findSuite to use foreach style loop for clarity. Moved OpenSSLServerSocketImpl nativesetclientauth and SSL_VERIFY_* constants to NativeCrypto.SSL_set_verify Added NativeCrypto.SSL_set_session based on part of old OpenSSLSocketImpl.nativeconnect Added NativeCrypto.SSL_set_session_creation_enabled to properly implement SSLSocket.setEnableSessionCreation(false) which uses new external/openssl/patches/jsse.patch functionality. New NativeCrypto.SSL_do_handshake consolidates OpenSSLSocketImpl.{nativeconnect, nativeaccept} while properly implementing SSLSocket.setUseClientMode(false) for clients and SSLSocket.setUseClientMode(true) for servers. New NativeCrypto.SSL_get_certificate is determine if local certificate requested by peer. While functional, currently NativeCrypto.SSL_new always sets a value via SSL_use_certificate instead of relying on a callback set via SSL_CTX_set_client_cert_cb. Changed NativeCrypto.CertificateChainVerifier.verifyCertificateChain to throw a checked CertificateException to match TrustManager.{checkServerTrusted, checkClientTrusted}. It also takes an authMethod so avoid the need to call the old OpenSSLSocketImpl.nativecipherauthenticationmethod. Added NativeCrypto.HandshakeCompletedCallback which has its handshakeCompleted method called from OpenSSL when the now delayed handshake_cutthrough.patch handshake is completed so SSLSession caching can be delayed until a session ID is available and to provide a better time for HandshakeCompletedListeners to be notified. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Some other changes specific to the naitve side of the code Added JNITRACE calls (enabled at compile time with JNI_TRACE) for future debugging. throw SSLException subclass of IOException instead IOException itself for better RI compatability x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp changed from old struct app_data to new class AppData at enhs request Remove dubious usage of SSLParameters within AbstractSessionContext to pass through to OpenSSLSessionImpl constructor for use in calling getLocalCertificates for sessions created from a byte array with AbstractSessionContext.toSession. Our AbstractSessionContext.toBytes doesnt currently include the local certificates in its output, so it cannot be expected to have in toSession. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Test maintenance openssl 1.0.0 adds support for RFC 4507 session tickets which remove the need for server side session state. These tests needed to be updated for this new behavior. If IS_RI is true, they still follow the old behavior. luni/src/test/java/javax/net/ssl/SSLSessionContextTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Update KnownFailures and add specific comments at point of failure about what remains to be fixed. luni/src/test/java/javax/net/ssl/SSLSessionTest.java Added tests to cover the use of standard cipher suite names. Historically Android has used OpenSSL string constants for cipher suite names, but JSSE actually specifies supported and expected names. luni/src/test/java/javax/net/ssl/SSLSocketFactoryTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Create new support/src/test/java/javax/net/ssl with old Helper support code pulled from javax.net.ssl tests: SSLContextTest.Helper TestSSLContext SSLSocketTest.Helper TestSSLSocketPair SSLSessionTest.Helper TestSSLSessions Also added new StandardNames here, which contains a collection of expected constants for test validation. luni/src/test/java/javax/net/ssl/SSLContextTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java support/src/test/java/javax/net/ssl/TestSSLContext.java support/src/test/java/javax/net/ssl/TestSSLSocketPair.java support/src/test/java/javax/net/ssl/TestSSLSessions.java support/src/test/java/javax/net/ssl/StandardNames.java Removed some now fixed KnownFailures and unneeded IS_RI code. Marked some [Un]KnownFailures where exceptions are thrown and visible in the output but arent correctly causing the test to fail. Fixed assertNonNull to assertTrue in test_SSLSocketTest_Test_create. Added stress_test_SSLSocketTest_Test_create to track down test flakiness, leading to rewrite of SSLSocket finalization. luni/src/test/java/javax/net/ssl/SSLSocketTest.java Reenable javax.net.ssl.AllTests now that it is does not hang luni/src/test/java/tests/AllTests.java Improve error messages while debugging overflow problem. Added new assert when debugging new RFC 4507 behavior. Removed KnownFailure annotation for now working test case. x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionTest.java Client code changes Now that startHandshake implies synchronous vs Androids default async handshake, remove unneeded explict calls to SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed IBM 1.4.x codepath that involved startHandshake x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java Unrelated Remove unneed SSLSocket.setUseClientMode while removing unneeded SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed warnings due to now missing modules in classpath run-core-tests Change-Id: I6e149ae259b3feccdfb0673209c85cfeb60befc8/"
,,0.8503,conscrypt,"OpenSSLSocket handshake overhaul Summary: SSLSocket.startHandshake now generalized to handle both client and server handshaking as well as client/server role reversal handshake_cutthrough.patch is properly integrated with support delayed handshake completion now integrated with delayed updates to session cache and callbacks to HandshakeCompletedListeners Many fixes to SSLSession, which is the end product of the handshake Generally more RI and SSLEngine compliant behavior. More native code deletion through unification of client/server handshake, unification of client/server certificate chain verification, etc. More native code moved from various OpenSSL classes to cleaner NativeCrypto interfaces that more directly mirror the OpenSSL interfaces. Details: Delay SSL_new call until handshake time when we know for sure whether the OpenSSLSocket will be used in client or server mode and we can allocate the SSL_new from the apppriate client or server SSL_CTX used for session caching. Now that no SSL is allocated for an OpenSSLServerSocketImpl, store enabledProtocols and enabledCipherSuites in instance String arrays. Use new NativeCrypto.checkEnabled* methdods for argument validation. OpenSSLServerSocketImpl passes these enabled arrays to a new OpenSSLSocket constructor during accept(). Removed finalizer from OpenSSLServerSocketImpl since it no longer has any native storage and socket is already closed by PlainSocketImpl finalizer. X-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java OpenSSLSocket major overhaul to properly implement handshaking including switching client and server roles and session ID caching with handshake_cutthrough.patch. now implements NativeCrypto.HandshakeCompletedListeners for properly timed callback when handshake_cutthrough.patch delays handshake completion until first SSLSocket.getInputStream() read. similar enabledProtocols/enabledCipherSuites changes as OpenSSLServerSocketImpl since we need to store the state somewhere other than an openssl SSL struct until we are sure if we are doing a client or server handshake. added handshake completed field so that startHandshake can tell if handshake was completed during SSL_do_handshake or will be completed later by a call to HandshakeCompletedCallback.handshakeCompleted. removed nativegetsession as the equivalent value is now returned by SSL_do_handshake removed nativecipherauthenticationmethod as the value is now passed to verifyCertificateChain startHandshake is now a wrapper that forces a fully synchronous handshake startHandshake(boolean) is the the most changed method in this changelist, combinding both the old startHandshake logic, but also the OpenSSLSocketImpl.accept code as well. Notable differences from the old code: * now responsible for SSL_new * single code path for client/server handshaking dealing with SSLSession caching * now handles server certificate requests previously in OpenSSLServerSocketImpl, since a client can request to act like a server and therefore need to be able to make suck demands on its peer. * supports turning off handshake_cutthrough at a callers request via explicit call to startHandshake() * certificate verification happens during an upcall from openssl during SSL_do_handshake to verifyCertificateChain for both client and server cases. previously there was not quite right upcall support on the server side and post-handshake checking on the client, which did not allow for a proper alert to be sent to the peer informing them of the issue, which the RI and SSLEngine code do. * Similarly, setEnableSessionCreation(false) did not send an alert to the peer as the RI and SSLEngine code in the client case. In the server case, nothing was previously done. * The use of local certificates was not determined from introspecting the SSL struct post-handshake. This is now partially implemented and will be completed in a later change. SSLSocket.{shutdownInput,shutdownOutput} are now restored to the proper behavior of throwing UnsupportedOperationException. Gutted OpenSSLSocketImpl finalizer. The comment explains in detail the trouble of having the finalizer do anything more than touch its the instances own state due to unpredictable order of finalization and the future possability of parallel finalization. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java SSLSession fixes Made OpenSSLSessionImpl.sessionContext non-final so it could be nulled by SSLSession.invalidate to match RI behavior. As noted in AbstractSessionContext discussion, removed OpenSSLSessionImpl constructor that took SSLParameters, instead we take the possibly null localCertificates directly. OpenSSLSessionImpl.getLocalCertificates now simply returns the localCertificates member variable instead of incorrectly trying to query the KeyManager for certificates that may not have been used. OpenSSLSessionImpl now caches its native ID to avoid numerious native calls but also now provides as resetId which will update the cache when a delayed handshake happens due to the handshake_cutthrough.patch Fixed bug in getPeerPrincipal that it wasnt calling getPeerCertificates to initialize peerCertificates field. freeImpl is now public static in preparation for move to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java The old SSLSessionImpl class that is still used for representing the invalid session now returns isValid false and getProtocol ""NONE"" to match the RI. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java NativeCrypto improvements Adding NativeCrypto.SSL_{get,set,clear}_mode similar to NativeCrypto.SSL_{get,set,clear}_options along with SSL_MODE_HANDSHAKE_CUTTHROUGH constant which is used to explicitly disable/enable the Android handshake_cutthrough.patch behavior. Added missing NativeCrypto.SSL_clear_options and used to properly implement NativeCrypto.setEnabledProtocols. Added NativeCrypto.checkEnabledProtocols and NativeCrypto.checkEnabledCipherSuites helpers to implement exception compatability with the RI. While some of this code is refactored from existing NativeCrypto code, it is now also used by OpenSSLServerSocketImpl and OpenSSLSocketImpl which maintain their own String[]s of what is enabled until startHandshake time. (see below) Changed NativeCrypto.findSuite to use foreach style loop for clarity. Moved OpenSSLServerSocketImpl nativesetclientauth and SSL_VERIFY_* constants to NativeCrypto.SSL_set_verify Added NativeCrypto.SSL_set_session based on part of old OpenSSLSocketImpl.nativeconnect Added NativeCrypto.SSL_set_session_creation_enabled to properly implement SSLSocket.setEnableSessionCreation(false) which uses new external/openssl/patches/jsse.patch functionality. New NativeCrypto.SSL_do_handshake consolidates OpenSSLSocketImpl.{nativeconnect, nativeaccept} while properly implementing SSLSocket.setUseClientMode(false) for clients and SSLSocket.setUseClientMode(true) for servers. New NativeCrypto.SSL_get_certificate is determine if local certificate requested by peer. While functional, currently NativeCrypto.SSL_new always sets a value via SSL_use_certificate instead of relying on a callback set via SSL_CTX_set_client_cert_cb. Changed NativeCrypto.CertificateChainVerifier.verifyCertificateChain to throw a checked CertificateException to match TrustManager.{checkServerTrusted, checkClientTrusted}. It also takes an authMethod so avoid the need to call the old OpenSSLSocketImpl.nativecipherauthenticationmethod. Added NativeCrypto.HandshakeCompletedCallback which has its handshakeCompleted method called from OpenSSL when the now delayed handshake_cutthrough.patch handshake is completed so SSLSession caching can be delayed until a session ID is available and to provide a better time for HandshakeCompletedListeners to be notified. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Some other changes specific to the naitve side of the code Added JNITRACE calls (enabled at compile time with JNI_TRACE) for future debugging. throw SSLException subclass of IOException instead IOException itself for better RI compatability x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp changed from old struct app_data to new class AppData at enhs request Remove dubious usage of SSLParameters within AbstractSessionContext to pass through to OpenSSLSessionImpl constructor for use in calling getLocalCertificates for sessions created from a byte array with AbstractSessionContext.toSession. Our AbstractSessionContext.toBytes doesnt currently include the local certificates in its output, so it cannot be expected to have in toSession. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Test maintenance openssl 1.0.0 adds support for RFC 4507 session tickets which remove the need for server side session state. These tests needed to be updated for this new behavior. If IS_RI is true, they still follow the old behavior. luni/src/test/java/javax/net/ssl/SSLSessionContextTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Update KnownFailures and add specific comments at point of failure about what remains to be fixed. luni/src/test/java/javax/net/ssl/SSLSessionTest.java Added tests to cover the use of standard cipher suite names. Historically Android has used OpenSSL string constants for cipher suite names, but JSSE actually specifies supported and expected names. luni/src/test/java/javax/net/ssl/SSLSocketFactoryTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Create new support/src/test/java/javax/net/ssl with old Helper support code pulled from javax.net.ssl tests: SSLContextTest.Helper TestSSLContext SSLSocketTest.Helper TestSSLSocketPair SSLSessionTest.Helper TestSSLSessions Also added new StandardNames here, which contains a collection of expected constants for test validation. luni/src/test/java/javax/net/ssl/SSLContextTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java support/src/test/java/javax/net/ssl/TestSSLContext.java support/src/test/java/javax/net/ssl/TestSSLSocketPair.java support/src/test/java/javax/net/ssl/TestSSLSessions.java support/src/test/java/javax/net/ssl/StandardNames.java Removed some now fixed KnownFailures and unneeded IS_RI code. Marked some [Un]KnownFailures where exceptions are thrown and visible in the output but arent correctly causing the test to fail. Fixed assertNonNull to assertTrue in test_SSLSocketTest_Test_create. Added stress_test_SSLSocketTest_Test_create to track down test flakiness, leading to rewrite of SSLSocket finalization. luni/src/test/java/javax/net/ssl/SSLSocketTest.java Reenable javax.net.ssl.AllTests now that it is does not hang luni/src/test/java/tests/AllTests.java Improve error messages while debugging overflow problem. Added new assert when debugging new RFC 4507 behavior. Removed KnownFailure annotation for now working test case. x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionTest.java Client code changes Now that startHandshake implies synchronous vs Androids default async handshake, remove unneeded explict calls to SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed IBM 1.4.x codepath that involved startHandshake x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java Unrelated Remove unneed SSLSocket.setUseClientMode while removing unneeded SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed warnings due to now missing modules in classpath run-core-tests Change-Id: I6e149ae259b3feccdfb0673209c85cfeb60befc8/"
,,0.8558,conscrypt,"OpenSSLSocket handshake overhaul Summary: SSLSocket.startHandshake now generalized to handle both client and server handshaking as well as client/server role reversal handshake_cutthrough.patch is properly integrated with support delayed handshake completion now integrated with delayed updates to session cache and callbacks to HandshakeCompletedListeners Many fixes to SSLSession, which is the end product of the handshake Generally more RI and SSLEngine compliant behavior. More native code deletion through unification of client/server handshake, unification of client/server certificate chain verification, etc. More native code moved from various OpenSSL classes to cleaner NativeCrypto interfaces that more directly mirror the OpenSSL interfaces. Details: Delay SSL_new call until handshake time when we know for sure whether the OpenSSLSocket will be used in client or server mode and we can allocate the SSL_new from the apppriate client or server SSL_CTX used for session caching. Now that no SSL is allocated for an OpenSSLServerSocketImpl, store enabledProtocols and enabledCipherSuites in instance String arrays. Use new NativeCrypto.checkEnabled* methdods for argument validation. OpenSSLServerSocketImpl passes these enabled arrays to a new OpenSSLSocket constructor during accept(). Removed finalizer from OpenSSLServerSocketImpl since it no longer has any native storage and socket is already closed by PlainSocketImpl finalizer. X-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java OpenSSLSocket major overhaul to properly implement handshaking including switching client and server roles and session ID caching with handshake_cutthrough.patch. now implements NativeCrypto.HandshakeCompletedListeners for properly timed callback when handshake_cutthrough.patch delays handshake completion until first SSLSocket.getInputStream() read. similar enabledProtocols/enabledCipherSuites changes as OpenSSLServerSocketImpl since we need to store the state somewhere other than an openssl SSL struct until we are sure if we are doing a client or server handshake. added handshake completed field so that startHandshake can tell if handshake was completed during SSL_do_handshake or will be completed later by a call to HandshakeCompletedCallback.handshakeCompleted. removed nativegetsession as the equivalent value is now returned by SSL_do_handshake removed nativecipherauthenticationmethod as the value is now passed to verifyCertificateChain startHandshake is now a wrapper that forces a fully synchronous handshake startHandshake(boolean) is the the most changed method in this changelist, combinding both the old startHandshake logic, but also the OpenSSLSocketImpl.accept code as well. Notable differences from the old code: * now responsible for SSL_new * single code path for client/server handshaking dealing with SSLSession caching * now handles server certificate requests previously in OpenSSLServerSocketImpl, since a client can request to act like a server and therefore need to be able to make suck demands on its peer. * supports turning off handshake_cutthrough at a callers request via explicit call to startHandshake() * certificate verification happens during an upcall from openssl during SSL_do_handshake to verifyCertificateChain for both client and server cases. previously there was not quite right upcall support on the server side and post-handshake checking on the client, which did not allow for a proper alert to be sent to the peer informing them of the issue, which the RI and SSLEngine code do. * Similarly, setEnableSessionCreation(false) did not send an alert to the peer as the RI and SSLEngine code in the client case. In the server case, nothing was previously done. * The use of local certificates was not determined from introspecting the SSL struct post-handshake. This is now partially implemented and will be completed in a later change. SSLSocket.{shutdownInput,shutdownOutput} are now restored to the proper behavior of throwing UnsupportedOperationException. Gutted OpenSSLSocketImpl finalizer. The comment explains in detail the trouble of having the finalizer do anything more than touch its the instances own state due to unpredictable order of finalization and the future possability of parallel finalization. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java SSLSession fixes Made OpenSSLSessionImpl.sessionContext non-final so it could be nulled by SSLSession.invalidate to match RI behavior. As noted in AbstractSessionContext discussion, removed OpenSSLSessionImpl constructor that took SSLParameters, instead we take the possibly null localCertificates directly. OpenSSLSessionImpl.getLocalCertificates now simply returns the localCertificates member variable instead of incorrectly trying to query the KeyManager for certificates that may not have been used. OpenSSLSessionImpl now caches its native ID to avoid numerious native calls but also now provides as resetId which will update the cache when a delayed handshake happens due to the handshake_cutthrough.patch Fixed bug in getPeerPrincipal that it wasnt calling getPeerCertificates to initialize peerCertificates field. freeImpl is now public static in preparation for move to NativeCrypto. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java The old SSLSessionImpl class that is still used for representing the invalid session now returns isValid false and getProtocol ""NONE"" to match the RI. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSessionImpl.java NativeCrypto improvements Adding NativeCrypto.SSL_{get,set,clear}_mode similar to NativeCrypto.SSL_{get,set,clear}_options along with SSL_MODE_HANDSHAKE_CUTTHROUGH constant which is used to explicitly disable/enable the Android handshake_cutthrough.patch behavior. Added missing NativeCrypto.SSL_clear_options and used to properly implement NativeCrypto.setEnabledProtocols. Added NativeCrypto.checkEnabledProtocols and NativeCrypto.checkEnabledCipherSuites helpers to implement exception compatability with the RI. While some of this code is refactored from existing NativeCrypto code, it is now also used by OpenSSLServerSocketImpl and OpenSSLSocketImpl which maintain their own String[]s of what is enabled until startHandshake time. (see below) Changed NativeCrypto.findSuite to use foreach style loop for clarity. Moved OpenSSLServerSocketImpl nativesetclientauth and SSL_VERIFY_* constants to NativeCrypto.SSL_set_verify Added NativeCrypto.SSL_set_session based on part of old OpenSSLSocketImpl.nativeconnect Added NativeCrypto.SSL_set_session_creation_enabled to properly implement SSLSocket.setEnableSessionCreation(false) which uses new external/openssl/patches/jsse.patch functionality. New NativeCrypto.SSL_do_handshake consolidates OpenSSLSocketImpl.{nativeconnect, nativeaccept} while properly implementing SSLSocket.setUseClientMode(false) for clients and SSLSocket.setUseClientMode(true) for servers. New NativeCrypto.SSL_get_certificate is determine if local certificate requested by peer. While functional, currently NativeCrypto.SSL_new always sets a value via SSL_use_certificate instead of relying on a callback set via SSL_CTX_set_client_cert_cb. Changed NativeCrypto.CertificateChainVerifier.verifyCertificateChain to throw a checked CertificateException to match TrustManager.{checkServerTrusted, checkClientTrusted}. It also takes an authMethod so avoid the need to call the old OpenSSLSocketImpl.nativecipherauthenticationmethod. Added NativeCrypto.HandshakeCompletedCallback which has its handshakeCompleted method called from OpenSSL when the now delayed handshake_cutthrough.patch handshake is completed so SSLSession caching can be delayed until a session ID is available and to provide a better time for HandshakeCompletedListeners to be notified. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp Some other changes specific to the naitve side of the code Added JNITRACE calls (enabled at compile time with JNI_TRACE) for future debugging. throw SSLException subclass of IOException instead IOException itself for better RI compatability x-net/src/main/native/org_apache_harmony_xnet_provider_jsse_NativeCrypto.cpp changed from old struct app_data to new class AppData at enhs request Remove dubious usage of SSLParameters within AbstractSessionContext to pass through to OpenSSLSessionImpl constructor for use in calling getLocalCertificates for sessions created from a byte array with AbstractSessionContext.toSession. Our AbstractSessionContext.toBytes doesnt currently include the local certificates in its output, so it cannot be expected to have in toSession. x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerSessionContext.java x-net/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParameters.java Test maintenance openssl 1.0.0 adds support for RFC 4507 session tickets which remove the need for server side session state. These tests needed to be updated for this new behavior. If IS_RI is true, they still follow the old behavior. luni/src/test/java/javax/net/ssl/SSLSessionContextTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Update KnownFailures and add specific comments at point of failure about what remains to be fixed. luni/src/test/java/javax/net/ssl/SSLSessionTest.java Added tests to cover the use of standard cipher suite names. Historically Android has used OpenSSL string constants for cipher suite names, but JSSE actually specifies supported and expected names. luni/src/test/java/javax/net/ssl/SSLSocketFactoryTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java Create new support/src/test/java/javax/net/ssl with old Helper support code pulled from javax.net.ssl tests: SSLContextTest.Helper TestSSLContext SSLSocketTest.Helper TestSSLSocketPair SSLSessionTest.Helper TestSSLSessions Also added new StandardNames here, which contains a collection of expected constants for test validation. luni/src/test/java/javax/net/ssl/SSLContextTest.java luni/src/test/java/javax/net/ssl/SSLSocketTest.java luni/src/test/java/javax/net/ssl/SSLSessionTest.java support/src/test/java/javax/net/ssl/TestSSLContext.java support/src/test/java/javax/net/ssl/TestSSLSocketPair.java support/src/test/java/javax/net/ssl/TestSSLSessions.java support/src/test/java/javax/net/ssl/StandardNames.java Removed some now fixed KnownFailures and unneeded IS_RI code. Marked some [Un]KnownFailures where exceptions are thrown and visible in the output but arent correctly causing the test to fail. Fixed assertNonNull to assertTrue in test_SSLSocketTest_Test_create. Added stress_test_SSLSocketTest_Test_create to track down test flakiness, leading to rewrite of SSLSocket finalization. luni/src/test/java/javax/net/ssl/SSLSocketTest.java Reenable javax.net.ssl.AllTests now that it is does not hang luni/src/test/java/tests/AllTests.java Improve error messages while debugging overflow problem. Added new assert when debugging new RFC 4507 behavior. Removed KnownFailure annotation for now working test case. x-net/src/test/java/tests/api/javax/net/ssl/SSLSessionTest.java Client code changes Now that startHandshake implies synchronous vs Androids default async handshake, remove unneeded explict calls to SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed IBM 1.4.x codepath that involved startHandshake x-net/src/main/java/javax/net/ssl/DefaultHostnameVerifier.java Unrelated Remove unneed SSLSocket.setUseClientMode while removing unneeded SSLSocket.startHandshake luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Removed warnings due to now missing modules in classpath run-core-tests Change-Id: I6e149ae259b3feccdfb0673209c85cfeb60befc8/"
,,0.4595,conscrypt,"Scrub missing calls to super.finalize() Bug: 3024226 Change-Id: I6642cb9d4929ba72244529efe4ebdfa595ae4fa7/am 873c0bfb: am a1b18854: Merge ""Fix OpenSSLSessionImpl.getValueNames regression"" into gingerbread Merge commit 873c0bfbf627fa15dd44463f9a664b6f83c74594 * commit 873c0bfbf627fa15dd44463f9a664b6f83c74594: Fix OpenSSLSessionImpl.getValueNames regression/Fix OpenSSLSessionImpl.getValueNames regression In e32b21f14d52bac429a9c54fe031f9e92c911d64, the code was converted to use Objects.equals. However, because of a typo, an autoboxed Boolean was passed instead of an AccessControlContext. I reviewed the rest of the original change to make sure there were no other instances of this regression. Also cleaned up the SSLSessionTest (fixing two broken tests test_getLocalPrincipal and test_getPeerPrincipal) and fixed a whitespace issue in AccessControlContext. Change-Id: Icaee8a0c2f5f527bea7a80037fe3f99c509d9f42/Fix HttpsURLConnectionTest failures Focusing on HttpsURLConnectionTest.test_doOutput found a number of unrelated issues, all of which are addressed by this change: {HttpURLConnection,HttpsURLConnection}.connect not ignored on subsequent calls OpenSSLSessionImpl.{getPeerCertificates,getPeerCertificateChain} did not include client certificate OpenSSLSocketImpl.getSession did not skip handshake when SSLSession was already available Fix 3 test issues in HttpsURLConnectionTest Fix 2 test issues in NativeCryptoTest Details: HttpsURLConnectionTest tests (such as test_doOutput) that tried to call URLConnection.connect() at the end of the test were raising exception. The RI URLConnection.connect documentation says calls on connected URLConnections should be ignored. Use ""connected"" instead of ""connection null"" as reason to ignore ""connect"" luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Converted one caller of getPeerCertificateChain to getPeerCertificates which is the new fast path. Track OpenSSLSessionImpl change to take ""java"" vs ""javax"" certificates. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/AbstractSessionContext.java Move SSL_SESSION_get_peer_cert_chain to be SSL_get_peer_cert_chain (similar to SSL_get_certificate). The problem was that SSL_SESSION_get_peer_cert_chain used SSL_get_peer_cert_chain which in the server case did not include the client cert itself, which required a call to SSL_get_peer_certificate, which needed the SSL instance pointer. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/native/NativeCrypto.cpp Improved NativeCrypto_SSL_set_verify tracing luni/src/main/native/NativeCrypto.cpp As a side effect of the move to NativeCrypto.SSL_get_peer_certificate, it no longer made sense to lazily create the peer certificate chain since the SSLSession should not depend on a particular SSL instance. The peer chain is now passed in as part of the constructor and the peerCertifcates in the OpenSSLSession can be final (also made localCertificates final). Since peerCertifcates is the newew (java not javax) API and more commonly used, it is what is created from the native code, and peerCertificateChain is not derived from peerCertifcates instead of vice versa. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java Factored out code to used to create local certificate chain to from array of DER byte arrays into createCertChain so it can be reused to create peer certificate chain. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Fix OpenSSLSocketImpl.getSession to check for existing sslSession to and skip handshake, which was causing an exception if the connection had already been closed. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Fix test issues: Removed PrintStream wrapper of System.out which was causing vogar to lose output. Added null check in closeSocket, which can happen in timeout case. Removed use of InputStream.available which in OpenSSLSocket case returned 0, causing test to fail incorrectly. luni/src/test/java/org/apache/harmony/luni/tests/internal/net/www/protocol/ Updating to track change to SSL_get_peer_cert_chain. Also fixed some other unrelated test failures caused by IOException on shutdown and false start (aka SSL_MODE_HANDSHAKE_CUTTHROUGH) causing clientCallback.handshakeCompleted to be false. luni/src/test/java/org/apache/harmony/xnet/provider/jsse/NativeCryptoTest.java Bug: b/2981767 Change-Id: Id083beb6496558296c2f74f51ab0970e158b23a9/am bfc0713b: am 12e10c1c: b/2914872: fix concurrent initialization problem with peer certificate chain fields Merge commit bfc0713bb26ec11c2000ba64439b3abdcb72a0bf into dalvik-dev * commit bfc0713bb26ec11c2000ba64439b3abdcb72a0bf: b/2914872: fix concurrent initialization problem with peer certificate chain fields/b/2914872: fix concurrent initialization problem with peer certificate chain fields Change-Id: Ib76dd826c8f3616d4a3aed608aef432a1b99f3d6/"
,,0.4278,conscrypt,"TrustManager improvements Overhaul of TrustManagerImpl PKIXParameters can now be final in TrustManagerImpl because we always immediately create an IndexedPKIXParameters instead of only doing it in SSLParametersImpl.createDefaultTrustManager. Use new KeyStore constructor for IndexedPKIXParameters to remove duplicate logic for creating set of TrustAnchors from a KeyStore. Improved checkTrusted/cleanupCertChain to remove special cases for directly trusting the end cert or pruning only self signed certs. To support b/2530852, we need to stop prune the chain as soon as we find any trust anchor (using newly improved TrustManagerImpl.isTrustAnchor), which could be at the beginning, middle, or end. That means cleanupCertChain can return an empty chain if everything was trusted directly. (and we dont need to do extra checks on exception cases to see if the problem was just that the trust anchor was in the chain) isDirectlyTrusted isTrustAnchor here as well, using new IndexedPKIXParameters.isTrustAnchor APIs Fix incorrect assumption in getAcceptedIssuers that all TrustAnchor instances have non-null results for getTrustedCert. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/TrustManagerImpl.java Removed indexing in createDefaultTrustManager since we always index now luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java Overhaul of IndexedPKIXParameters Single map from subject X500Principal to TrustAnchors instead of two different X500Principal keyed maps to check Removed map based on encoded cert. For b/2530852, we want to treat certs as equal if they have the same name and public key, not byte-for-byte equality, which can be done with the remaining map. Revamped isDirectlyTrusted into isTrustAnchor(cert) to perform this new name/key based comparison. Added helper isTrustAnchor(cert, anchors) to reuse code in non-IndexedPKIXParameters case in TrustManagerImpl. Added constructor from KeyStore Moved anchor indexing code to index() from old constructor luni/src/main/java/org/apache/harmony/xnet/provider/jsse/IndexedPKIXParameters.java TestKeyStore.getPrivateKey allowed some existing test simplification. luni/src/test/java/libcore/java/security/KeyStoreTest.java luni/src/test/java/org/apache/harmony/xnet/provider/jsse/NativeCryptoTest.java support/src/test/java/libcore/java/security/TestKeyStore.java Added missing ""fail()"" before catching expected exceptions. luni/src/test/java/libcore/java/security/KeyStoreTest.java Expanded KeyManagerFactoryTest to excercise ManagerFactoryParameters b/1628001 luni/src/test/java/libcore/javax/net/ssl/KeyManagerFactoryTest.java Added KeyStoreBuilderParametersTest because I thought I saw a bug in KeyStoreBuilderParameters, but this convinced me otherwise. luni/src/test/java/libcore/javax/net/ssl/KeyStoreBuilderParametersTest.java New TrustManagerFactory test modeled on expanded KeyManagerFactoryTest. test_TrustManagerFactory_intermediate specifically is targeting the new functionality of b/2530852 to handling trust anchors within the chain. luni/src/test/java/libcore/javax/net/ssl/TrustManagerFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Some initial on tests for Elliptic Curve (b/3058375) after the RI started reporting it was supported. Removed old tags. Skipped a test on the RI that it cant handle. Improved some assert messages. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java support/src/test/java/libcore/java/security/StandardNames.java support/src/test/java/libcore/java/security/TestKeyStore.java Removed unneeded bytes->javax->bytes->java case of which can just go bytes->java directly. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed super() luni/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java Made Security.secprops final luni/src/main/java/java/security/Security.java Pulled SamplingProfiler fix from dalvik-dev branch git cherry-pick f9dc3450e8f23cab91efc9df99bb860221ac3d6c dalvik/src/main/java/dalvik/system/SamplingProfiler.java Bug: 2530852 Change-Id: I95e0c7ee6a2f66b6986b3a9da9583d1ae52f94dd/"
,,0.1023,conscrypt,am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.3234,conscrypt,"SSLParameters.getDefaultTrustManager() should lazily initialize its value Make SSLParametersImpls defaultKeyManager, defaultTrustManager, defaultSecureRandom, and defaultParameters all use the single check idiom for initialization. Move such initialization for defaultKeyManager and defaultTrustManager out of SSLParametersImpl constructor into static functions, replacing original getDefaultTrustManager simple accessor with code that performs lazy initialization. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java dirrect direct luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java hanshake handshake luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLRecordProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java Bug: 2954292 Change-Id: I19bae541613666903b57fccf3e8bfef65b74d6cf/am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/"
,,0.3235,conscrypt,"Scrub missing calls to super.finalize() Bug: 3024226 Change-Id: I6642cb9d4929ba72244529efe4ebdfa595ae4fa7/Tracking external/bouncycastle OpenSSLDigest Making OpenSSLMessageDigestJDK final to match OpenSSLDigest version Fixing WITH_JNI_TRACE used for debugging OpenSSLDigest Bug: 3024499 Change-Id: I919749348e531d074a25e16ab13315cede4f88e5/Restore OpenSSLMessageDigestJDK.digest reset behavior SSLEngine tests started failing due to the recent incorrect change to OpenSSLMessageDigestJDK.digest() that removed the reset of MessageDigest state on call to digest(). The problem was not that the digest was resetting, but that it was resetting to use a SHA-0 algorithm. See recent change c38b8476e7e4bd4b091d9f0e8fe8b2b972e7bc81. Change-Id: I40ef4e18a1b546eac5a487cb8a808d4897b301b0/am e6b59c28: am 9e8d51c7: am a3de55dd: Implement OpenSSLMessageDigestJDK.clone and fix OpenSSLMessageDigestJDK.digest Merge commit e6b59c287ed3007d76167dd9741dc683f440ed2d into dalvik-dev * commit e6b59c287ed3007d76167dd9741dc683f440ed2d: Implement OpenSSLMessageDigestJDK.clone and fix OpenSSLMessageDigestJDK.digest/OpenSSLMessageDigestJDK.reset should not change from SHA-1 to SHA-0 For SHA-1, the OpenSSLMessageDigestJDK constructor was called with the algorithm name ""SHA-1"", which it passed to the superclass constructor for use as the algorithm field. However, MessageDigest.getInstance would then override this value with the its own algorithm argument. In the case of getInstance(""SHA""), this mean the constructor would set the value to ""SHA-1"" (from the OpenSSLMessageDigestJDK.SHA1 subclass constructor) which would then be overridden by getInstance to ""SHA"". Because the OpenSSLMessageDigestJDK would then initialize using ""SHA-1"", the MessageDigest worked in the common case. However, when it was MessageDigest.reset(), it called getAlgorithm() which returned ""SHA"", which was then passed to OpenSSL as ""sha"" which interpretted this as ""SHA-0"". The fix is to change to pass both a standard name (e.g ""SHA-1"") as well as openssl name expliclty (e.g. ""sha1""), removing the somewhat hacky code that tried to algorithmically transform from the standard names to the openssl ones. The same fix needs to be made to OpenSSLDigest. We also are removing SHA-0 from openssl since it is unneeded and would have cause an clear error if it had been absent. Change-Id: Iaa8f5b93a572fb043fa4f2618070ebb5054f82b1/Implement OpenSSLMessageDigestJDK.clone and fix OpenSSLMessageDigestJDK.digest DigestInputStream2Test.test_onZ was failing because OpenSSLMessageDigestJDK did not implement Clonable Implementing Clonable required a new NativeCrypto.EVP_MD_CTX_copy method While adding NativeCrypto.EVP_MD_CTX_copy, noticed other methods were not properly named in NativeCrypto.EVP_MD_CTX_* convention. Converted rest of NativeCrypto.cpp to JNI_TRACE logging while debugging DigestOutputStreamTest.test_onZ was failing because OpenSSLMessageDigestJDK.digest did an engineReset Removing the engineReset revealed that digest() could not be called repeatedly on an OpenSSLMessageDigestJDK. Problem was that EVP_DigestFinal can only be called once per digest. Changed engineDigest implementation to use new EVP_MD_CTX_copy to create a temp EVP_MD_CTX which can be used to retreive the digest and then discarded. Bug: 2997405 Change-Id: Ie97c22be245911300d2e729e451a9c4afdb27937/"
,,0.1004,conscrypt,am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.0964,conscrypt,Stop allocating empty arrays. Bug: 3166662 Change-Id: I151de373b2bf53786d19824336fa434c02b0b0e8/am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.1073,conscrypt,"Simplify skip() to use skipByReading or the superclass where possible. Several classes were overriding InputStream.skip() but not doing anything better than the base class. These were deleted. Others were allocating skip buffers which was correct, but duplicated code with our Streams utility class. The CipherInputStream class had a skip method that always skipped 0 bytes. This has been fixed and tested. Change-Id: Ic96c600e111c11cf7364b4e0a721791d7e3c2ae1/"
,,0.4314,conscrypt,"TrustManager improvements Overhaul of TrustManagerImpl PKIXParameters can now be final in TrustManagerImpl because we always immediately create an IndexedPKIXParameters instead of only doing it in SSLParametersImpl.createDefaultTrustManager. Use new KeyStore constructor for IndexedPKIXParameters to remove duplicate logic for creating set of TrustAnchors from a KeyStore. Improved checkTrusted/cleanupCertChain to remove special cases for directly trusting the end cert or pruning only self signed certs. To support b/2530852, we need to stop prune the chain as soon as we find any trust anchor (using newly improved TrustManagerImpl.isTrustAnchor), which could be at the beginning, middle, or end. That means cleanupCertChain can return an empty chain if everything was trusted directly. (and we dont need to do extra checks on exception cases to see if the problem was just that the trust anchor was in the chain) isDirectlyTrusted isTrustAnchor here as well, using new IndexedPKIXParameters.isTrustAnchor APIs Fix incorrect assumption in getAcceptedIssuers that all TrustAnchor instances have non-null results for getTrustedCert. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/TrustManagerImpl.java Removed indexing in createDefaultTrustManager since we always index now luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java Overhaul of IndexedPKIXParameters Single map from subject X500Principal to TrustAnchors instead of two different X500Principal keyed maps to check Removed map based on encoded cert. For b/2530852, we want to treat certs as equal if they have the same name and public key, not byte-for-byte equality, which can be done with the remaining map. Revamped isDirectlyTrusted into isTrustAnchor(cert) to perform this new name/key based comparison. Added helper isTrustAnchor(cert, anchors) to reuse code in non-IndexedPKIXParameters case in TrustManagerImpl. Added constructor from KeyStore Moved anchor indexing code to index() from old constructor luni/src/main/java/org/apache/harmony/xnet/provider/jsse/IndexedPKIXParameters.java TestKeyStore.getPrivateKey allowed some existing test simplification. luni/src/test/java/libcore/java/security/KeyStoreTest.java luni/src/test/java/org/apache/harmony/xnet/provider/jsse/NativeCryptoTest.java support/src/test/java/libcore/java/security/TestKeyStore.java Added missing ""fail()"" before catching expected exceptions. luni/src/test/java/libcore/java/security/KeyStoreTest.java Expanded KeyManagerFactoryTest to excercise ManagerFactoryParameters b/1628001 luni/src/test/java/libcore/javax/net/ssl/KeyManagerFactoryTest.java Added KeyStoreBuilderParametersTest because I thought I saw a bug in KeyStoreBuilderParameters, but this convinced me otherwise. luni/src/test/java/libcore/javax/net/ssl/KeyStoreBuilderParametersTest.java New TrustManagerFactory test modeled on expanded KeyManagerFactoryTest. test_TrustManagerFactory_intermediate specifically is targeting the new functionality of b/2530852 to handling trust anchors within the chain. luni/src/test/java/libcore/javax/net/ssl/TrustManagerFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Some initial on tests for Elliptic Curve (b/3058375) after the RI started reporting it was supported. Removed old tags. Skipped a test on the RI that it cant handle. Improved some assert messages. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java support/src/test/java/libcore/java/security/StandardNames.java support/src/test/java/libcore/java/security/TestKeyStore.java Removed unneeded bytes->javax->bytes->java case of which can just go bytes->java directly. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Removed super() luni/src/main/java/javax/net/ssl/KeyStoreBuilderParameters.java Made Security.secprops final luni/src/main/java/java/security/Security.java Pulled SamplingProfiler fix from dalvik-dev branch git cherry-pick f9dc3450e8f23cab91efc9df99bb860221ac3d6c dalvik/src/main/java/dalvik/system/SamplingProfiler.java Bug: 2530852 Change-Id: I95e0c7ee6a2f66b6986b3a9da9583d1ae52f94dd/Move improved cert chain handling from CertificateChainValidator to TrustManagerImpl Bug: 2658463 Change-Id: I014ebfee1f6e2f46b7a842b5bbf6549bf484f3c0/"
,,0.1088,conscrypt,"Simplify skip() to use skipByReading or the superclass where possible. Several classes were overriding InputStream.skip() but not doing anything better than the base class. These were deleted. Others were allocating skip buffers which was correct, but duplicated code with our Streams utility class. The CipherInputStream class had a skip method that always skipped 0 bytes. This has been fixed and tested. Change-Id: Ic96c600e111c11cf7364b4e0a721791d7e3c2ae1/"
,,0.1043,conscrypt,am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.2797,conscrypt,"SSLParameters.getDefaultTrustManager() should lazily initialize its value Make SSLParametersImpls defaultKeyManager, defaultTrustManager, defaultSecureRandom, and defaultParameters all use the single check idiom for initialization. Move such initialization for defaultKeyManager and defaultTrustManager out of SSLParametersImpl constructor into static functions, replacing original getDefaultTrustManager simple accessor with code that performs lazy initialization. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java dirrect direct luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java hanshake handshake luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLRecordProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLSocketImpl.java Bug: 2954292 Change-Id: I19bae541613666903b57fccf3e8bfef65b74d6cf/"
,,0.1049,conscrypt,Make OpenSSLSocketFactory and SSLSocketFactory fields final Bug: 2954292 Change-Id: I4cad068d4da39a9c55ca25fad698f3ea136f2e24/am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.1102,conscrypt,am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/Remove SSLContextImpl.engineInit(..) that takes persistent cache arguments Bug: 2672817 Change-Id: I201815857e4452498c746139b8d64b7721bc22cc/
,,0.0984,conscrypt,am 1ca26549: am 912db46c: am 6812a2e8: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Merge commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618 into dalvik-dev * commit 1ca26549fbe0f4bc171ba7bf8ab0a86ae591c618: Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters/Rename internal SSLParameters to SSLParametersImpl to avoid collision with new javax.net.ssl.SSLParameters Bug: 2672817 Change-Id: Iadf21b848eaf8850fce22721b9ba3739ab2e9fca/
,,0.4638,conscrypt,"Retire SecurityManager. This change removes all the code that was calling getSecurityManager, and removes all use of AccessController.doPrivileged. It also changes the implementation of AccessController so it doesnt actually do anything; its only there for source-level compatibility. Bug: 2585285 Change-Id: I1f0295a4f12bce0316d8073011d8593fee116f71/HttpsURLConnection retry should not invoke X509TrustManager and HostnameVerifier more than once Summary: In 2.3, HttpsURLConnection was change to retry TLS connections as SSL connections w/o compression to deal with servers that are TLS intolerant. However, if the handshake proceeded to the point of invoking the X509TrustManager, we should not retry. Similarly, if we should not invoke the HostnameVerifier repeatedly, and need to wait until the SSL handshake has completed. Tested with (includes two new tests for this issue): libcore/luni/src/test/java/libcore/javax/net/ssl/ libcore/luni/src/test/java/libcore/java/net/URLConnectionTest.java libcore/luni/src/test/java/org/apache/harmony/luni/tests/internal/net/www/protocol/ Details: HttpConnection.setupSecureSocket has been broken into two pieces. setupSecureSocket now just does the SSL handshaking. verifySecureSocketHostname now does the verification. The old HttpConnection code was careful never to assign its sslSocket field until verification was complete. A new unverifiedSocket field is added to store the sslSocket before verification is completed by verifySecureSocketHostname. luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ HttpsEngine.makeConnection now skips TLS intolerant retry if the reason for the makeSslConnection failure was a CertificateException, since that implies that we failed during certification validation after initial handshaking. We also prevent retrying hostname verification by moving it out of makeSslConnection and only doing it on new SSL connections, tracking the changes to HttpConnection.setupSecureSocket mentioned above. We also now skip the redundant call to setUpTransportIO in makeSslConnection on reused SSLSockets. luni/src/main/java/org/apache/harmony/luni/internal/net/www/protocol/ Instead of throwing away the underlying CertificateExceptions, set them as the cause of the SSLExceptions. This is what the RI does in the case of X509TrustManager failures and is now used by HttpsEngine.makeConnection. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSessionImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Added new testConnectViaHttpsToUntrustedServer which makes sure that connections are not retried on certificate verification failure. luni/src/test/java/libcore/java/net/URLConnectionTest.java Added new test_SSLSocket_untrustedServer that verifies that an SSLHandshakeException is thown containing a CertificateException is thrown on certificate verification problems. luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java Added second test CA and a new TestKeyStore.getClientCA2 test key store that does not trust the primary test key stores. This is useful for negative testing and is used in the above two new tests. support/src/test/java/libcore/java/security/TestKeyStore.java Issue: Bug: 3292412 Change-Id: I37136bb65f04d2bceaf2f32f542d6432c8b76ad4/"
,,0.632,conscrypt,"Elliptic Crypto support for OpenSSLSocketImpl Summary: Enable Elliptic Crypto support for OpenSSL based SSLSocket instances More RI compliant usage of key types, client auth types, and server auth types Steps toward TLS_EMPTY_RENEGOTIATION_INFO_SCSV support, currently test updates Details: Elliptic Curve changes CipherSuite updates for EC Adding KEY_EXCHANGE_EC* and corresponding CipherSuites Updated isAnonymous, getKeyType (now renamed getServerKeyType) to handle new EC cases. Added new getAuthType for use by checkServerTrusted callers. Restructured code to handle two SUITES_BY_CODE_* arrays Remove KEY_EXCHANGE_DH_* definitions which unused because the corresponding CipherSuites were previously disabled. Changed AES CipherSuites definitions to use ""_CBC"" to match other definitions. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java openssl EC NativeCrypto now registers TLS_EC_* cipher suites and has update default list Improved auth type arguments to checkClientTrusted/checkServerTrusted NativeCrypto support for emphemeral EC keys luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/native/NativeCrypto.cpp non-openssl SSL/TLS cleanups cleanup around code trying to cope with DiffieHellman vs DH since either should work. changed client to use new CipherSuite.getAuthType shared with NativeCrypto implementation changed server to use CipherSuite.getKeyType luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Consolidate CertificateRequestType code into CipherSuite so that its shared between java and openssl implementations. This includes the KEY_TYPE_ string constants, TLS_CT_* byte constants and the String keyType(byte) (now renamed getClientKeyType) code that depends on them. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Tests Differentiate between supported list of cipher suites openssl-based SSLSocket and SSLEngine based, since the SSLEngine code does not support EC. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java Added testing for expected default cipher suites. Before we just ensured the values were valid. luni/src/test/java/libcore/javax/net/ssl/SSLSocketFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Updated to handle new EC cipher suites codes. Added test for new getClientKeyType. luni/src/test/java/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java Better use of ""standard names"" particularly to correctly deal with the subtle differences between key types, client auth types, and server auth types. TestKeyManager and TestTrustManager now verify the values they are passed are acceptable. support/src/test/java/libcore/java/security/StandardNames.java support/src/test/java/libcore/javax/net/ssl/TestKeyManager.java support/src/test/java/libcore/javax/net/ssl/TestTrustManager.java Changed to timeout after 30 seconds and to log to reveal both client and server issues. support/src/test/java/libcore/javax/net/ssl/TestSSLSocketPair.java Bug: 3058375 Change-Id: I14d1d0285d591c99cc211324f3595a5be682cab1/Test updates for Elliptic Curve Updated with Elliptic Curve (EC) (and SunPKCS11-NSS) names for use by ProviderTest support/src/test/java/libcore/java/security/StandardNames.java Enhance test_KeyStore_cacerts_bks to verify PublicKey can be retreived. Before this the test would pass even though an ECPublicKey could not be accessed. With EC support in external/bouncycastle, this test now passes. luni/src/test/java/libcore/java/security/KeyStoreTest.java New SignatureTest to cover ECDSA, replaces the old one that required a subclass per tested algorithm. luni/src/test/java/libcore/java/security/SignatureTest.java support/src/test/java/tests/security/SignatureTest.java luni/src/test/java/tests/targets/security/SignatureTestMD5withRSA.java luni/src/test/java/tests/targets/security/SignatureTestNONEwithDSA.java luni/src/test/java/tests/targets/security/SignatureTestSHA1withDSA.java luni/src/test/java/tests/targets/security/SignatureTestSHA1withRSA.java luni/src/test/java/tests/targets/security/SignatureTestSHA256withRSA.java luni/src/test/java/tests/targets/security/SignatureTestSHA384withRSA.java luni/src/test/java/tests/targets/security/SignatureTestSHA512withRSA.java luni/src/test/java/tests/targets/security/AllTests.java Improve ProviderTest logging while debugging SunPKCS11-NSS provider issues. Added some exceptions for RI missing classes. luni/src/test/java/libcore/java/security/ProviderTest.java Changed style slightly to match KeyPairGeneratorTest, where +N is used to indicated when multiples of a increments of a certain amount are required for valid key sizes. luni/src/test/java/libcore/javax/crypto/KeyGeneratorTest.java Fix test CloseGuard issues luni/src/test/java/libcore/java/security/KeyStoreTest.java Fix readability luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Bug: 3058375 Change-Id: I99cd93ad66372e8512d993168550cc1d471d3248/"
,,0.6748,conscrypt,"Elliptic Crypto support for OpenSSLSocketImpl Summary: Enable Elliptic Crypto support for OpenSSL based SSLSocket instances More RI compliant usage of key types, client auth types, and server auth types Steps toward TLS_EMPTY_RENEGOTIATION_INFO_SCSV support, currently test updates Details: Elliptic Curve changes CipherSuite updates for EC Adding KEY_EXCHANGE_EC* and corresponding CipherSuites Updated isAnonymous, getKeyType (now renamed getServerKeyType) to handle new EC cases. Added new getAuthType for use by checkServerTrusted callers. Restructured code to handle two SUITES_BY_CODE_* arrays Remove KEY_EXCHANGE_DH_* definitions which unused because the corresponding CipherSuites were previously disabled. Changed AES CipherSuites definitions to use ""_CBC"" to match other definitions. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java openssl EC NativeCrypto now registers TLS_EC_* cipher suites and has update default list Improved auth type arguments to checkClientTrusted/checkServerTrusted NativeCrypto support for emphemeral EC keys luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/native/NativeCrypto.cpp non-openssl SSL/TLS cleanups cleanup around code trying to cope with DiffieHellman vs DH since either should work. changed client to use new CipherSuite.getAuthType shared with NativeCrypto implementation changed server to use CipherSuite.getKeyType luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Consolidate CertificateRequestType code into CipherSuite so that its shared between java and openssl implementations. This includes the KEY_TYPE_ string constants, TLS_CT_* byte constants and the String keyType(byte) (now renamed getClientKeyType) code that depends on them. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Tests Differentiate between supported list of cipher suites openssl-based SSLSocket and SSLEngine based, since the SSLEngine code does not support EC. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java Added testing for expected default cipher suites. Before we just ensured the values were valid. luni/src/test/java/libcore/javax/net/ssl/SSLSocketFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Updated to handle new EC cipher suites codes. Added test for new getClientKeyType. luni/src/test/java/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java Better use of ""standard names"" particularly to correctly deal with the subtle differences between key types, client auth types, and server auth types. TestKeyManager and TestTrustManager now verify the values they are passed are acceptable. support/src/test/java/libcore/java/security/StandardNames.java support/src/test/java/libcore/javax/net/ssl/TestKeyManager.java support/src/test/java/libcore/javax/net/ssl/TestTrustManager.java Changed to timeout after 30 seconds and to log to reveal both client and server issues. support/src/test/java/libcore/javax/net/ssl/TestSSLSocketPair.java Bug: 3058375 Change-Id: I14d1d0285d591c99cc211324f3595a5be682cab1/"
,,0.2513,conscrypt,"Performance improvements to NativeCrypto based MessageDigest API NativeCrypto API improvements: Move to using EVP_MD related native methods, some of which are derived from the EVP_MD_CTX versions with similar name. The new EVP_get_digestbyname allows one time lookup of the EVP_MD from the string name, avoiding doing it on every call to EVP_DigestInit. EVP_MD_CTX_create is now removed, it is just done as part of EVP_DigestInit and EVP_VerifyInit to an extra JNI call. EVP_DigestFinal now destroys the EVP_MD_CTX to avoid needing to make another call JNI call to EVP_MD_CTX_destroy. EVP_MD_CTX_destroy is kept for cases when EVP_DigestFinal is never called. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java In addition to the improved NativeCrypto API to allow better performance for callers, the implementations use of throwExceptionIfNecessary was made conditional based on the status code from various operations, which had a noticeable impact on performance compared to android.security.MessageDigest luni/src/main/native/NativeCrypto.cpp Updated MessageDigest.getInstance default implementation to use new NativeCrypto API. An EVP_MD instance is looked up at class load time for a specific digest type and then used to call NativeCrypto.EVP_DigestInit as needed, avoiding a lookup of EVP_MD for each new digest. The EVP_MD is also for a one-time lookup the digest output size in bytes, to avoid native calls for engineGetDigestLength. Finally, the creation of the EVP_MD_CTX is now lazy, only created when needed, avoiding unnecessarily create/free in reset cases such as engineDigest. See also external/bouncycastles OpenSSLDigest implementation which had similar optimizations. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLMessageDigestJDK.java OpenSSLSignature also used EVP_MD_CTX_create, and its EVP_VerifyInit was changed similar to EVP_DigestInit to internally allocate the EVP_MD_CTX on the call to init. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSignature.java Fix test to work with arbitrary provider order luni/src/test/java/org/apache/harmony/security/tests/java/security/MessageDigest2Test.java Fix CloseGuard warnings luni/src/test/java/tests/security/MessageDigestTest.java Bug: 3392028 Change-Id: Idb266ebc0918ffd5550e0f457784256400cd2ff0/"
,,0.1291,conscrypt,"Add an Byte.toHexString that does the right thing, and use it. Turns out most callers dont actually give a toss about case anyway, since theyre just for debugging output. Bug: 3371169 Change-Id: Ib8dc079be2dcbf6f2415ecb9b71d034ee71f68eb/Most callers of toLowerCase/toUpperCase should pass Locale.US to avoid problems in Turkey. Some callers should be replaced with equalsIgnoreCase instead. The one exception is StreamTokenizer, where the RI uses the default locale, which is arguably the right thing to do. No-one cares because thats legacy API, but Ive added a test anyway. Ive left HttpCookie and GeneralName for my co-conspirators because the appropriate resolutions arent as obvious there... Bug: 3325637 Change-Id: Ia37a1caaa91b11763ae43e61e445adb45c30f793/Retire SecurityManager. This change removes all the code that was calling getSecurityManager, and removes all use of AccessController.doPrivileged. It also changes the implementation of AccessController so it doesnt actually do anything; its only there for source-level compatibility. Bug: 2585285 Change-Id: I1f0295a4f12bce0316d8073011d8593fee116f71/"
,,0.6842,conscrypt,"Elliptic Crypto support for OpenSSLSocketImpl Summary: Enable Elliptic Crypto support for OpenSSL based SSLSocket instances More RI compliant usage of key types, client auth types, and server auth types Steps toward TLS_EMPTY_RENEGOTIATION_INFO_SCSV support, currently test updates Details: Elliptic Curve changes CipherSuite updates for EC Adding KEY_EXCHANGE_EC* and corresponding CipherSuites Updated isAnonymous, getKeyType (now renamed getServerKeyType) to handle new EC cases. Added new getAuthType for use by checkServerTrusted callers. Restructured code to handle two SUITES_BY_CODE_* arrays Remove KEY_EXCHANGE_DH_* definitions which unused because the corresponding CipherSuites were previously disabled. Changed AES CipherSuites definitions to use ""_CBC"" to match other definitions. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java openssl EC NativeCrypto now registers TLS_EC_* cipher suites and has update default list Improved auth type arguments to checkClientTrusted/checkServerTrusted NativeCrypto support for emphemeral EC keys luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/native/NativeCrypto.cpp non-openssl SSL/TLS cleanups cleanup around code trying to cope with DiffieHellman vs DH since either should work. changed client to use new CipherSuite.getAuthType shared with NativeCrypto implementation changed server to use CipherSuite.getKeyType luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Consolidate CertificateRequestType code into CipherSuite so that its shared between java and openssl implementations. This includes the KEY_TYPE_ string constants, TLS_CT_* byte constants and the String keyType(byte) (now renamed getClientKeyType) code that depends on them. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Tests Differentiate between supported list of cipher suites openssl-based SSLSocket and SSLEngine based, since the SSLEngine code does not support EC. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java Added testing for expected default cipher suites. Before we just ensured the values were valid. luni/src/test/java/libcore/javax/net/ssl/SSLSocketFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Updated to handle new EC cipher suites codes. Added test for new getClientKeyType. luni/src/test/java/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java Better use of ""standard names"" particularly to correctly deal with the subtle differences between key types, client auth types, and server auth types. TestKeyManager and TestTrustManager now verify the values they are passed are acceptable. support/src/test/java/libcore/java/security/StandardNames.java support/src/test/java/libcore/javax/net/ssl/TestKeyManager.java support/src/test/java/libcore/javax/net/ssl/TestTrustManager.java Changed to timeout after 30 seconds and to log to reveal both client and server issues. support/src/test/java/libcore/javax/net/ssl/TestSSLSocketPair.java Bug: 3058375 Change-Id: I14d1d0285d591c99cc211324f3595a5be682cab1/"
,,0.0938,conscrypt,"Retire SecurityManager. This change removes all the code that was calling getSecurityManager, and removes all use of AccessController.doPrivileged. It also changes the implementation of AccessController so it doesnt actually do anything; its only there for source-level compatibility. Bug: 2585285 Change-Id: I1f0295a4f12bce0316d8073011d8593fee116f71/"
,,0.0865,conscrypt,"Retire SecurityManager. This change removes all the code that was calling getSecurityManager, and removes all use of AccessController.doPrivileged. It also changes the implementation of AccessController so it doesnt actually do anything; its only there for source-level compatibility. Bug: 2585285 Change-Id: I1f0295a4f12bce0316d8073011d8593fee116f71/"
,,0.6953,conscrypt,"Elliptic Crypto support for OpenSSLSocketImpl Summary: Enable Elliptic Crypto support for OpenSSL based SSLSocket instances More RI compliant usage of key types, client auth types, and server auth types Steps toward TLS_EMPTY_RENEGOTIATION_INFO_SCSV support, currently test updates Details: Elliptic Curve changes CipherSuite updates for EC Adding KEY_EXCHANGE_EC* and corresponding CipherSuites Updated isAnonymous, getKeyType (now renamed getServerKeyType) to handle new EC cases. Added new getAuthType for use by checkServerTrusted callers. Restructured code to handle two SUITES_BY_CODE_* arrays Remove KEY_EXCHANGE_DH_* definitions which unused because the corresponding CipherSuites were previously disabled. Changed AES CipherSuites definitions to use ""_CBC"" to match other definitions. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java openssl EC NativeCrypto now registers TLS_EC_* cipher suites and has update default list Improved auth type arguments to checkClientTrusted/checkServerTrusted NativeCrypto support for emphemeral EC keys luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/native/NativeCrypto.cpp non-openssl SSL/TLS cleanups cleanup around code trying to cope with DiffieHellman vs DH since either should work. changed client to use new CipherSuite.getAuthType shared with NativeCrypto implementation changed server to use CipherSuite.getKeyType luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Consolidate CertificateRequestType code into CipherSuite so that its shared between java and openssl implementations. This includes the KEY_TYPE_ string constants, TLS_CT_* byte constants and the String keyType(byte) (now renamed getClientKeyType) code that depends on them. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Tests Differentiate between supported list of cipher suites openssl-based SSLSocket and SSLEngine based, since the SSLEngine code does not support EC. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java Added testing for expected default cipher suites. Before we just ensured the values were valid. luni/src/test/java/libcore/javax/net/ssl/SSLSocketFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Updated to handle new EC cipher suites codes. Added test for new getClientKeyType. luni/src/test/java/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java Better use of ""standard names"" particularly to correctly deal with the subtle differences between key types, client auth types, and server auth types. TestKeyManager and TestTrustManager now verify the values they are passed are acceptable. support/src/test/java/libcore/java/security/StandardNames.java support/src/test/java/libcore/javax/net/ssl/TestKeyManager.java support/src/test/java/libcore/javax/net/ssl/TestTrustManager.java Changed to timeout after 30 seconds and to log to reveal both client and server issues. support/src/test/java/libcore/javax/net/ssl/TestSSLSocketPair.java Bug: 3058375 Change-Id: I14d1d0285d591c99cc211324f3595a5be682cab1/Toward EC TLS support Summary: javax.net.ssl tests are now working on the RI KeyManager can now handle EC_EC and EC_RSA OpenSSLSocketImpl.startHandshake now works if KeyManager contains EC certificates Details: Add CipherSuite.getKeyType to provide X509KeyManager key type strings, refactored from OpenSSLServerSocketImpl.checkEnabledCipherSuites. getKeyType is now also used in OpenSSLSocketImpl.startHandshake to avoid calling setCertificate for unnecessary key types. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java New CipherSuiteTest to cover new getKeyType as well as existing functionality luni/src/test/java/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java Add support to KeyManager implementation for key types of the form EC_EC and EC_RSA. The first part implies the KeyPair algorithm (EC in these new key types) with a potentially different signature algorithm (EC vs RSA in these) luni/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java Update NativeCrypto.keyType to support EC_EC and EC_RSA in addition to EC which was added earlier. Change from array of KEY_TYPES to named KEY_TYPE_* constants. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java Overhauled KeyManagerFactoryTest to cover EC, EC_EC, EC_RSA cases luni/src/test/java/libcore/javax/net/ssl/KeyManagerFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Changed TestKeyStore.createKeyStore from always using BKS to now use JKS on the RI between BC EC Keys and RI X509 certificates. Because JKS requires a password, we now default ""password"" on the RI. support/src/test/java/libcore/java/security/TestKeyStore.java luni/src/test/java/libcore/javax/net/ssl/SSLContextTest.java support/src/test/java/libcore/java/security/StandardNames.java TestKeyStore.create now accepts key types like EC_RSA. Changed TestKeyStore.createKeys to allow a PrivateKeyEntry to be specified for signing to enable creation of EC_RSA test certificate. Added getRootCertificate/rootCertificate to allow lookup of PrivateKeyEntry for signing. Changed TestKeyStore.getPrivateKey to take explicit signature algorithm to retrieve EC_EC vs EC_RSA entries. support/src/test/java/libcore/java/security/TestKeyStore.java luni/src/test/java/libcore/java/security/KeyStoreTest.java luni/src/test/java/libcore/javax/net/ssl/KeyManagerFactoryTest.java luni/src/test/java/libcore/java/security/cert/PKIXParametersTest.java luni/src/test/java/libcore/javax/net/ssl/TrustManagerFactoryTest.java luni/src/test/java/org/apache/harmony/xnet/provider/jsse/NativeCryptoTest.java support/src/test/java/libcore/java/security/StandardNames.java Added support for EC cipher suites on the RI. Also test with and without new TLS_EMPTY_RENEGOTIATION_INFO_SCSV cipher suite which is used to specify the new TLS secure renegotiation. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java support/src/test/java/libcore/java/security/StandardNames.java New TestKeyManager and additional logging in TestTrustManager. Logging in both is disabled by default using DevNullPrintStream. support/src/test/java/libcore/javax/net/ssl/TestKeyManager.java support/src/test/java/libcore/javax/net/ssl/TestTrustManager.java support/src/test/java/libcore/java/io/DevNullPrintStream.java Bug: 3058375 Change-Id: Ia5e2a00a025858e10d1076b900886994b481e05a/"
,,0.2835,conscrypt,"Remember intermediate CAs in TrustMangerImpls IndexedPKIXParameters Bug: 3404902 Change-Id: I4a3c35fd2981933c255e5d3a620675b9575083d4/am 8a720cce: TrustManager should include PrivateKeyEntry CAs, OpenSSLSocketImpl close fix, and debugging improvements * commit 8a720cceee7ce319d647738dfeda3f302879f370: TrustManager should include PrivateKeyEntry CAs, OpenSSLSocketImpl close fix, and debugging improvements/TrustManager should include PrivateKeyEntry CAs, OpenSSLSocketImpl close fix, and debugging improvements Revert to older behavior of creating TrustAnchors from both PrivateKeyEntry and TrustedCertificateEntry values from the KeyStore. Added tests to better ensure this slighlt different behavior from PKIXParameters. Also create the acceptedIssuers proactively since the real memory cost is the X509Certificates which are already found in the params. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/TrustManagerImpl.java luni/src/test/java/libcore/javax/net/ssl/TrustManagerFactoryTest.java luni/src/test/java/libcore/java/security/cert/PKIXParametersTest.java Dont just free native state on issue with startHandshake, close the SSLSocket. While the former addressed a CloseGuard issue, the latter make sure that checkOpen throws SocketExceptions and we dont leak a NullPointerException from NativeCrypto. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java Debugging improvements including minor refinements to recently added NativeCrypto logging, more verbose TestKeyStore.dump output, and a new TestTrustManager proxy class for logging X509TrustManager behavior. luni/src/main/native/NativeCrypto.cpp support/src/test/java/libcore/java/security/TestKeyStore.java support/src/test/java/libcore/javax/net/ssl/TestTrustManager.java Change-Id: I317e1ca34d8e20c77e5cb9c5a5a58cb4ae98d829/"
,,0.6953,conscrypt,"Elliptic Crypto support for OpenSSLSocketImpl Summary: Enable Elliptic Crypto support for OpenSSL based SSLSocket instances More RI compliant usage of key types, client auth types, and server auth types Steps toward TLS_EMPTY_RENEGOTIATION_INFO_SCSV support, currently test updates Details: Elliptic Curve changes CipherSuite updates for EC Adding KEY_EXCHANGE_EC* and corresponding CipherSuites Updated isAnonymous, getKeyType (now renamed getServerKeyType) to handle new EC cases. Added new getAuthType for use by checkServerTrusted callers. Restructured code to handle two SUITES_BY_CODE_* arrays Remove KEY_EXCHANGE_DH_* definitions which unused because the corresponding CipherSuites were previously disabled. Changed AES CipherSuites definitions to use ""_CBC"" to match other definitions. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java openssl EC NativeCrypto now registers TLS_EC_* cipher suites and has update default list Improved auth type arguments to checkClientTrusted/checkServerTrusted NativeCrypto support for emphemeral EC keys luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/native/NativeCrypto.cpp non-openssl SSL/TLS cleanups cleanup around code trying to cope with DiffieHellman vs DH since either should work. changed client to use new CipherSuite.getAuthType shared with NativeCrypto implementation changed server to use CipherSuite.getKeyType luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/HandshakeProtocol.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Consolidate CertificateRequestType code into CipherSuite so that its shared between java and openssl implementations. This includes the KEY_TYPE_ string constants, TLS_CT_* byte constants and the String keyType(byte) (now renamed getClientKeyType) code that depends on them. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CertificateRequest.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ClientHandshakeImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/ServerHandshakeImpl.java Tests Differentiate between supported list of cipher suites openssl-based SSLSocket and SSLEngine based, since the SSLEngine code does not support EC. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java Added testing for expected default cipher suites. Before we just ensured the values were valid. luni/src/test/java/libcore/javax/net/ssl/SSLSocketFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Updated to handle new EC cipher suites codes. Added test for new getClientKeyType. luni/src/test/java/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java Better use of ""standard names"" particularly to correctly deal with the subtle differences between key types, client auth types, and server auth types. TestKeyManager and TestTrustManager now verify the values they are passed are acceptable. support/src/test/java/libcore/java/security/StandardNames.java support/src/test/java/libcore/javax/net/ssl/TestKeyManager.java support/src/test/java/libcore/javax/net/ssl/TestTrustManager.java Changed to timeout after 30 seconds and to log to reveal both client and server issues. support/src/test/java/libcore/javax/net/ssl/TestSSLSocketPair.java Bug: 3058375 Change-Id: I14d1d0285d591c99cc211324f3595a5be682cab1/Toward EC TLS support Summary: javax.net.ssl tests are now working on the RI KeyManager can now handle EC_EC and EC_RSA OpenSSLSocketImpl.startHandshake now works if KeyManager contains EC certificates Details: Add CipherSuite.getKeyType to provide X509KeyManager key type strings, refactored from OpenSSLServerSocketImpl.checkEnabledCipherSuites. getKeyType is now also used in OpenSSLSocketImpl.startHandshake to avoid calling setCertificate for unnecessary key types. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/CipherSuite.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLServerSocketImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/OpenSSLSocketImpl.java New CipherSuiteTest to cover new getKeyType as well as existing functionality luni/src/test/java/org/apache/harmony/xnet/provider/jsse/CipherSuiteTest.java Add support to KeyManager implementation for key types of the form EC_EC and EC_RSA. The first part implies the KeyPair algorithm (EC in these new key types) with a potentially different signature algorithm (EC vs RSA in these) luni/src/main/java/org/apache/harmony/xnet/provider/jsse/KeyManagerImpl.java Update NativeCrypto.keyType to support EC_EC and EC_RSA in addition to EC which was added earlier. Change from array of KEY_TYPES to named KEY_TYPE_* constants. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/NativeCrypto.java Overhauled KeyManagerFactoryTest to cover EC, EC_EC, EC_RSA cases luni/src/test/java/libcore/javax/net/ssl/KeyManagerFactoryTest.java support/src/test/java/libcore/java/security/StandardNames.java Changed TestKeyStore.createKeyStore from always using BKS to now use JKS on the RI between BC EC Keys and RI X509 certificates. Because JKS requires a password, we now default ""password"" on the RI. support/src/test/java/libcore/java/security/TestKeyStore.java luni/src/test/java/libcore/javax/net/ssl/SSLContextTest.java support/src/test/java/libcore/java/security/StandardNames.java TestKeyStore.create now accepts key types like EC_RSA. Changed TestKeyStore.createKeys to allow a PrivateKeyEntry to be specified for signing to enable creation of EC_RSA test certificate. Added getRootCertificate/rootCertificate to allow lookup of PrivateKeyEntry for signing. Changed TestKeyStore.getPrivateKey to take explicit signature algorithm to retrieve EC_EC vs EC_RSA entries. support/src/test/java/libcore/java/security/TestKeyStore.java luni/src/test/java/libcore/java/security/KeyStoreTest.java luni/src/test/java/libcore/javax/net/ssl/KeyManagerFactoryTest.java luni/src/test/java/libcore/java/security/cert/PKIXParametersTest.java luni/src/test/java/libcore/javax/net/ssl/TrustManagerFactoryTest.java luni/src/test/java/org/apache/harmony/xnet/provider/jsse/NativeCryptoTest.java support/src/test/java/libcore/java/security/StandardNames.java Added support for EC cipher suites on the RI. Also test with and without new TLS_EMPTY_RENEGOTIATION_INFO_SCSV cipher suite which is used to specify the new TLS secure renegotiation. luni/src/test/java/libcore/javax/net/ssl/SSLEngineTest.java luni/src/test/java/libcore/javax/net/ssl/SSLSocketTest.java support/src/test/java/libcore/java/security/StandardNames.java New TestKeyManager and additional logging in TestTrustManager. Logging in both is disabled by default using DevNullPrintStream. support/src/test/java/libcore/javax/net/ssl/TestKeyManager.java support/src/test/java/libcore/javax/net/ssl/TestTrustManager.java support/src/test/java/libcore/java/io/DevNullPrintStream.java Bug: 3058375 Change-Id: Ia5e2a00a025858e10d1076b900886994b481e05a/"
,,0.0792,conscrypt,"Retire SecurityManager. This change removes all the code that was calling getSecurityManager, and removes all use of AccessController.doPrivileged. It also changes the implementation of AccessController so it doesnt actually do anything; its only there for source-level compatibility. Bug: 2585285 Change-Id: I1f0295a4f12bce0316d8073011d8593fee116f71/"
,,0.0902,conscrypt,"Retire SecurityManager. This change removes all the code that was calling getSecurityManager, and removes all use of AccessController.doPrivileged. It also changes the implementation of AccessController so it doesnt actually do anything; its only there for source-level compatibility. Bug: 2585285 Change-Id: I1f0295a4f12bce0316d8073011d8593fee116f71/"
,,0.2885,conscrypt,"libcore key chain support Allow access to default IndexedPKIXParameters, similar to access to default TrustManager. Needed to allow framework to add/remove trusted CAs at runtime. luni/src/main/java/org/apache/harmony/xnet/provider/jsse/SSLParametersImpl.java luni/src/main/java/org/apache/harmony/xnet/provider/jsse/TrustManagerImpl.java Add test support for looking up a cert by an issuer for use in key chain tests. support/src/test/java/libcore/java/security/TestKeyStore.java Add test support SSLSocketFactory that sets desired client auth on each created socket. For use with MockWebServer for key chain testing. support/src/test/java/libcore/javax/net/ssl/TestSSLContext.java Change-Id: Iecdbd40c67f1673bda25a52b4e229156c805d564/"
,,0.078,conscrypt,Add a way to clear stored trusted certificates. Bug: 6009802 Update the TrustManagerImpl Api to allow clearing stored certificates. This is needed so we can remove CAs when credential storage is updated. Change-Id: I024f7e8b12b60ea0ee35d7f94280e0e3d6db039f/
,,0.2192,conscrypt,"CertificateRequest should handle case where certificate is requested but none is available. Android SSL client was not handling a CertificateRequest where there was no cert to send. It had a problem because it was assuming that if the CertificateMessage response is not null, it means there is a cert included, which is not true (if it has no cert to send an empty CertificateMessage is sent to the server). So I updated the CertificateVerify creation check to also check whether the CertificateMessage contained any certs (ClientHandshakeImpl.java). In testing I found that the same error was in the server code so I made the same change there (ServerHandshakeImpl.java). I added two test cases to SSLEngineTest one to directly test the scenario (test_SSLEngine_clientAuthWantedNoClientCert) and one to just double-check that the server would not allow the connection if setNeedClientAuth (test_SSLEngine_clientAuthNeededNoClientCert). Bug: Change-Id: Ideb57d6ccbcdd54ca24dc3063e60aba2653c8414/"
,,0.1083,conscrypt,"Add serialization to OpenSSL-based keys Any OpenSSL keys that arent ENGINE-based are serializable, so add the code to be able to keep the Serializable contract. Bug: Change-Id: I6d5fd9a1c6817d97d7890e4cccd8c95253e95279/"
,,0.1827,conscrypt,"am 607296b4: am 5c9add3e: Add logging to detect cert pin failures caused by MITM proxies. * commit 607296b452baeedea339bbb36dcc7dcbe19c0122: Add logging to detect cert pin failures caused by MITM proxies./Add logging to detect cert pin failures caused by MITM proxies. Change-Id: Ie9554aaa824506a75534d888432ed8a91e14e386/Add chain building to TrustedCertificateStore Since TrustedCertificateStore has information needed, use it to build certificate chains. OpenSSL uses Authority Key Identifier in extensions to determine if the certificate is the same as itself. There are problems with key rotation when a different certificate serial signs a key with the same subject identifier. It appears to be the same with the old code, but it may generate an invalid chain. (cherry-picked from 3fb088d79e446063ef743362a030e1cfb80b2178) Change-Id: I8149bed1a0ae537f75da5dc3f3d7e3ccab353f91/Add chain building to TrustedCertificateStore Since TrustedCertificateStore has information needed, use it to build certificate chains. OpenSSL uses Authority Key Identifier in extensions to determine if the certificate is the same as itself. There are problems with key rotation when a different certificate serial signs a key with the same subject identifier. It appears to be the same with the old code, but it may generate an invalid chain. Change-Id: Ieaeacf535029c4d485944a8803a0ea8cff5b7b94/"
,,0.1026,conscrypt,"Add serialization to OpenSSL-based keys Any OpenSSL keys that arent ENGINE-based are serializable, so add the code to be able to keep the Serializable contract. Bug: Change-Id: I6d5fd9a1c6817d97d7890e4cccd8c95253e95279/"
,,0.2083,conscrypt,Add cached trust anchors to the chain prior to checking pinning. This avoids an issue where intermediate certs are assumed cached rather than provided by the server. Bug: 7195828 Change-Id: I44e033ddc40a7a259bac888bf2b873d9bb81becc/Restructure logging to ease the transition to dropbox. Bug: 7190096 Change-Id: Ib16bcd47712890fd627027ebacacc511870b31b0/am 607296b4: am 5c9add3e: Add logging to detect cert pin failures caused by MITM proxies. * commit 607296b452baeedea339bbb36dcc7dcbe19c0122: Add logging to detect cert pin failures caused by MITM proxies./Add logging to detect cert pin failures caused by MITM proxies. Change-Id: Ie9554aaa824506a75534d888432ed8a91e14e386/
,,0.1026,conscrypt,"Add serialization to OpenSSL-based keys Any OpenSSL keys that arent ENGINE-based are serializable, so add the code to be able to keep the Serializable contract. Bug: Change-Id: I6d5fd9a1c6817d97d7890e4cccd8c95253e95279/"
,,0.0989,conscrypt,"Add serialization to OpenSSL-based keys Any OpenSSL keys that arent ENGINE-based are serializable, so add the code to be able to keep the Serializable contract. Bug: Change-Id: I6d5fd9a1c6817d97d7890e4cccd8c95253e95279/"
,,0.09699999999999999,conscrypt,"Add serialization to OpenSSL-based keys Any OpenSSL keys that arent ENGINE-based are serializable, so add the code to be able to keep the Serializable contract. Bug: Change-Id: I6d5fd9a1c6817d97d7890e4cccd8c95253e95279/"
,,0.0645,conscrypt,Test to verify BC Signature algorithms by OID Bug: 7453821 Change-Id: I69408d0bb4063e34441ed1d7632fd1ccac39965b/
,,0.0815,conscrypt,"am e29d26ec: Merge ""NativeCrypto: fix EOF at beginning of stream"" into jb-mr2-dev * commit e29d26ec4c4abd391e8debc0c4846544c9f714b0: NativeCrypto: fix EOF at beginning of stream/NativeCrypto: fix EOF at beginning of stream Any InputStream where the first character was an EOF (-1) would cause OpenSSLBIOInputStream to hang forever. This caused bad X.509 certificates to hang forever in the call to CertificateFactory#generateCertificate(InputStream) Bug: 8632056 Change-Id: Ia88f33aa356c3a6a23be872c7eef844873d73d5c/"
,,0.262,conscrypt,am db527c8e: am 64a1e90e: Fix breakage in CipherSuiteTest due to TLSv1.2 cipher suites. * commit db527c8e2e45dbb88585ecfd0539b348ba2a2d60: Fix breakage in CipherSuiteTest due to TLSv1.2 cipher suites./am 64a1e90e: Fix breakage in CipherSuiteTest due to TLSv1.2 cipher suites. * commit 64a1e90e8337da9bb36370e1b2b4e654d4ddc3fb: Fix breakage in CipherSuiteTest due to TLSv1.2 cipher suites./Fix breakage in CipherSuiteTest due to TLSv1.2 cipher suites. The test was accidentally broken when support for TLSv1.2 cipher suites was added. The CipherSuite class is only used by the SSLEngine implementation which does not support TLSv1.2 cipher suites (or TLSv1.2 for that matter). Bug: 11220570 Change-Id: I8f5571ea76279161d25a6525a71cf49bfe7e6079/Switch to new StandardNames assert about cipher suites. Bug: 11220570 Change-Id: I8b43196b24f02e10010223aa6738a9ce0df24333/
,,0.1243,conscrypt,SSLEngine: verify DHE signature The DHE signature wasnt being verified against the servers certificate. Refactor some code to allow the same code to be used for both the server and client to create and check the DHE parameters signature. Bug: 11631299 Change-Id: I73456c18a57a0f31d856d64d0bfdf4e029db6df9/
,,0.1243,conscrypt,SSLEngine: verify DHE signature The DHE signature wasnt being verified against the servers certificate. Refactor some code to allow the same code to be used for both the server and client to create and check the DHE parameters signature. Bug: 11631299 Change-Id: I73456c18a57a0f31d856d64d0bfdf4e029db6df9/
,,0.0961,conscrypt,SSLEngine: verify DHE signature The DHE signature wasnt being verified against the servers certificate. Refactor some code to allow the same code to be used for both the server and client to create and check the DHE parameters signature. Bug: 11631299 Change-Id: I73456c18a57a0f31d856d64d0bfdf4e029db6df9/
,,0.2647,conscrypt,"Define TLS/SSL default cipher suites list in one place. The list used to be defined in two places: NativeCrypto (used by SSLSocket/SSLServerSocket) and CipherSuite (used by SSLEngine). This CL makes the CipherSuite class generate its list from the NativeCrypto one, to avoid having to keep the two lists in sync manually. Bug: 11220570 Change-Id: I218986fe2bd9e0cf81a2c61b30bc78633a139a79/Deprioritize HMAC-MD5 in default TLS/SSL cipher suites. Although HMAC-MD5 is not yet broken, the foundations are now much more shaky that those of HMAC-SHA. See This CL also adds a comment about the key rules governing the preference order of cipher suites used by default. Bug: 11220570 Change-Id: I2a2fe4d427650081637efc14fd7c427a33cbea7e/Prefer Forward Secrecy TLS/SSL cipher suites by default. This modifies the list of TLS/SSL cipher suites used by default to prefer those offering Forward Secrecy (FS) ECDHE and DHE. Bug: 11220570 Change-Id: I20f635d11e937d64de4f4e2fea34e1c5ea7a67ac/Deprioritize RC4-based TLS/SSL cipher suites. Now that BEAST and Lucky13 mitigations are enabled, it is prudent to prefer AES CBC cipher suites over RC4 ones (see Bug: 11220570 Change-Id: I52b9724700fd8eaeebbadcfa518a96823a1410b8/SSLEngine: record splitting for BEAST mitigation Split the initial encrypted packet sent into 1 byte and n-1 bytes to mitigate BEAST attacks. Bug: 11463939 Change-Id: Id81920fb2ede4172ae3565303d215b776091afc8/Adjust the default list of ciphers suites of SSLEngine. SSLEngine should use the same cipher suites by default as SSLSocket whose list was recently cleaned up. One complication is that the current SSLEngine implementation does not support EC. This CL removes cipher suites with bulk encryption cipher key length shorter than 80 bits and adds 256-bit versions of AES cipher suites. Bug: 11220570 Change-Id: I81fb34d8067a8565c0ae11883bb5c1ee65ed6875/"
,,0.231,conscrypt,"am 16a5cd2f: am f7f723e8: Merge ""Stop depending on CipherSuite in OpenSSL-backed sockets."" * commit 16a5cd2f17b504aced123b98c75e0ebb1d33815e: Stop depending on CipherSuite in OpenSSL-backed sockets./am f7f723e8: Merge ""Stop depending on CipherSuite in OpenSSL-backed sockets."" * commit f7f723e868397a1801aa769abd78eb7d36b1662b: Stop depending on CipherSuite in OpenSSL-backed sockets./Merge ""Stop depending on CipherSuite in OpenSSL-backed sockets.""/Stop depending on CipherSuite in OpenSSL-backed sockets. This is in preparation for removing Harmony-backed TLS/SSL implementations. Change-Id: Ic108e16d086fb99b69f0a4e4faeb816dc50a7643/"
,,0.1366,conscrypt,SSLEngine: use 1/n-1 record splitting for servers Bug: 11463939 Change-Id: I90aba24f06a53b8d4c9192dbb60a2e8e261dac0b/SSLEngine: record splitting for BEAST mitigation Split the initial encrypted packet sent into 1 byte and n-1 bytes to mitigate BEAST attacks. Bug: 11463939 Change-Id: Id81920fb2ede4172ae3565303d215b776091afc8/
,,0.085,conscrypt,Support user-installed CA certs for cert pinning. Additionally expose new isUserAddedCertificate() so clients can set policy for user-installed CA certs. Bug: 11257762 Change-Id: If45cd452ab76f393660b34594dcae464af0c0696/
,,0.0715,conscrypt,Lazily read CertPin data This delays reading the CertPin data until it is needed. This also avoids touching the disk until necessary since CertPinManager may be loaded by any number of actions such as instantiating an SSLSocketFactory as in this chain of dependencies: SSLSocketFactory HttpsURLConnection OpenSSLSocketFactoryImpl SSLParametersImpl TrustManagerImpl CertPingManager Bug: Change-Id: I11e1b44c7a7e001b33bc591efefe35653829a472/
,,0.102,conscrypt,"Add OpenSSLEngineImpl Add support for SSLEngine via OpenSSL APIs. Currently this supports just the basic SSLEngine functionality. It can be improved in efficiency and performance, but it appears not to leak anything and be correct according to our test suites. Change-Id: Iea2dc3922e7c30e26daca38361877bd2f88ae668/"
,,0.2531,conscrypt,"Add OpenSSLEngineImpl Add support for SSLEngine via OpenSSL APIs. Currently this supports just the basic SSLEngine functionality. It can be improved in efficiency and performance, but it appears not to leak anything and be correct according to our test suites. Change-Id: Iea2dc3922e7c30e26daca38361877bd2f88ae668/Correctly handle empty arrays in SSLContext.init. The contract of SSLContext.init is that empty arrays of KeyManager/TrustManager in its parameters are handled differently from null arrays. This CL adjusts the behavaior to match the contract. Namely, empty arrays mean that SSLContext is being initialized without any KeyManagers/TrustManagers rather than with default ones. Bug: 13563675 Change-Id: I52adc5e7143d4f050be0b22b3b464c10bb97d102/Use the new endpointVerificationAlgorithm API Use the new X509ExtendedTrustManager and use the new getEndpointVerificationAlgorithm to check the hostname during the handshake. Bug: 13103812 Change-Id: Id0a74d4ef21a7d7c90357a111f99b09971e535d0/Leave SSLParametersImpl.getDefaultX509TrustManager public. I renamed this method from getDefaultTrustManager to getDefaultX509TrustManager and erroneously made it private in 8d63ff1384e46407a7618df2b79b2b455795c396. I missed the fact that its being used from frameworks android.net. This CL reverts this method to being public again. Bug: 13563574 Change-Id: I601c651d631f5a2e4a04d21941186553988e5286/Support TLS/SSL without X509TrustManager or X509KeyManager. This makes TLS/SSL primitives operate as expected when no X509TrustManager or X509KeyManager is provided. Instead of blowing up with KeyManagementException or NullPointerException (or similar) when X509TrustManager or X509KeyManager is not provided, this CL makes SSLContext.init accept such setup, and makes SSLSocket and SSLEngine reject certificate chains, select no private keys/aliases, and accept no certificate issuers. Bug: 13563574 Change-Id: I8de58377a09025258357dd4da9f6cb1b6f2dab80/"
,,0.1934,conscrypt,"Support TLS/SSL without X509TrustManager or X509KeyManager. This makes TLS/SSL primitives operate as expected when no X509TrustManager or X509KeyManager is provided. Instead of blowing up with KeyManagementException or NullPointerException (or similar) when X509TrustManager or X509KeyManager is not provided, this CL makes SSLContext.init accept such setup, and makes SSLSocket and SSLEngine reject certificate chains, select no private keys/aliases, and accept no certificate issuers. Bug: 13563574 Change-Id: I8de58377a09025258357dd4da9f6cb1b6f2dab80/"
,,0.18600000000000003,conscrypt,"SSLParametersImpl is the source of enabled cipher suites and protocols. An instance of SSLParametersImpl is associated with SSLContext and is then cloned into any SSLSocketFactory, SSLServerSocketFactory, SSLSocket, SSLServerSocket, and SSLEngine. This CL ensures that all these primitives obtain their list of enabled cipher suites and protocols from their instance of SSLParametersImpl. Bug: 15073623 Change-Id: I40bf32e8654b299518ec0e77c3218a0790d9c4fd/"
,,0.1022,conscrypt,Unbundle: hacks to let Conscrypt compile standalone This is the first pass at getting Conscrypt to compile standalone. It works fine in apps currently. There are a few TODOs to fix. Change-Id: I9b43ba12c55e04c8897ccacf38979ca671a55a26/
,,0.2051,conscrypt,"am 51983403: am 5334b797: am f6aeba08: Merge ""X509Certificate: add some context to thrown exceptions"" * commit 51983403a6435f11ed7e2e4ca7eb54d1443a0b56: X509Certificate: add some context to thrown exceptions/am 5334b797: am f6aeba08: Merge ""X509Certificate: add some context to thrown exceptions"" * commit 5334b797fb5bae988e91f7b1b85e8c2fc5c47e19: X509Certificate: add some context to thrown exceptions/am f6aeba08: Merge ""X509Certificate: add some context to thrown exceptions"" * commit f6aeba088782a69ded003e10f93fd335eb27f18d: X509Certificate: add some context to thrown exceptions/Merge ""X509Certificate: add some context to thrown exceptions""/X509Certificate: add some context to thrown exceptions Bug: 14648280 Change-Id: I7bbf76e0d383d34fc5e5a49a8d45384e47f43f3a/DO NOT MERGE OpenSSLX509Certificate: only catch BadPaddingException We only need to catch BadPaddingException right now. Let the other non-RuntimeException exceptions pass. (cherry picked from commit 7c3263f16bae0f1b2125de2c3c1c683303e768ce) Bug: 13746671 Change-Id: I5b6878250d428b1ee953092967b7418003ee9216/"
,,0.1022,conscrypt,Unbundle: hacks to let Conscrypt compile standalone This is the first pass at getting Conscrypt to compile standalone. It works fine in apps currently. There are a few TODOs to fix. Change-Id: I9b43ba12c55e04c8897ccacf38979ca671a55a26/
,,0.1081,conscrypt,Unbundle: hacks to let Conscrypt compile standalone This is the first pass at getting Conscrypt to compile standalone. It works fine in apps currently. There are a few TODOs to fix. Change-Id: I9b43ba12c55e04c8897ccacf38979ca671a55a26/
,,0.1081,conscrypt,Unbundle: hacks to let Conscrypt compile standalone This is the first pass at getting Conscrypt to compile standalone. It works fine in apps currently. There are a few TODOs to fix. Change-Id: I9b43ba12c55e04c8897ccacf38979ca671a55a26/
,,0.18600000000000003,conscrypt,"SSLParametersImpl is the source of enabled cipher suites and protocols. An instance of SSLParametersImpl is associated with SSLContext and is then cloned into any SSLSocketFactory, SSLServerSocketFactory, SSLSocket, SSLServerSocket, and SSLEngine. This CL ensures that all these primitives obtain their list of enabled cipher suites and protocols from their instance of SSLParametersImpl. Bug: 15073623 Change-Id: I40bf32e8654b299518ec0e77c3218a0790d9c4fd/"
,,0.1978,conscrypt,"SSLParametersImpl is the source of enabled cipher suites and protocols. An instance of SSLParametersImpl is associated with SSLContext and is then cloned into any SSLSocketFactory, SSLServerSocketFactory, SSLSocket, SSLServerSocket, and SSLEngine. This CL ensures that all these primitives obtain their list of enabled cipher suites and protocols from their instance of SSLParametersImpl. Bug: 15073623 Change-Id: I40bf32e8654b299518ec0e77c3218a0790d9c4fd/"
,,0.1062,conscrypt,Unbundle: hacks to let Conscrypt compile standalone This is the first pass at getting Conscrypt to compile standalone. It works fine in apps currently. There are a few TODOs to fix. Change-Id: I9b43ba12c55e04c8897ccacf38979ca671a55a26/
,,0.1161,conscrypt,Unbundle: hacks to let Conscrypt compile standalone This is the first pass at getting Conscrypt to compile standalone. It works fine in apps currently. There are a few TODOs to fix. Change-Id: I9b43ba12c55e04c8897ccacf38979ca671a55a26/
,,0.1616,conscrypt,"Remove SSLv3 from default protocols list for TLS SSLv3 has some systemic problems demonstrated by the POODLE attack. Disable it by default when ""TLS"" is requested since the documentation in Java Standard Names allows us to not support SSL when TLS is requested. Bug: 17136008 Change-Id: Icad1639c7e33b6e495f452a5289b0d20b819d679/Add way to get preferred SSLContext config This change is in preparation to re-arrange the way OpenSSLContextImpl gets its configuration. Since frameworks/base directly creates an OpenSSLContextImpl instance, give it a stable way of retrieving the ""preferred"" version of this. Bug: 17136008 Change-Id: I8817b8f7816f9d6f0f9c30288904635e06b0c6a5/"
,,0.1918,conscrypt,"Declare which keys Conscrypt accepts. This declares constraints on which keys Cipher, KeyAgreement, Mac, and Signature instances provided by Conscrypt accept. Constraints are expressed using JCAs SupportedKeyClasses and SupportedKeyFormats attributes. Declaring these contraints will make JCA use other providers for keys not supported by Conscrypt. This in turn removes the need of users of JCA to explicitly specify which provider to use. This looks messy mostly because of how the JCAs constraining mechanism works. Some of the weirdness and messiness also comes from the inconsistencies in how Conscrypt handles different key types in different primitives. Once these inconsistencies are fixed, this change will become smaller and a bit nicer. See Bug: 19284418 Change-Id: I7e862a620d7279e4eaf6e42acd9072e7be665024/Remove Conscrypt support for DSA BoringSSL removes support for DSA, so theres no point in maintaining this now. There have been virtually zero SSL certificates issued using DSA for many years as well. Change-Id: Id940643b85ba39b03038aabc6da9ec0285db66c4/Remove SSLv3 from default protocols list for TLS SSLv3 has some systemic problems demonstrated by the POODLE attack. Disable it by default when ""TLS"" is requested since the documentation in Java Standard Names allows us to not support SSL when TLS is requested. Bug: 17136008 Change-Id: Icad1639c7e33b6e495f452a5289b0d20b819d679/"
,,0.0763,conscrypt,external/conscrypt: remove DH key support. This change should be moot because ce175480 already removed support for DH keys. Bug: 20521989 Change-Id: Ief27adf451accd86d59001cc6752461bc763b3bb/
,,0.1342,conscrypt,"OpenSSLEngine: do not try to load ENGINE for BoringSSL Since BoringSSL doesnt use ENGINE instances, we should not fail when the native code returns the equivalent of a NULL instance. This change propagates the knowledge of whether were using BoringSSL or OpenSSL up to the Java layer. Change-Id: Ib8c2224a909564ae6f0c6d5984020c44517f6c29/"
,,0.0815,conscrypt,"external/conscrypt: remove DHKey. BoringSSL has DH, but its not wired up to EVP any longer. It would be possible to get DHKey working directly using DH because it doesnt use anything non-standard, but its probably not worth worrying about. Bug: 20518803 Bug: 20522271 Change-Id: I7167ba5ae96b0ba914c5759b6293236e4a3302da/"
,,0.2077,conscrypt,"OpenSSLCipher: add AEAD cipher This allows us to provide an implementation of AES-GCM using the new EVP_AEAD interface in BoringSSL. It simply buffers up the input until doFinal(...) is called which makes it much safer than any streaming interfaces, because the caller cant use the plaintext until its authenticated by the GHASH (or whatever other AEAD you happen to use). Bug: 20636336 Change-Id: I6e4b063a8137a16102b1f6ac15687a38ddfe1691/OpenSSLCipher: refactor in preparation for AEAD BoringSSL uses a different interface for AEAD that is much simplier called EVP_AEAD. Separate out the EVP_CIPHER usage so that we can have another subclass with the EVP_AEAD usage. Bug: 20636336 Change-Id: I661d92bd449f2fcc3c4a6e511155490917ecef0c/external/conscrypt: remove DHKey. BoringSSL has DH, but its not wired up to EVP any longer. It would be possible to get DHKey working directly using DH because it doesnt use anything non-standard, but its probably not worth worrying about. Bug: 20518803 Bug: 20522271 Change-Id: I7167ba5ae96b0ba914c5759b6293236e4a3302da/external/conscrypt: align registered modes with BoringSSL. Some of the more obscure modes BoringSSL doesnt support anymore, so just let Bouncycastle implement them. Bug: 20451412 Change-Id: I966e08493b1df741ffc114d3189b301456011a4e/"
,,0.2332,conscrypt,"Compare keys using encoded form as a fallback PublicKey.equals is not required to return true on the same public key but from different providers, this causes incorrect lookup failures when the key comes from keystore. Change-Id: Iaedaa91c64eeede1d5021430c015aac746afbc97/Prevent duplicate certificates in TrustedCertificateIndex With the separate caching of intermediate certificates in TrustManagerImpl a given intermediate may be passed into .index multiple times. Avoid adding the certificate to the list each time. (cherry-picked from commit d080e064abba665e2dde2a8c113f837ba4d9a85e) Bug: 26232830 Change-Id: I6bed2c65d9e42e052b9b1b129200a997e7dca745/Prevent duplicate certificates in TrustedCertificateIndex With the separate caching of intermediate certificates in TrustManagerImpl a given intermediate may be passed into .index multiple times. Avoid adding the certificate to the list each time. Bug: 26232830 Change-Id: I6bed2c65d9e42e052b9b1b129200a997e7dca745/"
,,0.1622,conscrypt,"Basic implementation of RSASSA-PSS Signature. This makes Conscrypt provide RSASSA-PSS Signature implementations. These implementations currently do not support changing their parameters (e.g., via Signature.setParameter(PSSParameterSpec)) and returning their current parameters (e.g., via Signature.getParameters()). This will be added in a follow-up change. Bug: 25794302 Change-Id: I1488e0e9592f92a9e15365131c76ce2902ad4607/"
,,0.2095,conscrypt,"X509 certificates: exception for no Signature provider found am: 3892ccded9 am: 5d82718353 * commit 5d82718353545fd2895881b2160714dc9144f9ae: X509 certificates: exception for no Signature provider found/X509 certificates: exception for no Signature provider found am: 3892ccded9 * commit 3892ccded916112f3714092ae5976fcfd72d2099: X509 certificates: exception for no Signature provider found/X509 certificates: exception for no Signature provider found If the X.509 certificates signature algorithm OID is not satisfied by any provider registered, a NoSuchAlgorithmException should be thrown. The previous behavior was an unchecked NullPointerException was thrown during the attempt to set up the (actually null) signature instance. Bug: 26954162 Change-Id: Iac3e27c823580738a54d75a45d39411456934dd5/Make OpenSSLX509Certificate.hashCode match the RI Use super.hashCode to make sure that hashCode matches the RI. Since the underlying certificate (and therefore the hashcode) is immutable the value is cached after the first call to avoid needlessly recomputing the hash. Bug:26386620 Change-Id: Ic480b48e57144ac730a33dcc313cdff57fe71157/"
,,0.0756,conscrypt,am f26d5287: am b02e9dea: Fix parsing of long format DER octet string. am: 14035dcc0c * commit 14035dcc0c71a075c5ecf32a0e62295b890908f0: Fix parsing of long format DER octet string./
,,0.2387,conscrypt,"Merge ""Fix OID for SHA224WithRSA"" am: 8ed5338ff3 am: 024b696ea0 * commit 024b696ea0e44f1cb3133945de075d012be92ab3: Fix OID for SHA224WithRSA/Merge ""Fix OID for SHA224WithRSA"" am: 8ed5338ff3 * commit 8ed5338ff38825f19f3ef87d7b4cefbedab0584b: Fix OID for SHA224WithRSA/Merge ""Fix OID for SHA224WithRSA""/Fix OID for SHA224WithRSA Bug: 26390415 Change-Id: I0cdcb75ba1459c747e5c88452d41a573aada4c7e/OID 1.2.840.10045.2.1 is EC public key. This change adds support for creating EC KeyPairGenerator and KeyFactory via EC public key OID 1.2.840.10045.2.1. Bug: 26097626 Change-Id: Iedc0b74e201b115750f38eabc9e91d08a884dadd/Basic implementation of RSASSA-PSS Signature. This makes Conscrypt provide RSASSA-PSS Signature implementations. These implementations currently do not support changing their parameters (e.g., via Signature.setParameter(PSSParameterSpec)) and returning their current parameters (e.g., via Signature.getParameters()). This will be added in a follow-up change. Bug: 25794302 Change-Id: I1488e0e9592f92a9e15365131c76ce2902ad4607/"
,,0.1366,conscrypt,Prevent duplicate certificates in TrustedCertificateIndex With the separate caching of intermediate certificates in TrustManagerImpl a given intermediate may be passed into .index multiple times. Avoid adding the certificate to the list each time. (cherry-picked from commit d080e064abba665e2dde2a8c113f837ba4d9a85e) Bug: 26232830 Change-Id: I6bed2c65d9e42e052b9b1b129200a997e7dca745/
,,0.1705,conscrypt,"Use canonical name for SHA1withECDSA When this Signature scheme was added to Conscrypt, we went with the Bouncycastle name of ""ECDSA."" However, the Standard Names documentation that ""ECDSA"" should not be used due to its ambiguity. (cherry picked from commit b825b8339d9ba3649e0997a5328140b7f8479759) Bug: 27753949 Change-Id: I20196550aa3cc70afaff1930d5e90e1c3a59ea82/Use canonical name for SHA1withECDSA When this Signature scheme was added to Conscrypt, we went with the Bouncycastle name of ""ECDSA."" However, the Standard Names documentation that ""ECDSA"" should not be used due to its ambiguity. Bug: 27753949 Change-Id: I20196550aa3cc70afaff1930d5e90e1c3a59ea82/"
,,0.0908,conscrypt,Return an empty list when no OCSP reponses received Change OpenSSLSessionImpl#getStatusResponses() to return an empty list instead of null. This matches the assumption of the serializing code in AbstractSessionContext. Add a test to make sure that serializing a trivial OpenSSLSessionImpl instance completes without throwing an exception. Test: cts-tradefed run cts android.core.tests.libcore.package.conscrypt Bug: 30751283 Change-Id: If4c3e6a99c080fb3a0fd527c86a5ee8972475718/
,,0.0878,conscrypt,Return an empty list when no OCSP reponses received Change OpenSSLSessionImpl#getStatusResponses() to return an empty list instead of null. This matches the assumption of the serializing code in AbstractSessionContext. Add a test to make sure that serializing a trivial OpenSSLSessionImpl instance completes without throwing an exception. Test: cts-tradefed run cts android.core.tests.libcore.package.conscrypt Bug: 30751283 Change-Id: If4c3e6a99c080fb3a0fd527c86a5ee8972475718/
,,0.0687,conscrypt,Remove unused imports left over from removing OpenSSL code Test: lunch aosp_bullhead-userdebug; make Change-Id: I5b8cdcfbe45a866005209ed2e6f365a1378d46d5/
,,0.0669,conscrypt,Remove unused imports left over from removing OpenSSL code Test: lunch aosp_bullhead-userdebug; make Change-Id: I5b8cdcfbe45a866005209ed2e6f365a1378d46d5/
,,0.1411,conscrypt,"Improve performance of OpenSSLEngine Test: cts-tradefed run cts CtsLibcoreTestCases arm64-v8a Test: cts-tradefed run cts CtsLibcoreOkHttpTestCases arm64-v8a Change-Id: I947bd3701e90bd65104f8f5c07ba218c4e051944/Fix various post-submit comments am: f5d5953b62 Change-Id: Idfaf05bab9b68c75ab066899eb190e30e120c779/Fix various post-submit comments These are various suggestions made after TreeHugger already auto-submitted changes. Test: cts-tradefed run cts CtsLibcoreTestCases arm64-v8a Change-Id: I88af938fa46f8cd925526709ac4db20d66b8d608/Strip out SSLv3 from enabled protocols for app compat HttpsURLConnection on Android before Marshmallow tried to setEnabledProtocols with just ""SSLv3"" without checking if it was a supported protocol. Instead of throwing IllegalArgumentException when the unsupported protocol is encountered, strip it out and later throw an SSLHandshakeException if no protocols are enabled. Test: cts-tradefed run cts CtsLibcoreTestCases arm64-v8a Test: cts-tradefed run cts CtsLibcoreOkHttpTestCases arm64-v8a Bug: 32053327 Bug: 30977793 Change-Id: I2f2008d85fcc5b5fbdc71722a3d6e0a9c22bfbc2/Remove NPN support NPN is deprecated and clients should use ALPN instead for now. In the interest of removing support for it in BoringSSL, we will remove NPN support from Conscrypt as well. For now keep around the NPN setters and getters in OpenSSLSocketImpl and OpenSSLEngineImpl to help with backward compatibility for users that may be using reflection. Test: make && make cts && cts-tradefed run cts CtsLibcoreTestCases Change-Id: Ia4edb21412d9c4b2440291ae0a8a97d2217bf5b5/Fix imports globally am: d0687b8c0d am: 967b0b11a3 am: be78c56078 Change-Id: Id8c38445063db7effaaacd3671a9c43eb4b3271a/Fix imports globally am: d0687b8c0d am: 967b0b11a3 Change-Id: I0ec9a42c2209792fd28913ee8eb7890091a4d444/Fix imports globally am: d0687b8c0d Change-Id: I2680d85a6655bbe2ada4c34fa6ff6d1bda332856/Fix imports globally Ran script to fix imports globally on all .java files. Committing results. Test: mmma external/conscrypt Change-Id: I6cd19c0f3dc66c8dcaec3c92a6019b4c0154e9e4/"
,,0.0823,conscrypt,"OpenSSLCipherRSA: add OAEP implementation This adds an RSA OAEP implementation for encryption of secrets using the RSA algorithm and the OAEP padding method as described by RFC 2437 section 7.1. Test: cts-tradefed run cts CtsLibcoreTestCases arm64-v8a Change-Id: Ifcdeee408b1ab1ce7903152167de9d40acd2efa2/Drop SSLv3 support Bug: 30977793 Test: libcore/run-libcore-tests libcore/luni/src/test/java/libcore/javax/net/ssl/* Change-Id: Ic88ff61bb16017e213a017ecdb16a1ac5b9baa48/Fix alias name for HmacSHA224. am: f24631e45c Change-Id: I47ec5558ff3f0065e0fe6d3d6d21ac5aa1d88866/Merge ""Fix alias name for HmacSHA224."" into nyc-mr1-dev/Fix alias name for HmacSHA224. Name was off by one. (cherry picked from commit abdd12276a5a9481e4c377820d5976c6dfe008e0) Test: make 32 Bug: 31114355 Change-Id: Ia2ffa15b626dd057f34a5c51f4fbc67876813f6d/Fix alias name for HmacSHA224. am: abdd12276a am: 15f6cf5223 am: 75d29d3852 Change-Id: I4e17be288f0ec665efa9df9549e8ff3eb69f151a/Fix alias name for HmacSHA224. am: abdd12276a am: 15f6cf5223 Change-Id: I3f8199f2568c5e1dbce26b1b0db0f16116f18f11/Fix alias name for HmacSHA224. am: abdd12276a Change-Id: Ie61d8dbb45f45a207f876e7d7a6a652bd481e62b/Fix alias name for HmacSHA224. Name was off by one. Test: make 32 Bug: 31114355 Change-Id: Ia986e282aac082977865afbf50986f670562a027/"
,,0.0809,conscrypt,Adding all factory methods for engine socket. (#192) Also properly throwing SSLHandshakeException in some cases. Fixes
,,0.1021,conscrypt,"Throw SSLHandshakeException for bad certs. (#147) Also expanding some of the test coverage in OpenSSLEngineImplTest./Merge upstream master Test: cts-tradefed run cts CtsLibcoreOkHttpTestCases arm64-v8a Test: cts-tradefed run cts CtsLibcoreTestCases arm64-v8a Change-Id: I2c0020c76b48f549b898e09be0612710616ea602/Move Netty-specific things to the benchmark dir Netty is not in the Android tree, so adding dependencies on it breaks the build. Since we currently dont run the SslEngineBenchmark, stick the methods that it needs there. Nothing else currently uses those methods. Additionally nothing is left that uses the NettyServer class as well./"
,,0.084,conscrypt,"Throw SSLHandshakeException for bad certs. (#147) Also expanding some of the test coverage in OpenSSLEngineImplTest./Merge upstream master Test: cts-tradefed run cts CtsLibcoreOkHttpTestCases arm64-v8a Test: cts-tradefed run cts CtsLibcoreTestCases arm64-v8a Change-Id: I2c0020c76b48f549b898e09be0612710616ea602/Move Netty-specific things to the benchmark dir Netty is not in the Android tree, so adding dependencies on it breaks the build. Since we currently dont run the SslEngineBenchmark, stick the methods that it needs there. Nothing else currently uses those methods. Additionally nothing is left that uses the NettyServer class as well./"
,,0.2887,conscrypt,Conformance fixes for the engine-based socket. (#202) This allows the SSLSocketTest to pass with the engine-based socket enabled. Also restructuring the inheritance hierarchy so that the FD and engine sockets both behave the same way (both either wrappers or not). The restructure involves the following: AbstractConscryptSocket: New base class for both sockets. It handles the wrap/no-wrap logic. OpenSSLSocketImplWrapper: deleted and replaced by AbstractConscryptSocket. OpenSSLSocketImpl: reduced to a public shim class between AbstractConscryptSocket and the implementations. For backward-compat only. ConscryptFileDescriptorSocket: Renamed from OpenSSLSocketImpl. The old FD socket./
,,0.2825,conscrypt,Conformance fixes for the engine-based socket. (#202) This allows the SSLSocketTest to pass with the engine-based socket enabled. Also restructuring the inheritance hierarchy so that the FD and engine sockets both behave the same way (both either wrappers or not). The restructure involves the following: AbstractConscryptSocket: New base class for both sockets. It handles the wrap/no-wrap logic. OpenSSLSocketImplWrapper: deleted and replaced by AbstractConscryptSocket. OpenSSLSocketImpl: reduced to a public shim class between AbstractConscryptSocket and the implementations. For backward-compat only. ConscryptFileDescriptorSocket: Renamed from OpenSSLSocketImpl. The old FD socket./
,,0.1975,conscrypt,"Trim constants and remove unsupported key types. (#230) We can assume BoringSSL now, so the ifdefs are no longer needed. This also removes the fixed (EC)DH key types. BoringSSL does not support the fixed (EC)DH modes and will never report them. This would be a no-op except merely knowing how the values mapped caused SSLUtils.getSupportedClientKeyTypes to report them. This figures into what is passed into chooseClientAlias. Forwarding along any of those values to chooseClientAlias would be incorrect. (But Ive never seen a fixed (EC)DH certificate or a server that requests one, and BoringSSL couldnt parse one anyway. So this is unlikely to have any actual consequence.)/Remove remnants of broken SSL_renegotiate tests. (#229) See issue These dont work anymore and will need to be rewritten, probably against a test implementation./"
,,0.1066,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.3286,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes fixes for the engine-based socket. (#202) This allows the SSLSocketTest to pass with the engine-based socket enabled. Also restructuring the inheritance hierarchy so that the FD and engine sockets both behave the same way (both either wrappers or not). The restructure involves the following: AbstractConscryptSocket: New base class for both sockets. It handles the wrap/no-wrap logic. OpenSSLSocketImplWrapper: deleted and replaced by AbstractConscryptSocket. OpenSSLSocketImpl: reduced to a public shim class between AbstractConscryptSocket and the implementations. For backward-compat only. ConscryptFileDescriptorSocket: Renamed from OpenSSLSocketImpl. The old FD socket./Various fixes to the Conscrypt engine. (#201)/"
,,0.1537,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes benchmarks. (#239) Including benchmarks for: handshake Nettys OPENSSL_REFCNT provider Partial fix for: Handshake benchmarks show conscrypt may have some work to do, but its not clear yet how much of the cost is creation of the engines. ``` Benchmark (a_cipher) (b_buffer) (c_engine) Mode Cnt Score Error Units JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 HEAP JDK thrpt 10 162.348 ± 10.382 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 HEAP CONSCRYPT_UNPOOLED thrpt 10 716.748 ± 102.178 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 HEAP CONSCRYPT_POOLED thrpt 10 742.854 ± 150.313 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 HEAP NETTY thrpt 10 1236.226 ± 9.631 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 HEAP NETTY_REF_CNT thrpt 10 1199.334 ± 97.748 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 DIRECT JDK thrpt 10 163.654 ± 9.940 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 DIRECT CONSCRYPT_UNPOOLED thrpt 10 755.786 ± 142.212 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 DIRECT CONSCRYPT_POOLED thrpt 10 755.845 ± 135.823 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 DIRECT NETTY thrpt 10 1247.186 ± 9.735 ops/s JmhEngineHandshakeBenchmark.hs TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 DIRECT NETTY_REF_CNT thrpt 10 1217.178 ± 79.153 ops/s ```/"
,,0.1138,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.10300000000000001,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.1174,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.11199999999999999,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.2789,conscrypt,"Switch to TLS_with_buffers_method. Closes issue to SSL_get0_peer_certificates. This works towards issue So the exception can be routed out properly, this moves the SSL_get0_peer_certificates call to after doHandshake completes in ConscryptFileDescriptorSocket. Although, due to False Start (the ""cut-through"" logic in that class), the handshake may not be fully complete at the time, BoringSSLs API is such that the certificates and other properties will be available once SSL_do_handshake first completes./Switch to SSL_set_custom_verify. This avoids the dependency on the legacy X.509 code and gets us closer to TLS_with_buffers_method (issue to CRYPTO_BUFFER client CA APIs. This gets us closer to TLS_with_buffers_method (issue It also, along the way, much more thoroughly checks errors of all the various operations involved./Fixing leak introduced in (#264)/Change unsigned to int to avoid signed-unsigned comparison. (#261)/Cleaning up JNI exceptions (#252) There were a bunch of exceptions that are being thrown from JNI methods that arent currently declared. Also removed a few unused JNI methods and duplicate constants, preferring those from NativeConstants./Avoid reprocessing the local certificates. (#250) We were needlessly querying the SSL for the local certificates during the handshake. Avoiding this shows a minor bump in handshake performance See IvParameters and ECParameters to Conscrypt. (#251) IvParameters is used as the AlgorithmParameters implementation for AES and DESEDE. ECParameters only supports named curves, since BoringSSL provides functions for marshalling curve names but not arbitrary curves and generally discourages the use of arbitrary curves (eg, ec.h says ""Avoid using arbitrary curves and use EC_GROUP_new_by_curve_name instead."")/Implement AlgorithmParameters.OAEP in Conscrypt. (#240) * Implement AlgorithmParameters.OAEP in Conscrypt. * Use JNI_TRUE and JNI_FALSE as return values, and clarify some exception messages./Remove Java OpenSSL name mapping. (#227) As of [0], BoringSSL supports the standard cipher suite names. The Java names are the same, with the exception of TLS_RSA_WITH_3DES_EDE_CBC_SHA/SSL_RSA_WITH_3DES_EDE_CBC_SHA for historical reasons. Add code to map between that exception but otherwise rely on the native support. [0] AlgorithmParameters.GCM in Conscrypt. (#217) * Implement AlgorithmParameters.GCM in Conscrypt. In order to handle the ASN.1 encoding, exposes a subset of the ASN.1 encoding API from BoringSSL in NativeCrypto. * Rename {write,read}_integer to {write,read}_uint64. Add a UniquePtr to ensure exceptions dont cause a memory leak./Some parsing and serializing fixes. (#219) This fixes a memory leak in NativeCrypto_i2d_PKCS7. It never frees derBytes. Also removing a dependency on the legacy ASN.1 stack./Remove remnants of broken SSL_renegotiate tests. (#229) See issue These dont work anymore and will need to be rewritten, probably against a test implementation./Refactoring session management (#172) This change breaks session management into two distinct types: SslSessionWrapper: These are created as BoringSSL calls back the new session handler, allowing the application to cache sessions. Clients will also offer these to BoringSSL for reuse if a compatible session was found. BoringSSL is free to use it or not, but the Conscrypt code no longer makes assumptions here. Instead, it always uses the ActiveSession. ActiveSession: This is a session that wraps the SSL instance (rather than the SSL_SESSION wherever possible). That way no concern has to be paid to what BoringSSL is doing with sessions under the covers. Fixes fixes to the Conscrypt engine. (#201)/"
,,0.2887,conscrypt,Conformance fixes for the engine-based socket. (#202) This allows the SSLSocketTest to pass with the engine-based socket enabled. Also restructuring the inheritance hierarchy so that the FD and engine sockets both behave the same way (both either wrappers or not). The restructure involves the following: AbstractConscryptSocket: New base class for both sockets. It handles the wrap/no-wrap logic. OpenSSLSocketImplWrapper: deleted and replaced by AbstractConscryptSocket. OpenSSLSocketImpl: reduced to a public shim class between AbstractConscryptSocket and the implementations. For backward-compat only. ConscryptFileDescriptorSocket: Renamed from OpenSSLSocketImpl. The old FD socket./
,,0.3703,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes buffer allocator in engine (#236) Also modifying the engine so that when running with no allocator (i.e. default), that it lazy-creates a direct buffer for JNI operations. This is a trade-off of performance for memory. It requires the allocation of a single direct buffer (~16k) that it uses to copy from/to heap buffers provided by the application. Fixes Benchmarks show a huge improvement. The engine socket now blows away old file-based socket. Also the engine, itself, is performing on par with Netty. Client Socket: ``` Benchmark (channelType) (messageSize) (socketType) Score Error Units JmhClientSocketBenchmark:bytesPerSecond NONE 64 JDK 20670510.287 ± 2819961.400 ops/s JmhClientSocketBenchmark:bytesPerSecond NONE 64 CONSCRYPT 33848197.816 ± 4989350.539 ops/s JmhClientSocketBenchmark:bytesPerSecond NONE 64 CONSCRYPT_ENGINE 44749583.683 ± 6134292.637 ops/s JmhClientSocketBenchmark:bytesPerSecond NONE 512 JDK 48204433.541 ± 2810531.888 ops/s JmhClientSocketBenchmark:bytesPerSecond NONE 512 CONSCRYPT 232416415.148 ± 29684894.680 ops/s JmhClientSocketBenchmark:bytesPerSecond NONE 512 CONSCRYPT_ENGINE 310801215.727 ± 24371818.265 ops/s JmhClientSocketBenchmark:bytesPerSecond NONE 4096 JDK 58643513.808 ± 1658108.450 ops/s JmhClientSocketBenchmark:bytesPerSecond NONE 4096 CONSCRYPT 1042715167.769 ± 33554034.996 ops/s JmhClientSocketBenchmark:bytesPerSecond NONE 4096 CONSCRYPT_ENGINE 998985902.510 ± 173250355.584 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 64 JDK 21669189.718 ± 2106385.961 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 64 CONSCRYPT 37385156.054 ± 4532906.286 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 64 CONSCRYPT_ENGINE 52886375.324 ± 6790212.250 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 512 JDK 47883220.892 ± 3333321.741 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 512 CONSCRYPT 224271272.001 ± 31693272.362 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 512 CONSCRYPT_ENGINE 307433134.710 ± 30458931.236 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 4096 JDK 59366754.581 ± 989937.143 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 4096 CONSCRYPT 997387329.864 ± 88179847.161 ops/s JmhClientSocketBenchmark:bytesPerSecond NO_CHANNEL 4096 CONSCRYPT_ENGINE 949163467.244 ± 162903541.551 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 64 JDK 18853147.149 ± 2567512.388 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 64 CONSCRYPT 38973102.125 ± 5288147.227 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 64 CONSCRYPT_ENGINE 49037557.290 ± 3449771.391 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 512 JDK 46940578.297 ± 3187957.601 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 512 CONSCRYPT 242148384.926 ± 26908183.865 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 512 CONSCRYPT_ENGINE 285255663.928 ± 29806352.951 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 4096 JDK 58530903.691 ± 1673847.911 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 4096 CONSCRYPT 935549616.895 ± 174971552.322 ops/s JmhClientSocketBenchmark:bytesPerSecond CHANNEL 4096 CONSCRYPT_ENGINE 885196452.941 ± 149034647.632 ops/s ``` Server socket: ``` Benchmark (channelType) (messageSize) (socketType) Score Error Units JmhServerSocketBenchmark:bytesPerSecond NONE 64 JDK 20471863.122 ± 2750083.890 ops/s JmhServerSocketBenchmark:bytesPerSecond NONE 64 CONSCRYPT 35067182.137 ± 4321558.305 ops/s JmhServerSocketBenchmark:bytesPerSecond NONE 64 CONSCRYPT_ENGINE 51865841.557 ± 6210881.683 ops/s JmhServerSocketBenchmark:bytesPerSecond NONE 512 JDK 48226041.924 ± 2652378.529 ops/s JmhServerSocketBenchmark:bytesPerSecond NONE 512 CONSCRYPT 256960370.646 ± 15978194.656 ops/s JmhServerSocketBenchmark:bytesPerSecond NONE 512 CONSCRYPT_ENGINE 305922585.432 ± 11603169.168 ops/s JmhServerSocketBenchmark:bytesPerSecond NONE 4096 JDK 57540407.205 ± 1494303.451 ops/s JmhServerSocketBenchmark:bytesPerSecond NONE 4096 CONSCRYPT 834949391.557 ± 131468107.844 ops/s JmhServerSocketBenchmark:bytesPerSecond NONE 4096 CONSCRYPT_ENGINE 894561064.594 ± 186485784.506 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 64 JDK 21414715.924 ± 2525202.959 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 64 CONSCRYPT 36320793.361 ± 2506987.539 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 64 CONSCRYPT_ENGINE 51698559.566 ± 4280412.657 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 512 JDK 47550444.360 ± 2791912.476 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 512 CONSCRYPT 226298704.876 ± 32094643.264 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 512 CONSCRYPT_ENGINE 302745204.149 ± 32629696.557 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 4096 JDK 59568364.160 ± 662744.026 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 4096 CONSCRYPT 892983849.077 ± 185771381.513 ops/s JmhServerSocketBenchmark:bytesPerSecond NO_CHANNEL 4096 CONSCRYPT_ENGINE 1027094139.211 ± 142838635.652 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 64 JDK 19017307.062 ± 3202589.193 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 64 CONSCRYPT 36145718.739 ± 7424407.014 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 64 CONSCRYPT_ENGINE 43706545.753 ± 8133454.663 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 512 JDK 48295259.871 ± 2751536.354 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 512 CONSCRYPT 260689915.496 ± 11958497.389 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 512 CONSCRYPT_ENGINE 300341704.678 ± 29489214.700 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 4096 JDK 57961362.687 ± 1450364.082 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 4096 CONSCRYPT 999803862.933 ± 113516770.944 ops/s JmhServerSocketBenchmark:bytesPerSecond CHANNEL 4096 CONSCRYPT_ENGINE 1031217300.014 ± 124844374.416 ops/s ``` Engine: ``` Benchmark (cipher) (messageSize) (sslProvider) Score Error Units JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 JDK_HEAP 465332.382 ± 23279.209 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 JDK_DIRECT 454529.557 ± 27897.327 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 CONSCRYPT_HEAP_UNPOOLED 1744207.896 ± 17819.397 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 CONSCRYPT_HEAP_POOLED 1465451.813 ± 14176.452 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 CONSCRYPT_DIRECT 2016813.524 ± 27654.790 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 NETTY_HEAP 1434943.223 ± 75951.521 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 NETTY_DIRECT 2213406.254 ± 176332.371 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 JDK_HEAP 106853.524 ± 4317.313 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 JDK_DIRECT 103353.246 ± 8433.983 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 CONSCRYPT_HEAP_UNPOOLED 1496206.948 ± 21583.193 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 CONSCRYPT_HEAP_POOLED 1057553.091 ± 130857.752 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 CONSCRYPT_DIRECT 1597479.155 ± 20888.559 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 NETTY_HEAP 1169042.447 ± 77704.222 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 NETTY_DIRECT 1663056.393 ± 26704.186 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 JDK_HEAP 15108.921 ± 160.300 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 JDK_DIRECT 14246.365 ± 981.619 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 CONSCRYPT_HEAP_UNPOOLED 497098.353 ± 4970.274 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 CONSCRYPT_HEAP_POOLED 417374.589 ± 4997.278 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 CONSCRYPT_DIRECT 527155.170 ± 33216.737 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 NETTY_HEAP 392839.884 ± 23065.132 ops/s JmhEngineBenchmark.wrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 NETTY_DIRECT 507145.953 ± 29442.768 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 JDK_HEAP 221410.435 ± 15308.092 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 JDK_DIRECT 219072.340 ± 16675.432 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 CONSCRYPT_HEAP_UNPOOLED 866077.951 ± 42527.270 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 CONSCRYPT_HEAP_POOLED 597154.296 ± 8613.868 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 CONSCRYPT_DIRECT 926671.460 ± 15021.389 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 NETTY_HEAP 704027.048 ± 25672.112 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 64 NETTY_DIRECT 1051056.529 ± 15020.345 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 JDK_HEAP 50648.382 ± 4929.690 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 JDK_DIRECT 51725.315 ± 2160.470 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 CONSCRYPT_HEAP_UNPOOLED 648229.046 ± 20470.238 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 CONSCRYPT_HEAP_POOLED 493919.908 ± 43992.976 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 CONSCRYPT_DIRECT 718664.342 ± 8480.030 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 NETTY_HEAP 554893.692 ± 18063.672 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 512 NETTY_DIRECT 777181.573 ± 9124.882 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 JDK_HEAP 7456.319 ± 86.302 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 JDK_DIRECT 7106.374 ± 397.573 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 CONSCRYPT_HEAP_UNPOOLED 223205.783 ± 11577.505 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 CONSCRYPT_HEAP_POOLED 190202.214 ± 9213.396 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 CONSCRYPT_DIRECT 253628.773 ± 2695.321 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 NETTY_HEAP 186621.213 ± 10636.644 ops/s JmhEngineBenchmark.wrapAndUnwrap TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256 4096 NETTY_DIRECT 234275.366 ± 14115.279 ops/s ```/Add availability checks (#216) Fixes session management (#172) This change breaks session management into two distinct types: SslSessionWrapper: These are created as BoringSSL calls back the new session handler, allowing the application to cache sessions. Clients will also offer these to BoringSSL for reuse if a compatible session was found. BoringSSL is free to use it or not, but the Conscrypt code no longer makes assumptions here. Instead, it always uses the ActiveSession. ActiveSession: This is a session that wraps the SSL instance (rather than the SSL_SESSION wherever possible). That way no concern has to be paid to what BoringSSL is doing with sessions under the covers. Fixes fixes for the engine-based socket. (#202) This allows the SSLSocketTest to pass with the engine-based socket enabled. Also restructuring the inheritance hierarchy so that the FD and engine sockets both behave the same way (both either wrappers or not). The restructure involves the following: AbstractConscryptSocket: New base class for both sockets. It handles the wrap/no-wrap logic. OpenSSLSocketImplWrapper: deleted and replaced by AbstractConscryptSocket. OpenSSLSocketImpl: reduced to a public shim class between AbstractConscryptSocket and the implementations. For backward-compat only. ConscryptFileDescriptorSocket: Renamed from OpenSSLSocketImpl. The old FD socket./Various fixes to the Conscrypt engine. (#201)/"
,,0.1102,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.3273,conscrypt,"Remove Java OpenSSL name mapping. (#227) As of [0], BoringSSL supports the standard cipher suite names. The Java names are the same, with the exception of TLS_RSA_WITH_3DES_EDE_CBC_SHA/SSL_RSA_WITH_3DES_EDE_CBC_SHA for historical reasons. Add code to map between that exception but otherwise rely on the native support. [0] constants and remove unsupported key types. (#230) We can assume BoringSSL now, so the ifdefs are no longer needed. This also removes the fixed (EC)DH key types. BoringSSL does not support the fixed (EC)DH modes and will never report them. This would be a no-op except merely knowing how the values mapped caused SSLUtils.getSupportedClientKeyTypes to report them. This figures into what is passed into chooseClientAlias. Forwarding along any of those values to chooseClientAlias would be incorrect. (But Ive never seen a fixed (EC)DH certificate or a server that requests one, and BoringSSL couldnt parse one anyway. So this is unlikely to have any actual consequence.)/Refactoring session management (#172) This change breaks session management into two distinct types: SslSessionWrapper: These are created as BoringSSL calls back the new session handler, allowing the application to cache sessions. Clients will also offer these to BoringSSL for reuse if a compatible session was found. BoringSSL is free to use it or not, but the Conscrypt code no longer makes assumptions here. Instead, it always uses the ActiveSession. ActiveSession: This is a session that wraps the SSL instance (rather than the SSL_SESSION wherever possible). That way no concern has to be paid to what BoringSSL is doing with sessions under the covers. Fixes fixes for the engine-based socket. (#202) This allows the SSLSocketTest to pass with the engine-based socket enabled. Also restructuring the inheritance hierarchy so that the FD and engine sockets both behave the same way (both either wrappers or not). The restructure involves the following: AbstractConscryptSocket: New base class for both sockets. It handles the wrap/no-wrap logic. OpenSSLSocketImplWrapper: deleted and replaced by AbstractConscryptSocket. OpenSSLSocketImpl: reduced to a public shim class between AbstractConscryptSocket and the implementations. For backward-compat only. ConscryptFileDescriptorSocket: Renamed from OpenSSLSocketImpl. The old FD socket./Various fixes to the Conscrypt engine. (#201)/"
,,0.107,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes Java logging consistently (#294) There are many places in the code that print to System.out/err. We should use the standard Java logging facilities. Fixes"
,,0.2856,conscrypt,Conformance fixes for the engine-based socket. (#202) This allows the SSLSocketTest to pass with the engine-based socket enabled. Also restructuring the inheritance hierarchy so that the FD and engine sockets both behave the same way (both either wrappers or not). The restructure involves the following: AbstractConscryptSocket: New base class for both sockets. It handles the wrap/no-wrap logic. OpenSSLSocketImplWrapper: deleted and replaced by AbstractConscryptSocket. OpenSSLSocketImpl: reduced to a public shim class between AbstractConscryptSocket and the implementations. For backward-compat only. ConscryptFileDescriptorSocket: Renamed from OpenSSLSocketImpl. The old FD socket./
,,0.2903,conscrypt,Conformance fixes for the engine-based socket. (#202) This allows the SSLSocketTest to pass with the engine-based socket enabled. Also restructuring the inheritance hierarchy so that the FD and engine sockets both behave the same way (both either wrappers or not). The restructure involves the following: AbstractConscryptSocket: New base class for both sockets. It handles the wrap/no-wrap logic. OpenSSLSocketImplWrapper: deleted and replaced by AbstractConscryptSocket. OpenSSLSocketImpl: reduced to a public shim class between AbstractConscryptSocket and the implementations. For backward-compat only. ConscryptFileDescriptorSocket: Renamed from OpenSSLSocketImpl. The old FD socket./
,,0.2768,conscrypt,"Customize default provider name based on platform (#314) Fixes errors when native library fails to load (#295) Currently, we throw in static initialization of NativeCryptoJni, which leads to ClassNotFoundException whenever we try to access the native code at runtime. The user has no way of knowing that the library failed to load, or why. This PR attempts to make it more clear as to what went wrong, by doing the following: Log each load error, in the order attempted. Select the ""best"" load error to be thrown Dont throw from the NativeCrypto static initializer. Rather, save the best error and throw when attempting to access top-level conscrypt classes./Add IvParameters and ECParameters to Conscrypt. (#251) IvParameters is used as the AlgorithmParameters implementation for AES and DESEDE. ECParameters only supports named curves, since BoringSSL provides functions for marshalling curve names but not arbitrary curves and generally discourages the use of arbitrary curves (eg, ec.h says ""Avoid using arbitrary curves and use EC_GROUP_new_by_curve_name instead."")/Implement AlgorithmParameters.OAEP in Conscrypt. (#240) * Implement AlgorithmParameters.OAEP in Conscrypt. * Use JNI_TRUE and JNI_FALSE as return values, and clarify some exception messages./Trim constants and remove unsupported key types. (#230) We can assume BoringSSL now, so the ifdefs are no longer needed. This also removes the fixed (EC)DH key types. BoringSSL does not support the fixed (EC)DH modes and will never report them. This would be a no-op except merely knowing how the values mapped caused SSLUtils.getSupportedClientKeyTypes to report them. This figures into what is passed into chooseClientAlias. Forwarding along any of those values to chooseClientAlias would be incorrect. (But Ive never seen a fixed (EC)DH certificate or a server that requests one, and BoringSSL couldnt parse one anyway. So this is unlikely to have any actual consequence.)/Implement AlgorithmParameters.GCM in Conscrypt. (#217) * Implement AlgorithmParameters.GCM in Conscrypt. In order to handle the ASN.1 encoding, exposes a subset of the ASN.1 encoding API from BoringSSL in NativeCrypto. * Rename {write,read}_integer to {write,read}_uint64. Add a UniquePtr to ensure exceptions dont cause a memory leak./"
,,0.1066,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.1048,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.1562,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes beginHandshake() when a handshake is in process. (#293) The documentation for beginHandshake() says that IllegalStateException is thrown if the client/server mode hasnt been set, and its reported that the OpenJDK implementation and previous Android releases both allowed calling beginHandshake() when a handshake is in progress. Since beginHandshake() is documented as being non-blocking, this should be safe. This fixes"
,,0.1102,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.1299,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes SSLSessionTest flakiness. connect never waited for the futures to resolve./"
,,0.1102,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.1138,conscrypt,"Support Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.1103,conscrypt,"Customize default provider name based on platform (#314) Fixes Java 6 Runtime (#299) Various fixes to support Java 6, 7, and 8. Separating out utility classes (for openjdk) to be explicit as to which methods are supported by particular Java version. Adding the ability to specify the test JVM to use on the command-line. For example, the following will build with the default Java installation, but will run the openjdk and integ-tests with Java 6: ./gradlew build Fixes"
,,0.204,conscrypt,Add missing Java 9 methods for ALPN (#339) Fixes support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes renegotiation with sockets (#321) Fixes Fixes
,,0.3365,conscrypt,"Switch from wrapping to subclassing for Java 9 methods. (#359) Older Android apps rely on OpenSSLSocketImpl being in the superclass chain of sockets, which means wrapping them can cause problems. Instead, use a subclass to add the appropriate methods. This also makes the subclass implementation quite clean, but it pollutes the Platform classes with a bunch of methods and means we have to remember not to use the constructors directly./Add missing Java 9 methods for ALPN (#339) Fixes support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes"
,,0.1914,conscrypt,Adding support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes
,,0.1914,conscrypt,Adding support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes
,,0.2144,conscrypt,Add missing Java 9 methods for ALPN (#339) Fixes support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes
,,0.2842,conscrypt,"Throw SocketException if the FD socket has had its SSL freed (#343) Under some circumstances (which are repeatable, but I havent been able to lock down), the HTTP connection reuse system in the JDK will attempt to reuse a finalized ConscryptFileDescriptorSocket. When this happens, the socket throws a NullPointerException from the native code when methods are called, because the native SSL object has been freed, which causes a lot of problems. Instead, have the socket throw SocketException instead, which everything understands and responds properly to. As best as I can tell, this is happening because the finalizer of some object thats not ours but has a strong reference to our socket adds a new strong reference, but our finalizer has already been enqueued and thus is run even though the object then can later be reused. I havent been able to find this finalizer, but everything tolerates the code as written and responds properly to the SocketException, so it seems like a good solution until we get rid of the FD socket entirely. Fixes missing Java 9 methods for ALPN (#339) Fixes support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes"
,,0.2179,conscrypt,Add missing Java 9 methods for ALPN (#339) Fixes support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes
,,0.1914,conscrypt,Adding support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes
,,0.1984,conscrypt,Adding support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes renegotiation with sockets (#321) Fixes Fixes
,,0.32899999999999996,conscrypt,"Switch from wrapping to subclassing for Java 9 methods. (#359) Older Android apps rely on OpenSSLSocketImpl being in the superclass chain of sockets, which means wrapping them can cause problems. Instead, use a subclass to add the appropriate methods. This also makes the subclass implementation quite clean, but it pollutes the Platform classes with a bunch of methods and means we have to remember not to use the constructors directly./Add missing Java 9 methods for ALPN (#339) Fixes support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes renegotiation with sockets (#321) Fixes Fixes"
,,0.26,conscrypt,"Update some exception messages. (#370) Weve seen a decodeProtocols failure in the wild, which is super weird, so Id like to see more details of whether the caller is at fault or we are somehow./Add missing Java 9 methods for ALPN (#339) Fixes support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes"
,,0.1896,conscrypt,Adding support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes
,,0.3464,conscrypt,"Switch from wrapping to subclassing for Java 9 methods. (#359) Older Android apps rely on OpenSSLSocketImpl being in the superclass chain of sockets, which means wrapping them can cause problems. Instead, use a subclass to add the appropriate methods. This also makes the subclass implementation quite clean, but it pollutes the Platform classes with a bunch of methods and means we have to remember not to use the constructors directly./Adding support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes"
,,0.3502,conscrypt,"Switch from wrapping to subclassing for Java 9 methods. (#359) Older Android apps rely on OpenSSLSocketImpl being in the superclass chain of sockets, which means wrapping them can cause problems. Instead, use a subclass to add the appropriate methods. This also makes the subclass implementation quite clean, but it pollutes the Platform classes with a bunch of methods and means we have to remember not to use the constructors directly./Adding support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes"
,,0.26,conscrypt,"Fix NullPointerException when calling setAlpnProtocols(). (#364) setAlpnProtocols() (a Conscrypt-specific function) can be called with null and treats it the same as an empty array, whereas the RIs definition of setApplicationProtocols(), which is used for the same purpose, disallows null. Replace null with empty array when mapping from one to the other./Add missing Java 9 methods for ALPN (#339) Fixes support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes"
,,0.1396,conscrypt,"Cleanly send and receive close_notify alerts (#325) As part: * Dont call SSL_clear() when shutting down an SSL, because we need to be able to hand it close_notify messages still. Since both SSLEngine and SSLSocket arent reusable, this is safe. * Return SSL_ERROR_ZERO_RETURN explicitly when it happens, so that we can properly adjust our state in response to a close_notify being received. * Check if there are pending bytes to be sent when wrap() is called, even if the SSLEngine is closed./"
,,0.1849,conscrypt,Add missing Java 9 methods for ALPN (#339) Fixes benchmarks broken by (#334) The cipher used in the benchmarks requires TLS 1.2./Adding support for Java 9 server-side ALPN protocol selection. (#319) Java 9 adds a setHandshakeApplicationProtocolSelector method to both SSLEngine and SSLSocket that allows the application to provide a BiFunction to choose the protocol. This PR attempts to provide support for this method while still maintaining backward compatibility with ealier versions of Java. Fixes renegotiation with sockets (#321) Fixes Fixes
,,0.0833,conscrypt,Fix NullPointerException when IOException is thrown during socket creation (#405)/
,,0.1072,conscrypt,"Add logging macros that work on all platforms. (#462) This adds CONSCRYPT_LOG_X macros that redirect to either ALOG on Android or fprintf(stderr) on non-Android. In the future, we could use these to allow users to register a logging callback and send the logs to a destination of their choice (via java.util.Logger or log4j or what have you), but for now well keep it simple. Fixes"
,,0.1041,conscrypt,"Add logging macros that work on all platforms. (#462) This adds CONSCRYPT_LOG_X macros that redirect to either ALOG on Android or fprintf(stderr) on non-Android. In the future, we could use these to allow users to register a logging callback and send the logs to a destination of their choice (via java.util.Logger or log4j or what have you), but for now well keep it simple. Fixes"
,,0.1025,conscrypt,"Add logging macros that work on all platforms. (#462) This adds CONSCRYPT_LOG_X macros that redirect to either ALOG on Android or fprintf(stderr) on non-Android. In the future, we could use these to allow users to register a logging callback and send the logs to a destination of their choice (via java.util.Logger or log4j or what have you), but for now well keep it simple. Fixes"
,,0.1246,conscrypt,"Remove exception throwing on bad hostnames. (#478) Testing on Android has indicated that there are too many things that rely on passing whatever string has been passed to them to setHostname() and arent prepared to get an exception (including IP addresses, single-element hostnames, and whatnot) for it to be reasonable to throw an exception here. Settle for documenting what the behavior of passing an invalid hostname is./"
,,0.134,conscrypt,"Updates for new java.security tests. (#483) Synchronize a number of Signature methods. If these methods are called concurrently, it can lead to crashes due to the native memory management stepping on itself. Add to the classes and to a couple missing places. Fix the concurrent usage Signature test. Previously it didnt init the signature object, so all of the threads just immediately threw without actually doing anything. Also check the created Futures to satisfy ErrorProne./"
,,0.1161,conscrypt,"Remove exception throwing on bad hostnames. (#478) Testing on Android has indicated that there are too many things that rely on passing whatever string has been passed to them to setHostname() and arent prepared to get an exception (including IP addresses, single-element hostnames, and whatnot) for it to be reasonable to throw an exception here. Settle for documenting what the behavior of passing an invalid hostname is./"
,,0.3355,conscrypt,"Pass subjects rather than issuers as trusted CA list. (#477) When setting the CAs to trust for client certificates, we were previously passing a list of the issuers of the certs, which is the same as the subject for self-signed certificates but not for intermediate CA certs. For example, when the server trusts {[subject=RootCA, issure=RootCA], [subject=SecondCA, issure=RootCA], [subject=ThirdCA, issure=SecondCA]}, we previously provided {SecondCA, RootCA, RootCA}. We now provide {ThirdCA, SecondCA, RootCA}./"
,,0.4022,conscrypt,"Fix NPE from closed SSLEngine. (#499) When calling wrap() on a closed SSLEngine instance, we check to see if anything is already pending to be written, but the native BIO will already have been freed, so the native code threw NullPointerException. Check for it being already freed when looking for pending data and just return zero in that case. Also sets the bio pointer to 0 before freeing it and and marks it as volatile to reduce the chances of any weird race conditions, though the locking in ConscryptEngine should already make these impossible. Fixes netty/netty#7988./Add locking around read/write in NativeSsl. (#490) This uses a read/write lock around the ssl instance variable for NativeSsl. The write lock is only taken during close(), where ssl is cleared, so all other operations can proceed in parallel with one another. I only added locking to the read- and write-style methods in the class, rather than to methods that only read or write a property, since the latter tend to be used only right when the SSL is created and it would add a lot of noise to the code to lock everywhere, but its possible we want to add that as well for complete safety. This should solve some longstanding but infrequent crashes weve seen that involve race conditions with finalizers and other related situations. Fixes a function to force an engine read. (#453) The SSLEngine implementation sometimes need to prompt BoringSSL to process any incoming TLS data in order to determine whether there is enough data to produce plaintext. We previously were reading into a zero-byte buffer to do this, but that causes ambiguity in return values because a return of 0 from SSL_read() could mean a failure (generally EOF) or could mean a successful read of 0 bytes (which would be expected when reading into a zero-byte array). Instead, use SSL_peek. Fixes subjects rather than issuers as trusted CA list. (#477) When setting the CAs to trust for client certificates, we were previously passing a list of the issuers of the certs, which is the same as the subject for self-signed certificates but not for intermediate CA certs. For example, when the server trusts {[subject=RootCA, issure=RootCA], [subject=SecondCA, issure=RootCA], [subject=ThirdCA, issure=SecondCA]}, we previously provided {SecondCA, RootCA, RootCA}. We now provide {ThirdCA, SecondCA, RootCA}./"
,,0.2149,conscrypt,"Fix NPE from closed SSLEngine. (#499) When calling wrap() on a closed SSLEngine instance, we check to see if anything is already pending to be written, but the native BIO will already have been freed, so the native code threw NullPointerException. Check for it being already freed when looking for pending data and just return zero in that case. Also sets the bio pointer to 0 before freeing it and and marks it as volatile to reduce the chances of any weird race conditions, though the locking in ConscryptEngine should already make these impossible. Fixes netty/netty#7988./Add a function to force an engine read. (#453) The SSLEngine implementation sometimes need to prompt BoringSSL to process any incoming TLS data in order to determine whether there is enough data to produce plaintext. We previously were reading into a zero-byte buffer to do this, but that causes ambiguity in return values because a return of 0 from SSL_read() could mean a failure (generally EOF) or could mean a successful read of 0 bytes (which would be expected when reading into a zero-byte array). Instead, use SSL_peek. Fixes SSLEngine bug with multiple heap buffer inputs. (#485) When the SSLEngine overload that accepts an array of ByteBuffers is called with heap buffers for both the source and destination, those heap buffers are converted to direct buffers for passing to JNI by way of copying them to a single temporary direct buffer. A bug in the reading of the encrypted data out of BoringSSL resulted in the data being placed at the wrong offset of the temporary buffer, meaning that the output data was prefixed in the worst case by the plaintext. Fixes CVE-2017-13309./"
,,0.1381,conscrypt,"Stop using set_options to set protocol support. (#500) The *_set_min_protocol_version and *_set_max_protocol_version functions were introduced to be explicit about setting supported versions. Use those functions instead of SSL_set_options with disabling constants. There arent any higher-level tests because this is already covered by tests like SSLSocket.test_SSLSocket_setEnabledProtocols, SSLSocket.test_SSLSocket_noncontiguousProtocols_useLower, etc./"
,,0.1579,conscrypt,"Provide TrustManagerFactory (#516) This is necessary for users who want to enable TLS 1.3, since the TrustManagerFactory implementation shipped with OpenJDK throws an exception if it encounters an SSLSocket or SSLEngine thats negotiated TLS 1.3. Use our TrustManager in tests. Also adds a HostnameVerifier in the tests that does the simplest thing, because our TrustManager verifies hostnames by default, whereas the OpenJDK one doesnt, and the bundled HostnameVerifier on OpenJDK just fails to verify anything./"
,,0.15,conscrypt,"Provide TrustManagerFactory (#516) This is necessary for users who want to enable TLS 1.3, since the TrustManagerFactory implementation shipped with OpenJDK throws an exception if it encounters an SSLSocket or SSLEngine thats negotiated TLS 1.3. Use our TrustManager in tests. Also adds a HostnameVerifier in the tests that does the simplest thing, because our TrustManager verifies hostnames by default, whereas the OpenJDK one doesnt, and the bundled HostnameVerifier on OpenJDK just fails to verify anything./"
,,0.1405,conscrypt,"Provide TrustManagerFactory (#516) This is necessary for users who want to enable TLS 1.3, since the TrustManagerFactory implementation shipped with OpenJDK throws an exception if it encounters an SSLSocket or SSLEngine thats negotiated TLS 1.3. Use our TrustManager in tests. Also adds a HostnameVerifier in the tests that does the simplest thing, because our TrustManager verifies hostnames by default, whereas the OpenJDK one doesnt, and the bundled HostnameVerifier on OpenJDK just fails to verify anything./"
,,0.1452,conscrypt,"Provide TrustManagerFactory (#516) This is necessary for users who want to enable TLS 1.3, since the TrustManagerFactory implementation shipped with OpenJDK throws an exception if it encounters an SSLSocket or SSLEngine thats negotiated TLS 1.3. Use our TrustManager in tests. Also adds a HostnameVerifier in the tests that does the simplest thing, because our TrustManager verifies hostnames by default, whereas the OpenJDK one doesnt, and the bundled HostnameVerifier on OpenJDK just fails to verify anything./"
,,0.4404,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.1026,conscrypt,"Update handling of empty error queue (#555) Some BoringSSL functions dont make any guarantees about the state of the error queue if they return an error, and in most cases we dont actually care what error occurred. Instead of throwing AssertionError when we encounter an error with no entry in the error queue, throw the default exception type (which is usually RuntimeException). Also removes NativeCrypto.ERR_peek_last_error(), which was only used in tests. We now have the CHECK_ERROR_QUEUE_ON_RETURN macro that serves the same purpose but does it more comprehensively. Fixes"
,,0.1335,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.4462,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.4439,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.4298,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.2148,conscrypt,"Update handling of empty error queue (#555) Some BoringSSL functions dont make any guarantees about the state of the error queue if they return an error, and in most cases we dont actually care what error occurred. Instead of throwing AssertionError when we encounter an error with no entry in the error queue, throw the default exception type (which is usually RuntimeException). Also removes NativeCrypto.ERR_peek_last_error(), which was only used in tests. We now have the CHECK_ERROR_QUEUE_ON_RETURN macro that serves the same purpose but does it more comprehensively. Fixes X509_verify exceptions (#537) Unexpectedly, X509_verify does not set an entry in the error queue when the signature algorithm in a certificates info doesnt match the algorithm in the signature block, it just returns 0. This trips an AssertionError in throwExceptionFromBoringSSLError, so check for that condition explicitly. Also default to throwing CertificateException instead of RuntimeException when X509_verify encounters an error that we havent explicitly handled. I dont know if there are any such errors in practice, but itll be more correct if there are./"
,,0.4404,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.4462,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.2861,conscrypt,"Make OpenSSLBIOInputStream read as fully as possible (#587) Some of the callers of BIO APIs in BoringSSL (particularly the DER decoder) depend on the BIO read returning either a full buffer or an EOF, but InputStream allows returning less than the requested amount of data without hitting EOF. This causes the DER decoder to fail in some cases (specifically, weve seen it fail with overly large OCSP responses where the socket hasnt buffered the entire response before we try to decode it). Fix this by repeatedly calling read() until our output buffer is full or EOF is reached. Also add a test for decoding DER-encoded certs, we previously only tested PEM-encoded ones./"
,,0.1389,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.1622,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.445,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.1425,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.1478,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.4485,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.4786,conscrypt,"Fix X509_verify exceptions (#537) Unexpectedly, X509_verify does not set an entry in the error queue when the signature algorithm in a certificates info doesnt match the algorithm in the signature block, it just returns 0. This trips an AssertionError in throwExceptionFromBoringSSLError, so check for that condition explicitly. Also default to throwing CertificateException instead of RuntimeException when X509_verify encounters an error that we havent explicitly handled. I dont know if there are any such errors in practice, but itll be more correct if there are./Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.1496,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.2635,conscrypt,"Make OpenSSLBIOInputStream read as fully as possible (#587) Some of the callers of BIO APIs in BoringSSL (particularly the DER decoder) depend on the BIO read returning either a full buffer or an EOF, but InputStream allows returning less than the requested amount of data without hitting EOF. This causes the DER decoder to fail in some cases (specifically, weve seen it fail with overly large OCSP responses where the socket hasnt buffered the entire response before we try to decode it). Fix this by repeatedly calling read() until our output buffer is full or EOF is reached. Also add a test for decoding DER-encoded certs, we previously only tested PEM-encoded ones./Adjust new tests for unusual BC behavior A couple of the new tests weve added recently fail on Android (which includes BC as a built-in provider). BCs behavior is technically disallowed, but accept it in the tests since were not going to change it./Allow d2i_X509_bio and friends to not set an error (#552) BoringSSL recently changed so that d2i_X509_bio doesnt set an error in the error queue when it receives certain garbage inputs. We dont actually care what error is set in the queue (we just end up catching whatever is thrown and throwing CertificateException), so change to tolerate having no error in the queue./"
,,0.1407,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.1552,conscrypt,"General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./KeyManagerFactoryTest: Test all key types when choosing from a list. When choosing client or engine alias from a list of different supported key types, the choose method will generally return the first usable key, so test all the rotational permutations of the key types in order to try all available aliases. Android bug: 28196789/"
,,0.4497,conscrypt,"Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.1425,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.1425,conscrypt,General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./
,,0.4373,conscrypt,"Fix typo in assumption (#578) The tests that relied on this were being skipped in all cases, rather than just when 1.3 would be negotiated./Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.4709,conscrypt,"General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.4582,conscrypt,"Move libcore.tlswire to org.conscrypt.tlswire (#568) The TLS wire protocol stuff isnt actually used anywhere except in Conscrypt, so move it to our package with the plan to delete it from libcore once this goes into AOSP. Also refactor two identical sets of methods into a single new TlsTester class./Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.475,conscrypt,"Fix X509_verify exceptions (#537) Unexpectedly, X509_verify does not set an entry in the error queue when the signature algorithm in a certificates info doesnt match the algorithm in the signature block, it just returns 0. This trips an AssertionError in throwExceptionFromBoringSSLError, so check for that condition explicitly. Also default to throwing CertificateException instead of RuntimeException when X509_verify encounters an error that we havent explicitly handled. I dont know if there are any such errors in practice, but itll be more correct if there are./Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.4751,conscrypt,"General cleanup (#579) Deal with some new ErrorProne warnings: unnecessary parentheses and importing classes named Builder. Add new cert failure logging to the test logging file so it doesnt pollute the test output./Support TLS 1.3 (#524) Enables support for negotiating TLS 1.3. TLS 1.3 is not enabled unless SSLContext.TLSv1.3 is requested or setEnabledProtocols() is called with a set of values that includes TLSv1.3. Detailed changes: Adds protocol constants for TLS 1.3, and provides SSLContext.TLSv1.3, which has TLS 1.3 enabled by default. Adjusts cipher suite code for TLS 1.3 suites. When enabled, all TLS 1.3 cipher suites are always returned from supportedCipherSuites() and enabledCipherSuites(). Attempts to customize TLS 1.3 cipher suites in setEnabledCipherSuites() are ignored. Splits {SSLEngine,SSLSocket}Test into version-dependent and version-independent tests. The latter remain in {SSLEngine,SSLSocket}Test and the former move into new files {SSLEngine,SSLSocket}VersionCompatibilityTest, which are parameterized to test all combinations of client and server on TLS 1.2 and TLS 1.3. Remove a pile of RI-specific TLS-related expectation declarations from StandardNames. We dont actually verify the behavior of the RI at any point, so it was just making the code more confusing. Fixes"
,,0.0783,conscrypt,"Retype return values (#630) The return values for OpenSSLContextImpl.engineGetClientSessionContext() and .engineGetServerSessionContext() were covariant to make the no-arg constructor a little easier to write, but it is causing ClientSessionContext and ServerSessionContext to leak into Android stubs in a weird way. Since we dont rely on that typing anywhere else, we can just put a cast into the constructor instead./"
,,0.0837,conscrypt,"Add zone index handling to IPv6 regex (#666) This allows us to detect scoped IPv6 addresses with zone indices (eg, `fe80::1ff:fe23:4567:890a%eth2`). RFCs 4007 and 6874 both agree that the character set for zone indices isnt limited in any way, so we match any sequence of characters that follows a percent sign. Fixes"
,,0.1092,conscrypt,"Prepare for upcoming BoringSSL error change. (#664) cleans up errors used by EVP_AEAD. We had many duplicate errors that were used inconsistently. (I think we kept adding new ones without noticing that they already existed. Oops.) To prepare for that in Conscrypt: Remove CIPHER_R_AES_KEY_SETUP_FAILED. It indicates an internal error in BoringSSL, should be unreachable, and doesnt indicate an invalid key from the Java side. CIPHER_R_BAD_KEY_LENGTH and CIPHER_R_UNSUPPORTED_KEY_SIZE. Theyll be removed later. Add CIPHER_R_INVALID_KEY_LENGTH to the set of key length errors checked. The two errors above will be folded into CIPHER_R_INVALID_KEY_LENGTH and EVP_CIPHER_CTX_set_key_length already uses it./Tidy up error mapping. (#662) These ifdefs are remnants of older BoringSSL versions. We can remove them now./"
,,0.0959,conscrypt,Add Conscrypt-specific hostname verifier (#636) This allows users to set hostname verifiers either Conscrypt-wide or on an individual trust manager without polluting the default HostnameVerifier of HttpsURLConnection. Fixes
,,0.3159,conscrypt,"Dont send TLS_FALLBACK_SCSV if max version is >= 1.2 (#651) TLS_FALLBACK_SCSV protects against downgrade attacks when clients implement a version fallback independent of TLS version negotiation, but if its set on a non-fallback connection attempt, it will prevent an otherwise-safe connection if the server supports a version higher than the client does. Because the default OpenJDK TLS implementation doesnt support TLS_FALLBACK_SCSV, some developers mistakenly enable it on every connection due to thinking its a normal cipher suite, which is starting to cause issues when servers upgrade to TLS 1.3. We can obviously omit it on connections with a max version of 1.3, since thats Conscrypts max version, so it cant be a version fallback. As far as connections with a max version of 1.2 are concerned, this type of fallback is generally not needed any longer, since TLS 1.3-supporting servers should all perform version negotiation properly. (Chrome and Firefox have both disabled version fallback entirely.) Thus TLS_FALLBACK_SCSVs presence in connections with a max version of 1.2 is significantly more likely to be a misconfiguration than a true fallback indication. We continue to include the cipher suite for connections with a max version of 1.1 or lower. First, flaws in pre-1.2 versions are more likely to exist than flaws in 1.2, so the benefit of flagging downgrades to those versions are higher. As well, fallback is most likely to be useful when dealing with buggy TLS 1.2 servers. Fixes"
,,0.0853,conscrypt,"Add zone index handling to IPv6 regex (#666) This allows us to detect scoped IPv6 addresses with zone indices (eg, `fe80::1ff:fe23:4567:890a%eth2`). RFCs 4007 and 6874 both agree that the character set for zone indices isnt limited in any way, so we match any sequence of characters that follows a percent sign. Fixes"
,,0.1586,conscrypt,"Fetch local certs when available (#663) Local certificates dont change once theyre set, so we dont have to wait for any particular point to fetch and cache them. If someone requests them, we can just get them from the SSL if available. Also adds tests for getHandshakeSession() on the server side, which is a time when these certs would previously not have been available. Fixes"
,,0.3529,conscrypt,"Fetch local certs when available (#663) Local certificates dont change once theyre set, so we dont have to wait for any particular point to fetch and cache them. If someone requests them, we can just get them from the SSL if available. Also adds tests for getHandshakeSession() on the server side, which is a time when these certs would previously not have been available. Fixes send TLS_FALLBACK_SCSV if max version is >= 1.2 (#651) TLS_FALLBACK_SCSV protects against downgrade attacks when clients implement a version fallback independent of TLS version negotiation, but if its set on a non-fallback connection attempt, it will prevent an otherwise-safe connection if the server supports a version higher than the client does. Because the default OpenJDK TLS implementation doesnt support TLS_FALLBACK_SCSV, some developers mistakenly enable it on every connection due to thinking its a normal cipher suite, which is starting to cause issues when servers upgrade to TLS 1.3. We can obviously omit it on connections with a max version of 1.3, since thats Conscrypts max version, so it cant be a version fallback. As far as connections with a max version of 1.2 are concerned, this type of fallback is generally not needed any longer, since TLS 1.3-supporting servers should all perform version negotiation properly. (Chrome and Firefox have both disabled version fallback entirely.) Thus TLS_FALLBACK_SCSVs presence in connections with a max version of 1.2 is significantly more likely to be a misconfiguration than a true fallback indication. We continue to include the cipher suite for connections with a max version of 1.1 or lower. First, flaws in pre-1.2 versions are more likely to exist than flaws in 1.2, so the benefit of flagging downgrades to those versions are higher. As well, fallback is most likely to be useful when dealing with buggy TLS 1.2 servers. Fixes"
,,0.0913,conscrypt,Minor cleanup (#688) Clean up some unused variable and method ErrorProne warnings. Eliminate debug logging from NativeLibraryLoader in tests./
,,0.1604,conscrypt,Accommodate KeyStores that dont support getEntry() (#686) The Android Keystore implementation of KeyStore doesnt implement getEntry() and throws UnsupportedOperationException if you try to call it. We can adapt to that by attempting to retrieve the private key and certificate chain manually if the call to getEntry() fails. Fixes
,,0.191,conscrypt,"Fix tests to not depend on hardware acceleration (#717) The priority order of cipher suites for TLS 1.3 depends in part on things like whether AES hardware acceleration is present. We delegate those decisions to BoringSSL, so we only want to check whether the negotiated suite was enabled rather than the specific suite that was negotiated./"
,,0.2866,conscrypt,"Fix tests to not depend on hardware acceleration (#717) The priority order of cipher suites for TLS 1.3 depends in part on things like whether AES hardware acceleration is present. We delegate those decisions to BoringSSL, so we only want to check whether the negotiated suite was enabled rather than the specific suite that was negotiated./Fix implementation of available() in sockets (#694) The file descriptor socket used the default implementation of available(), which just always returns 0. We can at least return the pending bytes in the plaintext buffer, since those are definitely available. The engine socket had two issues. First, it used fromSocket.remaining(), but fromSocket was in a writing posture, so it always had a high return from remaining() regardless of whether there was pending readable data in the buffer. This was the cause of a BufferedReader would read some data, then check available() to see if it could freely fill some more data without blocking. The engine socket would report that it could, so it would try to read that data and then unexpectedly block. The second issue is that incoming socket data doesnt necessarily imply readable plaintext data: it might be a partial TLS record, a handshake or other management record, etc. So we should only report plaintext data thats actually been successfully decrypted from available(). Fixes cleanup (#688) Clean up some unused variable and method ErrorProne warnings. Eliminate debug logging from NativeLibraryLoader in tests./"
,,0.1417,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.0616,frostwire,[common] Fixes nasty NPE in SearchMatcher. (Constructor made public for tests)/
,,0.1343,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.138,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.1546,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.138,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.1472,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.1454,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.1435,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.1398,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.1454,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.1417,frostwire,"[common] First part of refactor to avoid type pollution with licences, moving towards a more single functional object pattern./"
,,0.0902,frostwire,Merge pull request from frostwire/ok [common] avoid connection leaks with OKHttpClient./[common] avoid connection leaks with OKHttpClient./
,,0.0926,frostwire,"[common] removed excess logging, it can hangs the app (specially in Windows)/"
,,0.0926,frostwire,"[common] removed excess logging, it can hangs the app (specially in Windows)/"
,,0.0945,frostwire,"[common] removed excess logging, it can hangs the app (specially in Windows)/"
,,0.1479,frostwire,"[android] make sure shared preferences are cleared on the first run. Theres a very weird issue on which clearing data and uninstalling the app (either through the Settings screen or with adb uninstall com.frostwire.android) the settings remain, and for some reason the support_fw setting keeps getting turned off/"
,,0.0664,frostwire,[common] YT fix/
,,0.0724,frostwire,[common] reverted fix/[common] fixed some bad prefix in YT/
,,0.0652,frostwire,[common] fixed YT/
,,0.063,frostwire,[common] fixed YT/
,,0.0669,frostwire,[desktop] fixed no search engine enabled on upgrade/
,,0.0828,frostwire,[common] fixed TorLock/
,,0.0673,frostwire,[common] fixed Monova/
,,0.063,frostwire,[android] InHouseBanner offering fix/
,,0.066,frostwire,[all] TorLock search fixed/
,,0.0618,frostwire,[common] minor code fixes in AbstractTorrentSearchResult/
,,0.0681,frostwire,[all] TorLock search fixed/
,,0.09699999999999999,frostwire,[common] fixed SC preview mplayer support was fixed a few months ago and now SC seems to always redirect to the url./
,,0.0673,frostwire,[common] PerformersHelper::MAGNET_HASH_PATTERN bug fix/
,,0.0833,frostwire,[common] fixed Archiveorg search engine/
,,0.0607,frostwire,[desktop] Search Database factory reset on clear failure/
,,0.0833,frostwire,[common] put back throwable on error()/[common] Logger methods now support optional parameter to display thread and caller method stack trace info/
,,0.066,frostwire,[common] fix concurrency issue in HistoHashMap#update/
,,0.0712,frostwire,"[common] Mp4Demuxer, avoid unnecessary skip calls in some cases the offset can be zero which causes the IO.skip call to throw an IllegalArgumentException/"
,,0.1248,frostwire,"[android] dump thread pool information in case of queue overflow, only active in debug build/[android] narrow the isDebuggerConnected condition in verifyTask/[android] dont disable Debug when debugger connected only disable verifyTasks/[android] EngineThreadPool disables task queue size verification when the debugger is connected. Renamed .isEnable to .isEnabled (English grammar fix)/[android] removed unnecessary method in Debug, in android we can use Log#getStackTraceString/[android] useful debug comments for EngineThreadPool state/"
,,0.0702,frostwire,[android] removed unused StopWatch/
,,0.0854,frostwire,[common] more fixes in YT signature detection/
,,0.0639,frostwire,[desktop] InstallerUpdater outputs installerUrl on error/
,,0.0669,frostwire,[common] TransferState::isErrored(state) boolean/
,,0.1,frostwire,"[common] Torlock, missing connection fixed/"
,,0.0704,frostwire,[common] NPE check on Ref.free/[common] Ref.free() protect from crash/
,,0.1213,frostwire,"[common] UrlUtils.getFastestMirrorDomain() log output fix/[common] UrlUtils.getFastestMirror() false negative output fixed, formatting/"
,,0.071,frostwire,[common] make sure HEAD http connections are not leaked/
,,0.0664,frostwire,[common] SC Fix.
,,0.079,javacpp,"* Deprecate but also fix `Indexer.rows()`, `cols()`, `width()`, `height()`, and `channels()` (pull * Remove unnecessary declared `Exception` from `Indexer.close()` signature (pull"
,,0.0675,jna,"* include/ffi.h.in: Try to work around messy header problem with PACKAGE and VERSION. * configure: Rebuilt. * configure.in: Change version to 2.00-beta. * fficonfig.h.in: Rebuilt. * acconfig.h (FFI_NO_STRUCTS, FFI_NO_RAW_API): Define. * src/x86/ffi.c (ffi_raw_call): Rename./"
,,0.0694,jna,"update windows natives, fix bool support on w32/fix varargs on ARM/"
,,0.0645,jna,Merge pull request from matthiasblaesing/fix_gcc_build Fix build with mingw-64 on windows/Fix build with mingw-w64 on windows mingw used to directly use the msvcrt implementation of swprintf which does does not match the ANSI version. This was fixed in mingw-w64 and so this special case has to be removed./
,,0.1539,jna,"Added `com.sun.jna.platform.WindowUtils.getAllWindows`, `getWindowIcon`, `getIconSize`, `getWindowTitle`, `getPRocessFilePath` and `getWindowLocationAndSize`. Request textual message of current last error code `com.sun.jna.platform.win32.Kernel32Util.getLastErrorMessage`. Added `com.sun.jna.platform.win32.GDI32.GetObject`. Added `com.sun.jna.platform.win32.Psapi` with `GetModuleFileNameEx`- Added `com.sun.jna.platform.win32.User32.GetIconInfo`, `SendMessageTimeout`, `GetClassLongPtr`. Added `com.sun.jna.platform.win32.WinGDI.ICONINFO` and `BITMAP`. Added process-specific access rights constants in `com.sun.jna.platform.win32.WinNT`. Added specific constants for request of icon settings in `com.sun.jna.platform.win32.WinUser`. Added constants for `GetClassLong`, `SendMessageTimeout` and `GetIconInfo` in `com.sun.jna.platform.win32.WinUser`./"
,,0.2885,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.0764,jna,"Merge pull request from java-native-access/w32-build-fix Fix windows builds under MSVC, 32- and 64-bit/Fix windows builds under MSVC, 32- and 64-bit w64 doesnt suport complex either/"
,,0.0977,jna,"Merge pull request from java-native-access/490-fix-win32-struct-return Fixes issue pull request from java-native-access/w32-build-fix Fix windows builds under MSVC, 32- and 64-bit/Fix windows builds under MSVC, 32- and 64-bit w64 doesnt suport complex either/"
,,0.0724,jna,"Merge pull request from java-native-access/w32-build-fix Fix windows builds under MSVC, 32- and 64-bit/Fix windows builds under MSVC, 32- and 64-bit w64 doesnt suport complex either/"
,,0.0639,jna,fix amd64 native thread cleanup test/
,,0.0556,jna,Fix callbacks when DEP is enabled git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/
,,0.0566,jna,abi check fixes and Linux/x32 support/Fix ABI check regression/
,,0.0609,jna,Linux/x32 libtool fix/abi check fixes and Linux/x32 support/
,,0.1614,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.2956,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.0877,jna,Final changes based on feedback * Changed Privilege constructor * Changed enable interface to return this * Removed try with resources * Fixed javadoc/
,,0.2999,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.1526,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.2899,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.2899,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.0692,jna,correct test to fix failure/add CoInit constants fix last error formatting/
,,0.2428,jna,"Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/Fix access denied in unittest Kernel32Test#testQueryFullProcessImageName The desiredAccess value for OpenProcess was 0, this resulted in a access denied error. While OpenProcess does not document this, it mentions correct values, which do not include 0. As QueryFullProcessImageName is documented to require PROCESS_QUERY_INFORMATION or PROCESS_QUERY_LIMITED_INFORMATION. As PROCESS_QUERY_LIMITED_INFORMATION is documented to be wider supported this is choosen."
,,0.0877,jna,Final changes based on feedback * Changed Privilege constructor * Changed enable interface to return this * Removed try with resources * Fixed javadoc/
,,0.1473,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.2913,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.3013,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.3098,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.1526,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.0697,jna,"Make sure the Structure constructors are always chained in, so QueryInterface et al dont crash the whole JVM/"
,,0.1437,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.2899,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.1455,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.2885,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.0784,jna,"Merge pull request from matthiasblaesing/fix_windows Fix build/test errors on Windows/Cleanup lastError state before test and remove undocumented checks This explicitly cleans the lastError state before running the unittests and removes the check for the last error where the MSDN documentation does not document, that the error state might be checked./"
,,0.1578,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.0677,jna,Merge pull request from matthiasblaesing/flexibleVariantConversion Followup fixes for some regressions/Handle LastErrorException from Kernel32Util#formatMessage in ComUtils#checkRC/
,,0.0648,jna,add CoInit constants fix last error formatting/
,,0.2984,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.287,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.3027,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.297,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.0609,jna,"Fix REFIID signatures in tests, fix testFindName/"
,,0.297,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.1614,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.2913,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.3013,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.2913,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.287,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.2828,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.1578,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.2913,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.1437,jna,"Replace addSuppressed with a reflection based variant addSuppressed was added to Throwable in JDK7, to be compatible with Java 6 it cant be called directly. To replace the functionality reflection is used. A helper method ""addSuppressedRelfected"" was introduced into the only class, that currently uses suppressed exceptions (Win32Exception)./"
,,0.2999,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.3027,jna,Improve stability of tests Registry Keys are documented as case insensitive Improve stability of COM Tests by killing IE to ensure clean state Prevent failures because of wrong locale (skip error message generation tests or use locale independent API) OpenProcess with correct permissions Free correct value in Secur32Test Tolerate more complex scenarios in VolumeManagementFunctions (hidden partions) Handle DxvaTest when monitor does not supply capablilities string Use correct comparison operator for version check Tolerate invalid environment strings MonitorFromPoint is known to fail on 32bit use MonitorFromWindow/
,,0.0631,OpenDDS,Fri Mar 23 20:30:26 UTC 2012 Don Hudson * dds/DCPS/transport/multicast/MulticastSendStrategy.cpp: Changed async_send() to return when there is a failure to open ACE_Asynch_Write_Dgram and removed log error messages as TransportSendStrategy logs when a failure is returned by this method./
,,0.0618,OpenDDS,fixed ACE_Message_Block memory mgmt/
,,0.0665,OpenDDS,Mon Jun 25 18:50:31 UTC 2012 Johnny Willemsen * bin/dcps_tests.lst: Inconsistent_Qos test is dependent on DDS4CCM_OPENDDS * dds/DCPS/ContentFilteredTopicImpl.h: Doxygen fix/
,,0.1584,OpenDDS,Fixed ReaderCondSync to not wait_unmatch since it is the signalling of the condition that should allow it to proceed. Added wait_unmatch for writer side to react to the sub ending when ReaderCondSync ends the sub. Modified MultiInstance test to take advantage of this and let the first pub instance wait for the first sub instance to end before continuing to second instance/
,,0.1614,OpenDDS,Fixed ReaderCondSync to not wait_unmatch since it is the signalling of the condition that should allow it to proceed. Added wait_unmatch for writer side to react to the sub ending when ReaderCondSync ends the sub. Modified MultiInstance test to take advantage of this and let the first pub instance wait for the first sub instance to end before continuing to second instance/
,,0.1614,OpenDDS,Fixed ReaderCondSync to not wait_unmatch since it is the signalling of the condition that should allow it to proceed. Added wait_unmatch for writer side to react to the sub ending when ReaderCondSync ends the sub. Modified MultiInstance test to take advantage of this and let the first pub instance wait for the first sub instance to end before continuing to second instance/
,,0.1539,OpenDDS,Fixed ReaderCondSync to not wait_unmatch since it is the signalling of the condition that should allow it to proceed. Added wait_unmatch for writer side to react to the sub ending when ReaderCondSync ends the sub. Modified MultiInstance test to take advantage of this and let the first pub instance wait for the first sub instance to end before continuing to second instance/
,,0.0697,OpenDDS,Fixed parse_args to properly detect certain parameters when doing str comparison/
,,0.0863,OpenDDS,"Converting/updating transport logging having to do with association to be at DCPSTransportDebugLevel 1 instead of DCPSDebugLevel or DCPSTransportDebugLevel 3/Added logging at the DCPSDebugLevel for TransportClient associate, initiate_connect, and use_datalink_i to include specific log messages without needing DCPSTransportDebugLevel/"
,,0.1141,OpenDDS,"Converting/updating transport logging having to do with association to be at DCPSTransportDebugLevel 1 instead of DCPSDebugLevel or DCPSTransportDebugLevel 3/If connect fails, need to remove TcpDatalink from links_ so that any future joining or currently waiting datawriters dont assume that link will finish in the future and wait on it indefinitely. If any are already waiting, invoke their on_start_callbacks with false to allow them to create a new datalink and connection and try to connect directly./Rollback changes to error logging in commit 88c6f4977dbf4172a31ce5d971faeec4fff7f54b/Change log message to actual error if the connect fails with error/"
,,0.0685,OpenDDS,Converting/updating transport logging having to do with association to be at DCPSTransportDebugLevel 1 instead of DCPSDebugLevel or DCPSTransportDebugLevel 3/
,,0.0833,OpenDDS,"Merge pull request from objectcomputing/ipv6_updates Do not log errors in helper function, rather log warnings and let calÖ/Fix creation of INET with wchar hostname/Refactor open_dual_stack_socket into one function to open the appropriate type of socket for the configuration. Fix issues with IPV6 builds in the transport tests to use correct sockets and address types./"
,,0.0758,OpenDDS,Merge pull request from mitza-oci/master Fix remaining warnings on MacOSX/clang./Fix remaining warnings on MacOSX/clang./
,,0.11699999999999999,OpenDDS,UDP transport: keep track of local address string as configured as private member data apply Windows-specific socket ioctl for connection reset improved debug logging/
,,0.1225,OpenDDS,UDP transport: keep track of local address string as configured as private member data apply Windows-specific socket ioctl for connection reset improved debug logging/Refactor open_dual_stack_socket into one function to open the appropriate type of socket for the configuration. Fix issues with IPV6 builds in the transport tests to use correct sockets and address types./Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./
,,0.0947,OpenDDS,UDP transport: keep track of local address string as configured as private member data apply Windows-specific socket ioctl for connection reset improved debug logging/Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./
,,0.0802,OpenDDS,Refactor open_dual_stack_socket into one function to open the appropriate type of socket for the configuration. Fix issues with IPV6 builds in the transport tests to use correct sockets and address types./Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Fix issues with IPV6 enabled builds on Windows./
,,0.0717,OpenDDS,Merge pull request from mitza-oci/master Fix remaining warnings on MacOSX/clang./Fix remaining warnings on MacOSX/clang./
,,0.0829,OpenDDS,"Merge pull request from jrw972/master Fix datarace in callback subscriber for MultiDomainMessenger Test/Fix datarace in callback subscriber The same callback is used for two different FACE connections. The callback updates a global counter and flag. The callback may be invoked concurrently, thus, the counter and flag must be protected by a lock./"
,,0.0669,OpenDDS,Initial wireshark fixes for debugging (not final)/
,,0.0915,OpenDDS,"Removed some commented out code, disable versioned namespaces in opendds by default unless explicitly enabled, fixed compile error * dds/FACE/config/TopicSettings.h: * dds/Versioned_Namespace.h:/"
,,0.0857,OpenDDS,Merge pull request from huangminghuang/ArrayTestFix Fix tools/modeling/tests/Arrays serialization error/Fix tools/modeling/tests/Arrays serialization error/
,,0.0577,OpenDDS,Fix unsynchronized access to REQUEST ACK TransportQueueElement./
,,0.0685,OpenDDS,Merge pull request from jwillemsen/jwi-missingbreakserializerwstringtest Add missing breaks/Added missing breaks * tests/DCPS/Serializer_wstring/DataReaderListener.cpp:/
,,0.0621,OpenDDS,Merge pull request from huangminghuang/thrasher-fix Fix unsynchronized access to REQUEST ACK TransportQueueElement./
,,0.0556,OpenDDS,Merge pull request from huangminghuang/thrasher-fix Fix unsynchronized access to REQUEST ACK TransportQueueElement./
,,0.0577,OpenDDS,Merge pull request from huangminghuang/thrasher-fix Fix unsynchronized access to REQUEST ACK TransportQueueElement./
,,0.0643,OpenDDS,Merge pull request from huangminghuang/thrasher-fix Fix unsynchronized access to REQUEST ACK TransportQueueElement./
,,0.0577,OpenDDS,Merge pull request from huangminghuang/thrasher-fix Fix unsynchronized access to REQUEST ACK TransportQueueElement./
,,0.0681,OpenDDS,"DCPS Dissector now running on Wireshark 2.4.1 Added ""ws"" prefix to remaining calls to proto_tree_add and tvb_length./"
,,0.0639,OpenDDS,"DCPS Dissector now running on Wireshark 2.4.1 Added ""ws"" prefix to remaining calls to proto_tree_add and tvb_length./"
,,0.0738,OpenDDS,Continued interop fixes/fixed more issues with PropertyQos and Property serialization/fixed bug in serialization of PropertySeq/BinaryPropertySeq/
,,0.1339,OpenDDS,Merge pull request from mitza-oci/rtpsudp-sendstrat adding check for send failure to RtpsUdpSendStrategy to avoid puttingÖ/using same rules to determine log warning vs error as control messages (cherry picked from commit 735fe0087bfbefa489e0fba3a5b943a97ac83d01)/using same rules to determine log warning vs error as control messages/adding check for send failure to RtpsUdpSendStrategy to avoid putting base class into SUSPEND state (cherry picked from commit 3a6fc90a35dfe83f52df1f179408477bd29b2ba7)/adding check for send failure to RtpsUdpSendStrategy to avoid putting base class into SUSPEND state/crypto plugin: submsg encryption (bug fixes)/fixed an error on older compilers/
,,0.1474,OpenDDS,Merge pull request from mitza-oci/rtpsudp-sendstrat adding check for send failure to RtpsUdpSendStrategy to avoid puttingÖ/adding check for send failure to RtpsUdpSendStrategy to avoid putting base class into SUSPEND state (cherry picked from commit 3a6fc90a35dfe83f52df1f179408477bd29b2ba7)/adding check for send failure to RtpsUdpSendStrategy to avoid putting base class into SUSPEND state/
,,0.0911,OpenDDS,Fixed issues with OpenDDS hooks into elliptic-curve signature verification/Added exception context to Certificate/minor formatting and const issues/SSL formatting fixes/
,,0.0749,OpenDDS,"adding support for 8.8.7.1 (unauth) and fixing half_sec test issues (also unauth)/Dont rely on format of the guidPrefix when security is in use/Initial implementation of 8.8.5 and rest of 8.8.6, changes to tests & script & dds log messages to allow for failure test/"
,,0.125,OpenDDS,"fixes for v8 generation including support for arrays, adding rapidjson generator and support for disabling default generators and adding arbitrary includes to cpp files to command line (to support additional typesupport generation for types that are already included in core library)/"
,,0.1348,OpenDDS,"fixes for v8 generation including support for arrays, adding rapidjson generator and support for disabling default generators and adding arbitrary includes to cpp files to command line (to support additional typesupport generation for types that are already included in core library)/"
,,0.14300000000000002,OpenDDS,"fixes for v8 generation including support for arrays, adding rapidjson generator and support for disabling default generators and adding arbitrary includes to cpp files to command line (to support additional typesupport generation for types that are already included in core library)/"
,,0.1397,OpenDDS,"fixes for v8 generation including support for arrays, adding rapidjson generator and support for disabling default generators and adding arbitrary includes to cpp files to command line (to support additional typesupport generation for types that are already included in core library)/"
,,0.14300000000000002,OpenDDS,"fixes for v8 generation including support for arrays, adding rapidjson generator and support for disabling default generators and adding arbitrary includes to cpp files to command line (to support additional typesupport generation for types that are already included in core library)/"
,,0.1283,OpenDDS,"fixes for v8 generation including support for arrays, adding rapidjson generator and support for disabling default generators and adding arbitrary includes to cpp files to command line (to support additional typesupport generation for types that are already included in core library)/"
,,0.1446,OpenDDS,"fixes for v8 generation including support for arrays, adding rapidjson generator and support for disabling default generators and adding arbitrary includes to cpp files to command line (to support additional typesupport generation for types that are already included in core library)/"
,,0.0954,OpenDDS,"type converter helper functions, fixes for copyFromV8 for structs / sequences, implement helper functions/"
,,0.0556,OpenDDS,Misc Style Fixes/
,,0.0673,OpenDDS,Merge pull request from objectcomputing/tcp-reconnect-fix Tcp reconnect fix/
,,0.0605,OpenDDS,fixed the include path/added intersect_sorted_ranges and intersect; modified debug codeî/
,,0.0686,OpenDDS,Fix constants and serialization/
,,0.0852,OpenDDS,Whitespace fixes/Add clear_transaction_id() to fix uninitialized memory issue./Fix constants and serialization/Fix missing exports/
,,0.0818,OpenDDS,Add clear_transaction_id() to fix uninitialized memory issue./Fix constants and serialization/
,,0.0814,OpenDDS,Serialized Payload Alignment Changes (#1374) * Serialized Payload Alignment Changes * Bug fix * code and output layout fixes/
,,0.0824,OpenDDS,Merge pull request from jrw972/multi-secure-deadlock Fix race conditions and deadlock from multiple secure participants/Fix race conditions and deadlock from multiple secure participants/
,,0.0861,OpenDDS,Merge pull request from jrw972/multi-secure-deadlock Fix race conditions and deadlock from multiple secure participants/Fix race conditions and deadlock from multiple secure participants/
,,0.08800000000000001,OpenDDS,Merge pull request from jrw972/multi-secure-deadlock Fix race conditions and deadlock from multiple secure participants/Fix race conditions and deadlock from multiple secure participants/
,,0.0758,pljava,Added missing FlushErrorState after CopyError/Fix for bug
,,0.1443,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1849,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1816,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1371,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1443,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.098,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/
,,0.1407,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1425,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1425,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1443,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1425,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1425,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1443,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.0965,pljava,Fixed bug causing crash after fence rewrite when returning tuples./
,,0.1496,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.175,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.2186,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/Java exception can no longer elog./Fixed bug causing crash after fence rewrite when returning tuples./Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.2103,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/Fixed issue with overloaded methods./Fixed bug causing crash after fence rewrite when returning tuples./Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1443,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1407,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1389,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1425,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1353,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1425,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.0945,pljava,Fixed bug causing crash after fence rewrite when returning tuples./
,,0.1514,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1335,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1389,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1425,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1407,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1318,pljava,Fixed so that LargeObject functionality is initialized on startup./Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1899,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1808,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/Fixed portal clean-up./Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1389,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1402,pljava,Fixed typo/Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/Fixed bug causing crash after fence rewrite when returning tuples./
,,0.1478,pljava,Dropped support for versions prior to 8.0. Fixed bug causing stack check failur when backend was called from thread other than main Fixed stability issue related to GC and MemoryContexts/
,,0.1081,pljava,Reinstated Exception traces when log level >= DEBUG1 Merged Invocation and CallContext Cleanup and refactoring/
,,0.0898,pljava,Bugfix 1010956: Function returning complex objects with POD arrays cause a segfault _booleanArray_coerceObject() now correctly handles arrays of type Boolean[]/
,,0.0938,pljava,Bugfix 1010956: Function returning complex objects with POD arrays cause a segfault _shortArray_coerceObject() now correctly handles arrays of type Short[]/
,,0.073,pljava,Bug 1011206: Use correcd SQL error state when throwing exceptions./
,,0.2594,pljava,"Merge pull request from jcflack/bug/master/issue21 Pass all Unicode codepoints transparently (issue threadlock ops in string conversion. The Java methods related to charset encoding/decoding may be called repeatedly, and they dont require the threadlock to be released and reacquired. I dont measure much difference in timing (I dont really have a good ""average text"" corpus to test on; the test case for this bug is worst case because it uses all of the biggest characters.) Even without a compelling timing difference, the Java charset encoders/ decoders arent thread safe, so I feel just that much better holding on to the lock./Make String.c use Javas charset en/decoders. In this commit, all the conversions in String.c except String_createJavaString(text*) which can have a bug fixed first./Merge pull request from jcflack/bug/master/issue54 Only ignore the expected exception in method lookup./Only ignore the expected exception in method lookup. That way other exceptions (like a problem in a class initializer, or out of memory) will not be hidden from view. Closes"
,,0.2621,pljava,"Merge pull request from jcflack/bug/master/issue4 Fix oldest outstanding github issue, enum support./Merge pull request from jcflack/bug/master/issue21 Pass all Unicode codepoints transparently (issue threadlock ops in string conversion. The Java methods related to charset encoding/decoding may be called repeatedly, and they dont require the threadlock to be released and reacquired. I dont measure much difference in timing (I dont really have a good ""average text"" corpus to test on; the test case for this bug is worst case because it uses all of the biggest characters.) Even without a compelling timing difference, the Java charset encoders/ decoders arent thread safe, so I feel just that much better holding on to the lock./Fix latent bug in unused method. Looks as if String_createJavaString would return null for a zero-length text argument ... if anything ever calls it, which may not be the case AFAICT./Make String.c use Javas charset en/decoders. In this commit, all the conversions in String.c except String_createJavaString(text*) which can have a bug fixed first./"
,,0.1224,pljava,"Merge branch chore/master/java7ify Bump the minimum Java to 7 and begin adopting Java 7 features in places where the fruit hangs low./No more standard charset lookups by name. Rethink use of java.util.Scanner to slurp data ... its very convenient, but part of the reason is it swallows IOExceptions. If you add the extra lines of code to hang onto the reference and call its ioException() method to see if something went wrong, the brevity advantage slips away./Merge branch bug/REL1_5_STABLE/typmapchk into REL1_5_STABLE Addresses CVE-2016-2192./"
,,0.1197,pljava,"Merge branch chore/master/java7ify Bump the minimum Java to 7 and begin adopting Java 7 features in places where the fruit hangs low./No more standard charset lookups by name. Rethink use of java.util.Scanner to slurp data ... its very convenient, but part of the reason is it swallows IOExceptions. If you add the extra lines of code to hang onto the reference and call its ioException() method to see if something went wrong, the brevity advantage slips away./"
,,0.2439,pljava,"Handle the widening of FuncCallContexts call_cntr. This one is a bit stickier, because the value is passed to Java code that implements ResultSetProvider, an interface in pljava-api. The signature for assignRowValues cant just be changed. Instead, for now, a ResultSetProvider is limited to returning INT_MAX rows, but the limit is checked to ensure a predictable failure. For the future, in the Java 8 world, the ResultSetProvider interface could grow a default method largeAssignRowValues that takes a long row number; the Java 8 default implementation would just signal the same error, and classes implementing the old interface wont break. Alas, PL/Java isnt committed to supporting only Java 8 yet. In fact, the same thing could be done on the quiet: PL/Java could check whether the class implementing ResultSetProvider happens to have a largeAssignRowValues method with the right signature, and use it if present. It would simply have to be covered in documentation, and not formally declared in the interface until the Java support bar moves to Java 8. All of that is future work this change merely checks and enforces an INT_MAX limit./"
,,0.24600000000000002,pljava,"Handle the widening of FuncCallContexts call_cntr. This one is a bit stickier, because the value is passed to Java code that implements ResultSetProvider, an interface in pljava-api. The signature for assignRowValues cant just be changed. Instead, for now, a ResultSetProvider is limited to returning INT_MAX rows, but the limit is checked to ensure a predictable failure. For the future, in the Java 8 world, the ResultSetProvider interface could grow a default method largeAssignRowValues that takes a long row number; the Java 8 default implementation would just signal the same error, and classes implementing the old interface wont break. Alas, PL/Java isnt committed to supporting only Java 8 yet. In fact, the same thing could be done on the quiet: PL/Java could check whether the class implementing ResultSetProvider happens to have a largeAssignRowValues method with the right signature, and use it if present. It would simply have to be covered in documentation, and not formally declared in the interface until the Java support bar moves to Java 8. All of that is future work this change merely checks and enforces an INT_MAX limit./"
,,0.2397,pljava,"Handle the widening of FuncCallContexts call_cntr. This one is a bit stickier, because the value is passed to Java code that implements ResultSetProvider, an interface in pljava-api. The signature for assignRowValues cant just be changed. Instead, for now, a ResultSetProvider is limited to returning INT_MAX rows, but the limit is checked to ensure a predictable failure. For the future, in the Java 8 world, the ResultSetProvider interface could grow a default method largeAssignRowValues that takes a long row number; the Java 8 default implementation would just signal the same error, and classes implementing the old interface wont break. Alas, PL/Java isnt committed to supporting only Java 8 yet. In fact, the same thing could be done on the quiet: PL/Java could check whether the class implementing ResultSetProvider happens to have a largeAssignRowValues method with the right signature, and use it if present. It would simply have to be covered in documentation, and not formally declared in the interface until the Java support bar moves to Java 8. All of that is future work this change merely checks and enforces an INT_MAX limit./"
,,0.2302,pljava,"Handle the widening of FuncCallContexts call_cntr. This one is a bit stickier, because the value is passed to Java code that implements ResultSetProvider, an interface in pljava-api. The signature for assignRowValues cant just be changed. Instead, for now, a ResultSetProvider is limited to returning INT_MAX rows, but the limit is checked to ensure a predictable failure. For the future, in the Java 8 world, the ResultSetProvider interface could grow a default method largeAssignRowValues that takes a long row number; the Java 8 default implementation would just signal the same error, and classes implementing the old interface wont break. Alas, PL/Java isnt committed to supporting only Java 8 yet. In fact, the same thing could be done on the quiet: PL/Java could check whether the class implementing ResultSetProvider happens to have a largeAssignRowValues method with the right signature, and use it if present. It would simply have to be covered in documentation, and not formally declared in the interface until the Java support bar moves to Java 8. All of that is future work this change merely checks and enforces an INT_MAX limit./"
,,0.1641,pljava,"Sort implemented from unimplemented JDBC4 methods. Move those that have some JDBC-allowed behavior (other than throwing a not-supported exception) into the implemented category, even when the JDBC-allowed behavior is to do nothing special. Leave in the unimplemented category just the methods that ought to do something else, but currently throw the not-supported exception. In passing, just provide the natural implementation for isWrapperFor and unwrap; its no more trouble than throwing the exception For ResultSetMetaData, pull up their implementations into AbstractResultSetMetaData, so they dont have to be duplicated in SPIResultSetMetaData and SyntheticResultSetMetaData. Some indentation normalized, only in areas touched./"
,,0.1536,pljava,"Sort implemented from unimplemented JDBC4 methods. Move those that have some JDBC-allowed behavior (other than throwing a not-supported exception) into the implemented category, even when the JDBC-allowed behavior is to do nothing special. Leave in the unimplemented category just the methods that ought to do something else, but currently throw the not-supported exception. In passing, just provide the natural implementation for isWrapperFor and unwrap; its no more trouble than throwing the exception For ResultSetMetaData, pull up their implementations into AbstractResultSetMetaData, so they dont have to be duplicated in SPIResultSetMetaData and SyntheticResultSetMetaData. Some indentation normalized, only in areas touched./"
,,0.0636,realm-java,Removed all the generated source files (issue
,,0.0657,realm-java,Removed all the generated source files (issue
,,0.0616,realm-java,Removed all the generated source files (issue
,,0.0657,realm-java,Removed all the generated source files (issue
,,0.0657,realm-java,Removed all the generated source files (issue
,,0.0636,realm-java,Removed all the generated source files (issue
,,0.0657,realm-java,Removed all the generated source files (issue
,,0.0697,realm-java,Removed all the generated source files (issue
,,0.0616,realm-java,Removed all the generated source files (issue
,,0.0616,realm-java,Removed all the generated source files (issue
,,0.0636,realm-java,Removed all the generated source files (issue
,,0.0616,realm-java,Removed all the generated source files (issue
,,0.0677,realm-java,Removed all the generated source files (issue
,,0.0665,realm-java,"Moved the Table annotation into ""com.tightdb"" package (issue"
,,0.0785,realm-java,Improved field sorter to support multiple source folders (issue from errors to warnings for non-critical problems(issue
,,0.0692,realm-java,Refactored add improved basic view/table methods (issue
,,0.0749,realm-java,"Changes due to improved error handling in core library. Group no longer has an is_valid() method. From now on, Group instances are always valid./fixed range check bug, just introduced. Updated tests in build test/"
,,0.1119,realm-java,"Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Added test cases for all Exceptions that native interface can throw./ BREAKING CHANGE: Group() now takes a new OpenMode parameter and not a boolean. It now supports multiple ways to open a group. (ReadOnly, ReadWrite, WriteNoCreate) + Added Group.Commit()/"
,,0.0869,realm-java,Supports new Version API (so far undocumented). Changed tableview->is_valid() to is_attached() Updated *.h files they must be autogenerated and not fixed by hand./Support new tableview is_valid() validate. Added testcases in Java./
,,0.0795,realm-java,Supports new Version API (so far undocumented). Changed tableview->is_valid() to is_attached() Updated *.h files they must be autogenerated and not fixed by hand./
,,0.0833,realm-java,Supports new Version API (so far undocumented). Changed tableview->is_valid() to is_attached() Updated *.h files they must be autogenerated and not fixed by hand./
,,0.0797,realm-java,Supports new Version API (so far undocumented). Changed tableview->is_valid() to is_attached() Updated *.h files they must be autogenerated and not fixed by hand./Support new tableview is_valid() validate. Added testcases in Java./
,,0.0612,realm-java,Merge branch master into cm/bug/local-install/fix tests/Merge pull request from realm/mc-enc-not-supported Add RealmEncryptionNotSupportedException/Update core to v0.89.8 Add RealmEncryptionNotSupportedException/
,,0.066,realm-java,Merge pull request from realm/mc/bug/deprecate-getInstance Deprecate Realm.getInstance(Context)/
,,0.066,realm-java,Merge pull request from realm/mc/bug/deprecate-getInstance Deprecate Realm.getInstance(Context)/
,,0.0717,realm-java,Fix RealmCollection.contains not respecting custom equal methods (#4111)/
,,0.0697,realm-java,Fix RealmCollection.contains not respecting custom equal methods (#4111)/
,,0.0657,realm-java,Merge pull request from realm/merge-a8d647-to-master Fix merge from a8d647 to master/Handling Results exceptions. Adding support for contains/index_of/
,,0.066,realm-java,Fix return values in JNI unchecked row Fix pull request from realm/merge-dc09d5-to-master Fix merge from dc09d5 to master/
,,0.0664,realm-java,Fix ErrorProne warnings/
,,0.0758,realm-java,"Enable Kotlin for unit tests and move benchmarks to separate library Kotlin has been added to the unit test suite. In order to not break the dex limit, the benchmarks have been moved to a separate library./Nh/android support ssl (#4591) * Expose two new SyncConfiguration options to 1: Disable TLS verification. 2: provide the trusted root CA to validate the RealmObjectServer TLS connection (since OpenSSL doesnt have access to Android keystore) fixes"
,,0.0664,realm-java,Fix ErrorProne warnings/
,,0.0686,realm-java,Fix ErrorProne warnings/
,,0.0686,realm-java,Fix ErrorProne warnings/
,,0.0664,realm-java,Fix ErrorProne warnings/
,,0.0643,realm-java,Fix ErrorProne warnings/
,,0.1317,realm-java,"Fix a socket timeout issue with test server (#5466) * Fix a socket timeout issue with test server If startRealmObjectServer was called twice without stop in between, syncServerChildProcess will be overwritten by a terminated process since the 2nd call of creating sync server will fail and set the syncServerChildProcess. This would make the stopRealmObjectServer get stuck forever. In practice, we need to make sure the server has been stopped before start it. So just treat the ""start"" as a ""restart"" command which will stop the sync server if needed. Thus, no need to stop in tear down functions in java side anymore. * remove useless function/Merge pull request from realm/merge-c9206c-to-master-4.0 Fix merge from c9206c to master-4.0/"
,,0.133,realm-java,"Fix a socket timeout issue with test server (#5466) * Fix a socket timeout issue with test server If startRealmObjectServer was called twice without stop in between, syncServerChildProcess will be overwritten by a terminated process since the 2nd call of creating sync server will fail and set the syncServerChildProcess. This would make the stopRealmObjectServer get stuck forever. In practice, we need to make sure the server has been stopped before start it. So just treat the ""start"" as a ""restart"" command which will stop the sync server if needed. Thus, no need to stop in tear down functions in java side anymore. * remove useless function/Merge pull request from realm/merge-c9206c-to-master-4.0 Fix merge from c9206c to master-4.0/"
,,0.1119,realm-java,"fix SocketTimeout (#5453) * Adding a max retries to the ExponentialBackoff to avoid retrying indefinitely the logout (revoke) query, which causes some tests to block * Binding IOException to ErrorCode.IO_EXCEPTION/Add support for new error codes (#5308)/Merge pull request from realm/merge-39bb67-to-master-4.0 Fix merge from 39bb67 to master-4.0/Merge pull request from realm/merge-e7f8b1-to-master Fix merge from e7f8b1 to master/Update reference URL of Client Error (#5137)/"
,,0.0833,realm-java,"fix SocketTimeout (#5453) * Adding a max retries to the ExponentialBackoff to avoid retrying indefinitely the logout (revoke) query, which causes some tests to block * Binding IOException to ErrorCode.IO_EXCEPTION/"
,,0.0577,realm-java,Merge pull request from realm/merge-7930c8-to-next-major Fix merge from 7930c8 to next-major/Fix module example (#5830)/
,,0.0636,realm-java,Added support for stopping and starting a session (#6135)/
,,0.0838,realm-java,Added support for stopping and starting a session (#6135)/
,,0.0636,realm-java,Added support for stopping and starting a session (#6135)/
,,0.0874,realm-java,Add support for native error category and code (#6379)/
,,0.0751,realm-java,Add support for native error category and code (#6379)/
,,0.0689,realm-java,Add support for native error category and code (#6379)/
,,0.0833,realm-java,Add support for native error category and code (#6379)/
,,0.0772,realm-java,Add support for native error category and code (#6379)/
,,0.0813,realm-java,Add support for native error category and code (#6379)/
,,0.0814,realm-java,Fixed JNI reference not released correctly (#6437)/Add support for native error category and code (#6379)/
,,0.0766,rocksdb,Merge pull request from adamretter/fail-failed-java-test Exit with non-zero status if one or more Java tests fail/Exit with non-zero status if one or more Java tests fail/
,,0.1209,rocksdb,Enable Windows warnings C4307 C4309 C4512 C4701 Enable C4307 operator : integral constant overflow Longs and ints on Windows are 32-bit hence the overflow Enable C4309 conversion : truncation of constant value Enable C4512 class : assignment operator could not be generated Enable C4701 Potentially uninitialized local variable name used/
,,0.1072,rocksdb,"Handle overflow case of rate limiters paramters Summary: When rate_bytes_per_sec * refill_period_us_ overflows, the actual limited rate is very low. Handle this case so the rate will be large. Test Plan: Add a unit test for it. Reviewers: IslamAbdelRahman, andrewkr Reviewed By: andrewkr Subscribers: yiwu, lightmark, leveldb, andrewkr, dhruba Differential Revision:"
,,0.4609,rocksdb,"fix rate limiter to avoid starvation Summary: The current implementation of rate limiter has the possibility to introduce resource starvation when change its limit. This diff aims to fix this problem by consuming request bytes partially. Test Plan: ``` ./rate_limiter_test [==========] Running 4 tests from 1 test case. [----------] Global test environment set-up. [----------] 4 tests from RateLimiterTest [ RUN ] RateLimiterTest.OverflowRate [ OK ] RateLimiterTest.OverflowRate (0 ms) [ RUN ] RateLimiterTest.StartStop [ OK ] RateLimiterTest.StartStop (0 ms) [ RUN ] RateLimiterTest.Rate request size [1 1023], limit 10 KB/sec, actual rate: 10.355712 KB/sec, elapsed 2.00 seconds request size [1 1023], limit 20 KB/sec, actual rate: 19.136564 KB/sec, elapsed 2.00 seconds request size [1 2047], limit 20 KB/sec, actual rate: 20.783976 KB/sec, elapsed 2.10 seconds request size [1 2047], limit 40 KB/sec, actual rate: 39.308144 KB/sec, elapsed 2.10 seconds request size [1 4095], limit 40 KB/sec, actual rate: 40.318349 KB/sec, elapsed 2.20 seconds request size [1 4095], limit 80 KB/sec, actual rate: 79.667396 KB/sec, elapsed 2.20 seconds request size [1 8191], limit 80 KB/sec, actual rate: 81.807158 KB/sec, elapsed 2.30 seconds request size [1 8191], limit 160 KB/sec, actual rate: 160.659761 KB/sec, elapsed 2.20 seconds request size [1 16383], limit 160 KB/sec, actual rate: 160.700990 KB/sec, elapsed 3.00 seconds request size [1 16383], limit 320 KB/sec, actual rate: 317.639481 KB/sec, elapsed 2.50 seconds [ OK ] RateLimiterTest.Rate (22618 ms) [ RUN ] RateLimiterTest.LimitChangeTest [COMPLETE] request size 10 KB, new limit 20KB/sec, refill period 1000 ms [COMPLETE] request size 10 KB, new limit 5KB/sec, refill period 1000 ms [COMPLETE] request size 20 KB, new limit 40KB/sec, refill period 1000 ms [COMPLETE] request size 20 KB, new limit 10KB/sec, refill period 1000 ms [COMPLETE] request size 40 KB, new limit 80KB/sec, refill period 1000 ms [COMPLETE] request size 40 KB, new limit 20KB/sec, refill period 1000 ms [COMPLETE] request size 80 KB, new limit 160KB/sec, refill period 1000 ms [COMPLETE] request size 80 KB, new limit 40KB/sec, refill period 1000 ms [COMPLETE] request size 160 KB, new limit 320KB/sec, refill period 1000 ms [COMPLETE] request size 160 KB, new limit 80KB/sec, refill period 1000 ms [ OK ] RateLimiterTest.LimitChangeTest (5002 ms) [----------] 4 tests from RateLimiterTest (27620 ms total) [----------] Global test environment tear-down [==========] 4 tests from 1 test case ran. (27621 ms total) [ PASSED ] 4 tests. ``` Reviewers: sdong, IslamAbdelRahman, yiwu, andrewkr Reviewed By: andrewkr Subscribers: andrewkr, dhruba, leveldb Differential Revision: overflow case of rate limiters paramters Summary: When rate_bytes_per_sec * refill_period_us_ overflows, the actual limited rate is very low. Handle this case so the rate will be large. Test Plan: Add a unit test for it. Reviewers: IslamAbdelRahman, andrewkr Reviewed By: andrewkr Subscribers: yiwu, lightmark, leveldb, andrewkr, dhruba Differential Revision:"
,,0.4626,rocksdb,"fix rate limiter to avoid starvation Summary: The current implementation of rate limiter has the possibility to introduce resource starvation when change its limit. This diff aims to fix this problem by consuming request bytes partially. Test Plan: ``` ./rate_limiter_test [==========] Running 4 tests from 1 test case. [----------] Global test environment set-up. [----------] 4 tests from RateLimiterTest [ RUN ] RateLimiterTest.OverflowRate [ OK ] RateLimiterTest.OverflowRate (0 ms) [ RUN ] RateLimiterTest.StartStop [ OK ] RateLimiterTest.StartStop (0 ms) [ RUN ] RateLimiterTest.Rate request size [1 1023], limit 10 KB/sec, actual rate: 10.355712 KB/sec, elapsed 2.00 seconds request size [1 1023], limit 20 KB/sec, actual rate: 19.136564 KB/sec, elapsed 2.00 seconds request size [1 2047], limit 20 KB/sec, actual rate: 20.783976 KB/sec, elapsed 2.10 seconds request size [1 2047], limit 40 KB/sec, actual rate: 39.308144 KB/sec, elapsed 2.10 seconds request size [1 4095], limit 40 KB/sec, actual rate: 40.318349 KB/sec, elapsed 2.20 seconds request size [1 4095], limit 80 KB/sec, actual rate: 79.667396 KB/sec, elapsed 2.20 seconds request size [1 8191], limit 80 KB/sec, actual rate: 81.807158 KB/sec, elapsed 2.30 seconds request size [1 8191], limit 160 KB/sec, actual rate: 160.659761 KB/sec, elapsed 2.20 seconds request size [1 16383], limit 160 KB/sec, actual rate: 160.700990 KB/sec, elapsed 3.00 seconds request size [1 16383], limit 320 KB/sec, actual rate: 317.639481 KB/sec, elapsed 2.50 seconds [ OK ] RateLimiterTest.Rate (22618 ms) [ RUN ] RateLimiterTest.LimitChangeTest [COMPLETE] request size 10 KB, new limit 20KB/sec, refill period 1000 ms [COMPLETE] request size 10 KB, new limit 5KB/sec, refill period 1000 ms [COMPLETE] request size 20 KB, new limit 40KB/sec, refill period 1000 ms [COMPLETE] request size 20 KB, new limit 10KB/sec, refill period 1000 ms [COMPLETE] request size 40 KB, new limit 80KB/sec, refill period 1000 ms [COMPLETE] request size 40 KB, new limit 20KB/sec, refill period 1000 ms [COMPLETE] request size 80 KB, new limit 160KB/sec, refill period 1000 ms [COMPLETE] request size 80 KB, new limit 40KB/sec, refill period 1000 ms [COMPLETE] request size 160 KB, new limit 320KB/sec, refill period 1000 ms [COMPLETE] request size 160 KB, new limit 80KB/sec, refill period 1000 ms [ OK ] RateLimiterTest.LimitChangeTest (5002 ms) [----------] 4 tests from RateLimiterTest (27620 ms total) [----------] Global test environment tear-down [==========] 4 tests from 1 test case ran. (27621 ms total) [ PASSED ] 4 tests. ``` Reviewers: sdong, IslamAbdelRahman, yiwu, andrewkr Reviewed By: andrewkr Subscribers: andrewkr, dhruba, leveldb Differential Revision: overflow case of rate limiters paramters Summary: When rate_bytes_per_sec * refill_period_us_ overflows, the actual limited rate is very low. Handle this case so the rate will be large. Test Plan: Add a unit test for it. Reviewers: IslamAbdelRahman, andrewkr Reviewed By: andrewkr Subscribers: yiwu, lightmark, leveldb, andrewkr, dhruba Differential Revision:"
,,0.1041,rocksdb,"Handle overflow case of rate limiters paramters Summary: When rate_bytes_per_sec * refill_period_us_ overflows, the actual limited rate is very low. Handle this case so the rate will be large. Test Plan: Add a unit test for it. Reviewers: IslamAbdelRahman, andrewkr Reviewed By: andrewkr Subscribers: yiwu, lightmark, leveldb, andrewkr, dhruba Differential Revision:"
,,0.1535,rocksdb,"Fix shared lock upgrades Summary: Upgrading a shared lock was silently succeeding because the actual locking code was skipped. This is because if the keys are tracked, it is assumed that they are already locked and do not require locking. Fix this by recording in tracked keys whether the key was locked exclusively or not. Note that lock downgrades are impossible, which is the behaviour we expect. This fixes facebook/mysql-5.6#587. Closes Differential Revision: D4861489 Pulled By: IslamAbdelRahman fbshipit-source-id: 58c7ebe7af098bf01b9774b666d3e9867747d8fd/"
,,0.1576,rocksdb,"Fix shared lock upgrades Summary: Upgrading a shared lock was silently succeeding because the actual locking code was skipped. This is because if the keys are tracked, it is assumed that they are already locked and do not require locking. Fix this by recording in tracked keys whether the key was locked exclusively or not. Note that lock downgrades are impossible, which is the behaviour we expect. This fixes facebook/mysql-5.6#587. Closes Differential Revision: D4861489 Pulled By: IslamAbdelRahman fbshipit-source-id: 58c7ebe7af098bf01b9774b666d3e9867747d8fd/"
,,0.1646,rocksdb,"Fix shared lock upgrades Summary: Upgrading a shared lock was silently succeeding because the actual locking code was skipped. This is because if the keys are tracked, it is assumed that they are already locked and do not require locking. Fix this by recording in tracked keys whether the key was locked exclusively or not. Note that lock downgrades are impossible, which is the behaviour we expect. This fixes facebook/mysql-5.6#587. Closes Differential Revision: D4861489 Pulled By: IslamAbdelRahman fbshipit-source-id: 58c7ebe7af098bf01b9774b666d3e9867747d8fd/"
,,0.162,rocksdb,"Fix shared lock upgrades Summary: Upgrading a shared lock was silently succeeding because the actual locking code was skipped. This is because if the keys are tracked, it is assumed that they are already locked and do not require locking. Fix this by recording in tracked keys whether the key was locked exclusively or not. Note that lock downgrades are impossible, which is the behaviour we expect. This fixes facebook/mysql-5.6#587. Closes Differential Revision: D4861489 Pulled By: IslamAbdelRahman fbshipit-source-id: 58c7ebe7af098bf01b9774b666d3e9867747d8fd/Refactor WriteImpl (pipeline write part 1) Summary: Refactor WriteImpl() so when I plug-in the pipeline write code (which is an alternative approach for WriteThread), some of the logic can be reuse. I split out the following methods from WriteImpl(): * PreprocessWrite() * HandleWALFull() (previous MaybeFlushColumnFamilies()) * HandleWriteBufferFull() * WriteToWAL() Also adding a constructor to WriteThread::Writer, and move WriteContext into db_impl.h. No real logic change in this patch. Closes Differential Revision: D4781014 Pulled By: yiwu-arbug fbshipit-source-id: d45ca18/"
,,0.2068,rocksdb,"rate limit auto-tuning Summary: Dynamic adjustment of rate limit according to demand for background I/O. It increases by a factor when limiter is drained too frequently, and decreases by the same factor when limiter is not drained frequently enough. The parameters for this behavior are fixed in `GenericRateLimiter::Tune`. Other changes: make rate limiters `Env*` configurable for testing track num drain intervals in RateLimiter so we dont have to rely on stats, which may be shared across different DB instances from the ones that share the RateLimiter. Closes Differential Revision: D5858704 Pulled By: ajkr fbshipit-source-id: cc2bac30f85e7f6fd63655d0a6732ef9ed7403b1/"
,,0.2179,rocksdb,"rate limit auto-tuning Summary: Dynamic adjustment of rate limit according to demand for background I/O. It increases by a factor when limiter is drained too frequently, and decreases by the same factor when limiter is not drained frequently enough. The parameters for this behavior are fixed in `GenericRateLimiter::Tune`. Other changes: make rate limiters `Env*` configurable for testing track num drain intervals in RateLimiter so we dont have to rely on stats, which may be shared across different DB instances from the ones that share the RateLimiter. Closes Differential Revision: D5858704 Pulled By: ajkr fbshipit-source-id: cc2bac30f85e7f6fd63655d0a6732ef9ed7403b1/"
,,0.2142,rocksdb,"rate limit auto-tuning Summary: Dynamic adjustment of rate limit according to demand for background I/O. It increases by a factor when limiter is drained too frequently, and decreases by the same factor when limiter is not drained frequently enough. The parameters for this behavior are fixed in `GenericRateLimiter::Tune`. Other changes: make rate limiters `Env*` configurable for testing track num drain intervals in RateLimiter so we dont have to rely on stats, which may be shared across different DB instances from the ones that share the RateLimiter. Closes Differential Revision: D5858704 Pulled By: ajkr fbshipit-source-id: cc2bac30f85e7f6fd63655d0a6732ef9ed7403b1/"
,,0.2204,rocksdb,"rate limit auto-tuning Summary: Dynamic adjustment of rate limit according to demand for background I/O. It increases by a factor when limiter is drained too frequently, and decreases by the same factor when limiter is not drained frequently enough. The parameters for this behavior are fixed in `GenericRateLimiter::Tune`. Other changes: make rate limiters `Env*` configurable for testing track num drain intervals in RateLimiter so we dont have to rely on stats, which may be shared across different DB instances from the ones that share the RateLimiter. Closes Differential Revision: D5858704 Pulled By: ajkr fbshipit-source-id: cc2bac30f85e7f6fd63655d0a6732ef9ed7403b1/"
,,0.1538,rocksdb,"Promote CompactionFilter* accessors to ColumnFamilyOptionsInterface (#3461) Summary: When adding CompactionFilter and CompactionFilterFactory settings to the Java layer, ColumnFamilyOptions was modified directly instead of ColumnFamilyOptionsInterface. This meant that the old-stye Options monolith was left behind. This patch fixes that, by: promoting the CompactionFilter + CompactionFilterFactory setters from ColumnFamilyOptions ColumnFamilyOptionsInterface adding getters in ColumnFamilyOptionsInterface implementing setters in Options implementing getters in both ColumnFamilyOptions and Options adding testcases reusing a test CompactionFilterFactory by moving it to a common location Pull Request resolved: Differential Revision: D13278788 Pulled By: sagar0 fbshipit-source-id: 72602c6eb97dc80734e718abb5e2e9958d3c753b/"
,,0.1606,rocksdb,"Promote CompactionFilter* accessors to ColumnFamilyOptionsInterface (#3461) Summary: When adding CompactionFilter and CompactionFilterFactory settings to the Java layer, ColumnFamilyOptions was modified directly instead of ColumnFamilyOptionsInterface. This meant that the old-stye Options monolith was left behind. This patch fixes that, by: promoting the CompactionFilter + CompactionFilterFactory setters from ColumnFamilyOptions ColumnFamilyOptionsInterface adding getters in ColumnFamilyOptionsInterface implementing setters in Options implementing getters in both ColumnFamilyOptions and Options adding testcases reusing a test CompactionFilterFactory by moving it to a common location Pull Request resolved: Differential Revision: D13278788 Pulled By: sagar0 fbshipit-source-id: 72602c6eb97dc80734e718abb5e2e9958d3c753b/"
,,0.147,rocksdb,"Promote CompactionFilter* accessors to ColumnFamilyOptionsInterface (#3461) Summary: When adding CompactionFilter and CompactionFilterFactory settings to the Java layer, ColumnFamilyOptions was modified directly instead of ColumnFamilyOptionsInterface. This meant that the old-stye Options monolith was left behind. This patch fixes that, by: promoting the CompactionFilter + CompactionFilterFactory setters from ColumnFamilyOptions ColumnFamilyOptionsInterface adding getters in ColumnFamilyOptionsInterface implementing setters in Options implementing getters in both ColumnFamilyOptions and Options adding testcases reusing a test CompactionFilterFactory by moving it to a common location Pull Request resolved: Differential Revision: D13278788 Pulled By: sagar0 fbshipit-source-id: 72602c6eb97dc80734e718abb5e2e9958d3c753b/"
,,0.1443,rocksdb,"Promote CompactionFilter* accessors to ColumnFamilyOptionsInterface (#3461) Summary: When adding CompactionFilter and CompactionFilterFactory settings to the Java layer, ColumnFamilyOptions was modified directly instead of ColumnFamilyOptionsInterface. This meant that the old-stye Options monolith was left behind. This patch fixes that, by: promoting the CompactionFilter + CompactionFilterFactory setters from ColumnFamilyOptions ColumnFamilyOptionsInterface adding getters in ColumnFamilyOptionsInterface implementing setters in Options implementing getters in both ColumnFamilyOptions and Options adding testcases reusing a test CompactionFilterFactory by moving it to a common location Pull Request resolved: Differential Revision: D13278788 Pulled By: sagar0 fbshipit-source-id: 72602c6eb97dc80734e718abb5e2e9958d3c753b/"
,,0.1357,rocksdb,"Option string/map/file can set env from object registry (#5237) Summary: By providing the ""env"" field in any text-based options (i.e., string, map, or file), we can use `NewCustomObject` to deserialize the text value into an actual `Env` object. Currently factory functions for `Env` registered with object registry should only return pointer to static `Env` objects. Thats because `DBOptions::env` is a raw pointer so we cannot easily delegate cleanup. Note I did not add `env` to `db_option_type_info`. It wasnt needed for (de)serialization, and I believe we dont want to do verification on `env`, even by checking name. Thats because the user should be able to copy their DB from Linux to Windows, change envs, and not see an option verification error. Pull Request resolved: Differential Revision: D15056360 Pulled By: siying fbshipit-source-id: 4b5f0b83297a5058f8949ec955dbf27d98d73d7e/"
,,0.0994,rocksdb,Remove global locks from FlushScheduler (#5372) Summary: FlushSchedulers methods are instrumented with debug-time locks to check the scheduler state against a simple container definition. Since the scope of such locks are widened to the entire methods body. The result is that the concurrency tested during testing (in debug mode) is stricter than the concurrency level manifested at runtime (in release mode). The patch reverts this change to reduce the scope of such locks. Pull Request resolved: Differential Revision: D15545831 Pulled By: maysamyabandeh fbshipit-source-id: 01d69191afb1dd807d4bdc990fc74813ae7b5426/
,,0.1325,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1218,rocksdb,Fix crash in JNI getApproximateSizes (#6652) Summary: This change is fixing a crash happening in getApproximateSizes JNI implementation. It also reenables Java test that was crashing most likelly because if this bug. Pull Request resolved: Reviewed By: cheng-chang Differential Revision: D20874865 Pulled By: pdillinger fbshipit-source-id: da95516f15e5df2efe1a4e5690a2ce172cb53f87/Add Java API for rocksdb::CancelAllBackgroundWork() (#6657) Summary: Adding a Java API for rocksdb::CancelAllBackgroundWork() so that the user can call this (when required) before closing the DB. This is to **prevent the crashes when manual compaction is running and the user decides to close the DB**. Calling CancelAllBackgroundWork() seems to be the recommended way to make sure that its safe to close the DB (according to RocksDB FAQ: Pull Request resolved: Reviewed By: cheng-chang Differential Revision: D20896395 Pulled By: pdillinger fbshipit-source-id: 8a8208c10093db09bd35db9af362211897870d96/JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1357,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1167,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1373,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1341,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1294,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1214,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1341,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1262,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1278,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1325,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1294,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1325,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
,,0.1262,rocksdb,JNI direct buffer support for basic operations (#2283) Summary: It is very useful to support direct ByteBuffers in Java. It allows to have zero memory copy and some serializers are using that directly so one do not need to create byte[] array for it. This change also contains some fixes for Windows JNI build. Pull Request resolved: Differential Revision: D19834971 Pulled By: pdillinger fbshipit-source-id: 44173aa02afc9836c5498c592fd1ea95b6086e8e/
