Topic_no,Keywords,Contrib,System,Text
3,"fix, warning, error, compile, merge, update, memory_leak, conflict, breaking_update, pull_request, warn, compilation, leak, compiler, break, desktop_declaration, plan_compile, report, updates_conflict, merge_branch",0.077,conscrypt,"Merge ""Fix classes that implement equals() but not hashCode()."" into dalvik-dev/Fix classes that implement equals() but not hashCode(). See Change-Id: If358af98ccca44c544942b837c25e00e6553e916/"
,,0.0789,conscrypt,"Merge ""Fix classes that implement equals() but not hashCode()."" into dalvik-dev/Fix classes that implement equals() but not hashCode(). See Change-Id: If358af98ccca44c544942b837c25e00e6553e916/"
,,0.0825,conscrypt,"Use KeyManagementException with causes to report errors Before the code would squash excecptions into null values, then turn the values back into KeyManagementException. Now the code preservers the underlying exception as the cause of the KeyManagementException. (cherry picked from commit b6d100ca03dd4c576c6735ce510cecc70d2e6617) Change-Id: Ia833145839578760ed9b49c626e8d4ab86ceacbe/"
,,0.1181,conscrypt,"am 56c62b80: am 6c523c0e: Fix JNI_TRACE * commit 56c62b80c96590bf8c536014fa0a309f68cc8591: Fix JNI_TRACE/am 6c523c0e: Fix JNI_TRACE * commit 6c523c0ef8d66b552b4c15cc87fd7f419181a980: Fix JNI_TRACE/Fix JNI_TRACE The update to BoringSSL broke some of the tracing messages, so fix their formatting to compile correctly with warning on. Change-Id: I6c7a1e0069b61a787d9e00b929a6c4fa4358a063/Quiet ALOGV warnings for unbundled releases The unbundled release unconditionally enabled LOG_NDEBUG features. Check for that define before enabling ALOGV so we dont spam the log. Bug: 17445714 Change-Id: Ideb61d0fce385df356be56a65794d1b738f5a3bb/"
,,0.0929,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0891,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0872,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0872,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0872,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0852,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0872,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0852,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0872,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0891,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.091,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.0872,conscrypt,Merge AOSP version of Conscrypt into mnc-ub-dev This adds support for the latest BoringSSL revision and fixes quite a few bugs. Change-Id: I6eafb04d7c15d3b365191d1fe2fe107308cea894/
,,0.1312,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.1274,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.1351,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.1331,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.13699999999999998,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.1331,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.1351,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.1274,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.1293,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.1331,conscrypt,"Substitute NULL for nullptr Since we dont actually rely on a STL, we dont have to get NULL from, but since were compiling C++11 we get nullptr for free. This also fixes builds against MacOS SDK since it doesnt have available when you explicitly opt out of an STL in the Android.mk module. Test: mmma external/conscrypt; make PRODUCT-sdk_phone_armv7-sdk Change-Id: I54929c7e5c05ec271925f5f3d1896df1661e9b59/"
,,0.0681,conscrypt,Support renegotiation with sockets (#321) Fixes Fixes
,,0.0639,conscrypt,Support renegotiation with sockets (#321) Fixes Fixes
,,0.0702,conscrypt,Support renegotiation with sockets (#321) Fixes Fixes
,,0.0694,conscrypt,Add missing Java 9 methods for ALPN (#339) Fixes
,,0.063,conscrypt,Add missing Java 9 methods for ALPN (#339) Fixes
,,0.0788,conscrypt,"Merge pull request from prbprbprb/typo Fix comment typo./Fix comment typo./Remove CompatibilityCloseMonitor (#613) This is only used on Android and we dont believe its necessary. The ART team has asked that we remove it since the unbundled Android build reaches into libjavacore.so and explicitly references compiled symbol names, which is unreliable and could break in a future release./"
,,0.0783,conscrypt,"Remove CompatibilityCloseMonitor (#613) This is only used on Android and we dont believe its necessary. The ART team has asked that we remove it since the unbundled Android build reaches into libjavacore.so and explicitly references compiled symbol names, which is unreliable and could break in a future release./"
,,0.1087,conscrypt,"Compilation fixes for WIN32./Remove CompatibilityCloseMonitor (#613) This is only used on Android and we dont believe its necessary. The ART team has asked that we remove it since the unbundled Android build reaches into libjavacore.so and explicitly references compiled symbol names, which is unreliable and could break in a future release./"
,,0.0689,frostwire,"[dekstop] Using fmp4, fixed compilation/"
,,0.066,frostwire,[desktop] Fixed desktop compilation/
,,0.0731,frostwire,[android] SoundCloud transfers were not reporting progress correctly due to unknown file size. Fixes Issue
,,0.0706,frostwire,[android] fixing conflicts./[common] Fixed major bug in thread pool creation/
,,0.0795,frostwire,[android] fixed missing remote control update logic path/
,,0.0686,frostwire,[android] NPE on IabHelper./
,,0.0765,frostwire,[android] fixing conflicts./
,,0.0723,frostwire,[android] fixing conflicts./
,,0.0713,frostwire,[android] Killed Screen Rotation lock feature Fragmentation seems to be a problem when it comes to reporting the right orientation of the device at the right moment./
,,0.0751,frostwire,[desktop] fixed compilation issue/
,,0.073,frostwire,[android/desktop] code style warnings fixed/
,,0.0723,frostwire,[desktop] missing compilation fix/
,,0.0664,frostwire,[common] fixed YT javascript parsing/
,,0.0577,frostwire,[common] fixed YT javascript parsing/
,,0.063,frostwire,[common] fixed Monova/
,,0.0751,frostwire,[android/desktop] code style warnings fixed/
,,0.1083,frostwire,[android] avoid ANR on IabHelper::mService.isBillingSupported check/[android] IabHelper NPE/[android] handle possible NPE on IabHelper::querySkyDetails()/[android] NPE fix on IabHelper::queryPurchases()/
,,0.1285,frostwire,[common] Zooqle search fixed/[common] fixed zooqle/[common] avoid possible double creation of size regex pattern in ZooqleSearchResult/[common] Zooqle search fixes/[common] Zooqle search fixed/
,,0.1456,frostwire,"[common] Zooqle search fixed/[common] fixed zooqle/[common] fixed zoogle details regex, still not working/[common] Zooqle search fixes/[common] Zooqle search fixed/"
,,0.0901,frostwire,"[android] issue fix while we move to new billing API/[android] IabHelper error messaging/[android] IabHelper, handle possible disposal triggering NPE/[android] fix Runtime exception bug querying inventory/"
,,0.073,frostwire,[desktop] fixed compilation issue/
,,0.0724,frostwire,[common] fixed compilation issues with some obsolete tests/
,,0.0704,frostwire,[common] fixed compilation issues with some obsolete tests/
,,0.0786,frostwire,[common] Zooqle search fixed/
,,0.0786,frostwire,[common] Zooqle search fixed/
,,0.0807,frostwire,[common] Zooqle search fixed/
,,0.0744,frostwire,[common] Zooqle search fixed/
,,0.0765,frostwire,[common] Zooqle search fixed/
,,0.0807,frostwire,[common] Zooqle search fixed/
,,0.0797,frostwire,[desktop] HTML highlighter reimplemented Fixes bug where previous buggy HTML highlighting would make search result displayer take 2 lines/
,,0.0926,frostwire,"[common] yifi fix, back to /movie/ page/[common/desktop] Yify search fixes/"
,,0.063,frostwire,[android] AdMob loading fixed/
,,0.1006,frostwire,[android] fixes broken android build after SearchResult.uid() removal/
,,0.063,frostwire,"[desktop] cleanup, refactors, deprecation fixes/"
,,0.063,frostwire,"[android] applovin 9.4.2, okhttp client npe fixes/"
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0692,frostwire,[desktop] fix non-atomic ops on volatile fields/[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.11900000000000001,frostwire,[desktop] Fixes Time remaining rendering bug/[desktop] declaration access fixes/[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0723,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0702,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.1102,frostwire,[desktop] declaration access fixes/[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.1101,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0702,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0849,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.1,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0621,frostwire,[desktop] more cleanups and fixes/
,,0.0556,frostwire,[desktop] more cleanups and fixes/
,,0.0577,frostwire,[desktop] more cleanups and fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0723,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0872,frostwire,[desktop] declaration access fixes/[desktop] synchronized on non final fields warnings fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0723,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0849,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0849,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0643,frostwire,[desktop] more cleanups and fixes/
,,0.1061,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0599,frostwire,[desktop] more cleanups and fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.1084,frostwire,[desktop] Fixes Time remaining rendering bug/[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0702,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0765,frostwire,[desktop] declaration access fixes/
,,0.0643,frostwire,[desktop] more cleanups and fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.10400000000000001,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.1061,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.114,frostwire,[desktop] declaration access fixes/[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0744,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0786,frostwire,[desktop] declaration access fixes/
,,0.0723,frostwire,[desktop] declaration access fixes/
,,0.0807,frostwire,[desktop] declaration access fixes/
,,0.0828,frostwire,[desktop] declaration access fixes/
,,0.1101,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1121,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.102,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.102,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1061,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1101,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1081,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1061,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.098,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.10400000000000001,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1061,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.102,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.10400000000000001,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1101,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.102,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1101,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1061,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1101,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.10400000000000001,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1061,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.102,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1084,frostwire,[common] Nyaa search fixed and optimized/[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1081,frostwire,[common/desktop] avoid numeric overflow when dealing with large file sizes jlibtorrent needs a few fixes/
,,0.1703,frostwire,"[common] Torrentz2 and TorLock are magnet based exclusively This will lead to less download torrent errors caused by broken links or Cloudfare errors and keep the DHT performing lots of queries and keeping the keys/buckets with the .torrents alive, the more the merrier/"
,,0.1648,frostwire,"[common] Torrentz2 and TorLock are magnet based exclusively This will lead to less download torrent errors caused by broken links or Cloudfare errors and keep the DHT performing lots of queries and keeping the keys/buckets with the .torrents alive, the more the merrier/"
,,0.163,frostwire,"[common] Torrentz2 and TorLock are magnet based exclusively This will lead to less download torrent errors caused by broken links or Cloudfare errors and keep the DHT performing lots of queries and keeping the keys/buckets with the .torrents alive, the more the merrier/"
,,0.1685,frostwire,"[common] Torrentz2 and TorLock are magnet based exclusively This will lead to less download torrent errors caused by broken links or Cloudfare errors and keep the DHT performing lots of queries and keeping the keys/buckets with the .torrents alive, the more the merrier/"
,,0.1667,frostwire,"[common] Torrentz2 and TorLock are magnet based exclusively This will lead to less download torrent errors caused by broken links or Cloudfare errors and keep the DHT performing lots of queries and keeping the keys/buckets with the .torrents alive, the more the merrier/"
,,0.163,frostwire,"[common] Torrentz2 and TorLock are magnet based exclusively This will lead to less download torrent errors caused by broken links or Cloudfare errors and keep the DHT performing lots of queries and keeping the keys/buckets with the .torrents alive, the more the merrier/"
,,0.078,frostwire,[desktop] varargs warning fixed/
,,0.0926,frostwire,[android] bugfix/[common] SC fixes avoid deserialization NPE when media null resolve url updated multitrack download fixes/
,,0.0599,frostwire,[android] NPE Fix Fixes
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0912,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0849,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0933,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0912,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0912,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0933,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0912,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0933,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0912,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0912,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0975,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.1364,javacpp,"* Add `-undefined dynamic_lookup` option to Mac OS X compiler, making its native linker behave a bit better, plus search for libraries suffixed with "".so"" too/ * Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/ * Fix `NullPointerException` when trying to process an `interface` class/"
,,0.0588,javacpp,* Fix `NullPointerException` when trying to process an `interface` class/
,,0.0545,javacpp,* Fix `NullPointerException` when trying to process an `interface` class/
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0954,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0849,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0912,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0933,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0954,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0849,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0954,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0933,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0849,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0849,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0912,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0933,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.087,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0933,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.0891,javacpp,"* Offer the Apache License, Version 2.0, as a new choice of license, in addition to the GPLv2 with Classpath exception/"
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1343,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1343,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1343,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1343,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.1364,javacpp,* Prevent creating unnecessary garbage when using `Indexer` on simple arrays with a stride of 1 (issue deeplearning4j/nd4j#1063)/
,,0.078,jna,Testsuite fixes./
,,0.063,jna,Testsuite fixes./
,,0.0801,jna,Testsuite fixes./
,,0.078,jna,Testsuite fixes./
,,0.0744,jna,Merge branch master of Pulling master back to get compilation fixes./
,,0.0618,jna,avoid potential overflow git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/
,,0.0673,jna,fix javadoc warning git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/
,,0.1162,jna,"down to two failing tests on w32ce-arm/add docs for lasterror, fix last error failure/fix more tests/down to 24 failures (4 crashes) on w32ce-arm/avoid negative interactions with system install of JNA/avoid deleting native library when it already exists as a file in the classpath/Add option to avoid automatic jar unpacking, with test/"
,,0.0961,jna,"include error string in LastErrorException, if available, update wince native/fix JIRA issue 188/re-enable WCE failing tests, fixes to allow proper phoneME operation w/r/t AWT classes/"
,,0.1867,jna,"add ASL set compatibility to 1.6 by default tweak CreateProcessW definition avoid unicode errors in username on win32 (temp files)/fix line terminators/Merge branch master of Pulling master back to get compilation fixes./fixes for oracle openjdk/fix javadoc warnings/fix load/unload tests/avoid spurious rebuilds/use tls for callback detach indication, avoid potential conflict with last error/Merge pull request from twall/improved_last_error Improved last error/Merge branch improved_last_error of github.com:twall/jna into native-struct-ptr-creation/Merge branch improved_last_error of github.com:twall/jna into native-struct-ptr-creation/make resource prefix available via Platform/fix compile error/improve performance saving last error (per thread)/Merge pull request from twall/optimized-struct-init Avoid superfluous memory allocation when Structure base address provided.../"
,,0.0577,jna,fix javadoc errors/
,,0.0903,jna,Merge pull request from matthiasblaesing/fix_javadoc Fix Javadoc build warnings/Fix Javadoc build warnings/
,,0.0577,jna,fixes
,,0.0599,jna,Fixed PointerTest.testOpaquePointer./
,,0.0704,jna,structure alignment fixes for ARM/fix some more failing tests/down to 24 failures (4 crashes) on w32ce-arm/
,,0.0767,jna,Merge pull request from jglick/master Warnings reported by FindBugs et al./Avoid overwriting string fields within structures when unnecessary; fix failing direct mode tests/
,,0.0621,jna,Fix Sysinfo FieldOrder Fixes:
,,0.1314,jna,"Merge branch master of Pulling master back to get compilation fixes./clean up some function naming fix typo/fix win32 build/use tls for callback detach indication, avoid potential conflict with last error/fix compiler warnings on win64/Merge pull request from twall/improved_last_error Improved last error/improve performance saving last error (per thread)/"
,,0.1005,jna,"fix clobber warning/down to two failing tests on w32ce-arm/add docs for lasterror, fix last error failure/fix some more failing tests/fix load from current module/down to 24 failures (4 crashes) on w32ce-arm/Fix default ABI used in prep_cif call/fix incorrect comment/"
,,0.0996,jna,"include error string in LastErrorException, if available, update wince native/fix compiler longjmp warnings in getChar/setChar/avoid crash with really long strings/add linux x86/amd64 natives, w64 native, fix w64 compiler warnings/"
,,0.1743,jna,"Merge branch master of Pulling master back to get compilation fixes./clean up some function naming fix typo/fix building under newer xcode, fix compiler warning/use tls for callback detach indication, avoid potential conflict with last error/Merge pull request from twall/improved_last_error Improved last error/improve performance saving last error (per thread)/"
,,0.0686,jna,Fix GCC8 warnings/
,,0.0823,jna,Merge pull request from matthiasblaesing/gcc8 Fix GCC8 warnings/
,,0.0807,jna,fix unused parameter warnings under gcc git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/
,,0.151,jna,"Merge branch master of Pulling master back to get compilation fixes./clean up some function naming fix typo/use tls for callback detach indication, avoid potential conflict with last error/Merge pull request from twall/improved_last_error Improved last error/improve performance saving last error (per thread)/"
,,0.0785,jna,fix snprintf on windows/fix amd64 native thread cleanup test/fix 32-bit build under MSVC 10/fix win64 compile warnings/clean up platform tests and error handling on windows/
,,0.0719,jna,"down to two failing tests on w32ce-arm/structure alignment fixes for ARM/add docs for lasterror, fix last error failure/fix more tests/"
,,0.0849,jna,fix snprintf on windows/fix win64 compile warnings/
,,0.0844,jna,Merge pull request from matthiasblaesing/gcc8 Fix GCC8 warnings/
,,0.2336,jna,"Used generics for several existing utility classes, fixing warnings (platform is built with Java 1.5+). Split FileUtils into win32, mac specifics so we can write os-based unit tests just like W32FileMinotorTest. Fixed exception in W32FileMonitor which throws an unhandled exception when disposing because the watched handle is closed. Modified W32FileUtils and ShellAPIs SHFILEOPSTRUCT to support unicode paths. Fixed ShellApi structure alignment introduced in a previous check-in. Readded LastErrorException string constructor. git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/"
,,0.2204,jna,"Used generics for several existing utility classes, fixing warnings (platform is built with Java 1.5+). Split FileUtils into win32, mac specifics so we can write os-based unit tests just like W32FileMinotorTest. Fixed exception in W32FileMonitor which throws an unhandled exception when disposing because the watched handle is closed. Modified W32FileUtils and ShellAPIs SHFILEOPSTRUCT to support unicode paths. Fixed ShellApi structure alignment introduced in a previous check-in. Readded LastErrorException string constructor. git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/"
,,0.0685,jna,Fixes broken platform tests broken on OSX/
,,0.0807,jna,fix compiler warning git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/
,,0.0657,jna,"fix minor javadoc, compile bugs/address issue"
,,0.0621,jna,fix javadoc errors/
,,0.0828,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0694,jna,Fix compilation errors./
,,0.0673,jna,"fix javadoc warnings, move interface method definitions to WinNT from WinBase/"
,,0.1645,jna,fix javadoc warning/add ASL set compatibility to 1.6 by default tweak CreateProcessW definition avoid unicode errors in username on win32 (temp files)/fix javadoc errors/warnings/some fixed and extension for Variant date/Merge pull request from headcrashing/master New Windows Shell API mapping: SHGetSpecialFolderPath/fix some compilation errors/warnings/
,,0.2252,jna,"Used generics for several existing utility classes, fixing warnings (platform is built with Java 1.5+). Split FileUtils into win32, mac specifics so we can write os-based unit tests just like W32FileMinotorTest. Fixed exception in W32FileMonitor which throws an unhandled exception when disposing because the watched handle is closed. Modified W32FileUtils and ShellAPIs SHFILEOPSTRUCT to support unicode paths. Fixed ShellApi structure alignment introduced in a previous check-in. Readded LastErrorException string constructor. git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/"
,,0.0716,jna,Fix compilation errors./
,,0.0636,jna,fix javadoc errors/warnings/Merge pull request from headcrashing/WindowMessages RegisterWindowMessage/
,,0.0556,jna,fix javadoc errors/
,,0.113,jna,"Merge pull request from matthiasblaesing/message_loop_errorhandling Update User32Util#MessageLoopThread to handle error condition of GetMessage/Update User32Util#MessageLoopThread to handle error condition of GetMessage The MSDN advises to check the return value of GetMessage, instead of blindingly spinning the main loop: If GetMessage returns this indicates an error and needs to be handled. By default the MainLoop will exit on an error and log this condition via java.util.logging. Users can choose to subclass MessageLoopThread to customize the behavior./"
,,0.0849,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0673,jna,"fix javadoc warnings, move interface method definitions to WinNT from WinBase/"
,,0.0724,jna,"re-enable WCE failing tests, fixes to allow proper phoneME operation w/r/t AWT classes/"
,,0.0699,jna,"fix 2 failing w32ce tests/re-enable WCE failing tests, fixes to allow proper phoneME operation w/r/t AWT classes/"
,,0.066,jna,fix some more failing tests/down to 24 failures (4 crashes) on w32ce-arm/
,,0.0764,jna,"re-enable WCE failing tests, fixes to allow proper phoneME operation w/r/t AWT classes/"
,,0.0828,jna,fixed tests related to 64-bit alignment/fix more tests/down to 24 failures (4 crashes) on w32ce-arm/
,,0.0764,jna,"re-enable WCE failing tests, fixes to allow proper phoneME operation w/r/t AWT classes/"
,,0.0887,jna,Merge branch master of Pulling master back to get compilation fixes./symlink creation now broken on osx 10.8.3/fix
,,0.0804,jna,Fixes broken platform tests broken on OSX/
,,0.066,jna,fix some more failing tests/down to 24 failures (4 crashes) on w32ce-arm/
,,0.0694,jna,"avoid attempts to write to final fields on J2ME/re-enable WCE failing tests, fixes to allow proper phoneME operation w/r/t AWT classes/"
,,0.0972,jna,Merge branch master of Pulling master back to get compilation fixes./fix load/unload tests/Merge pull request from twall/improved_last_error Improved last error/Merge branch improved_last_error of github.com:twall/jna into native-struct-ptr-creation/make resource prefix available via Platform/avoid inadvertent AWT library load/improve performance saving last error (per thread)/
,,0.068,jna,fix build on w32/avoid spurious errors when common osx frameworks dont actually exist/
,,0.0833,jna,fix deprecation warnings git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/
,,0.2312,jna,"Used generics for several existing utility classes, fixing warnings (platform is built with Java 1.5+). Split FileUtils into win32, mac specifics so we can write os-based unit tests just like W32FileMinotorTest. Fixed exception in W32FileMonitor which throws an unhandled exception when disposing because the watched handle is closed. Modified W32FileUtils and ShellAPIs SHFILEOPSTRUCT to support unicode paths. Fixed ShellApi structure alignment introduced in a previous check-in. Readded LastErrorException string constructor. git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/"
,,0.0758,jna,Merge branch master of Pulling master back to get compilation fixes./fix union sizing/layout issue/
,,0.0664,jna,fixes
,,0.1192,jna,Merge branch master of Pulling master back to get compilation fixes./Merge pull request from twall/improved_last_error Improved last error/Merge branch improved_last_error of github.com:twall/jna into native-struct-ptr-creation/Merge branch improved_last_error of github.com:twall/jna into native-struct-ptr-creation/
,,0.0918,jna,"down to two failing tests on w32ce-arm/fix more tests/down to 24 failures (4 crashes) on w32ce-arm/avoid negative interactions with system install of JNA/Add option to avoid automatic jar unpacking, with test/"
,,0.0689,jna,"remove msvc90 dependency, spurious flags in libffi, fix compiler warnings against dlmalloc.c/"
,,0.08800000000000001,jna,"Merge pull request from twall/x11-demo-fixes X11 demo fixes/patch missing code, remove apparent duplicate code, fix overall compilation/patch missing code, remove apparent duplicate code, fix overall compilation/"
,,0.0897,jna,"Merge pull request from twall/x11-demo-fixes X11 demo fixes/patch missing code, remove apparent duplicate code, fix overall compilation/patch missing code, remove apparent duplicate code, fix overall compilation/"
,,0.0665,jna,down to two failing tests on w32ce-arm/down to 24 failures (4 crashes) on w32ce-arm/Fix default ABI used in prep_cif call/
,,0.0833,jna,Merge branch master of Pulling master back to get compilation fixes./fix some tests under clover/
,,0.0744,jna,structure alignment fixes for ARM/down to 24 failures (4 crashes) on w32ce-arm/
,,0.2312,jna,"Used generics for several existing utility classes, fixing warnings (platform is built with Java 1.5+). Split FileUtils into win32, mac specifics so we can write os-based unit tests just like W32FileMinotorTest. Fixed exception in W32FileMonitor which throws an unhandled exception when disposing because the watched handle is closed. Modified W32FileUtils and ShellAPIs SHFILEOPSTRUCT to support unicode paths. Fixed ShellApi structure alignment introduced in a previous check-in. Readded LastErrorException string constructor. git-svn-id: 2f8a963e-d2e4-e7d0-97bf-ccb7fcea9d80/"
,,0.0704,jna,"include error string in LastErrorException, if available, update wince native/"
,,0.1004,jna,"down to two failing tests on w32ce-arm/add docs for lasterror, fix last error failure/down to 24 failures (4 crashes) on w32ce-arm/"
,,0.1377,jna,"Merge branch master of Pulling master back to get compilation fixes./add test for loading from path with unicode characters (fails on XP, at least)/use a different error code on windows, fixes broken test/fix building under newer xcode, fix compiler warning/Merge pull request from twall/improved_last_error Improved last error/improve performance saving last error (per thread)/"
,,0.0725,jna,Merge branch master of Pulling master back to get compilation fixes./fix file permissions/fix some tests under clover/fix web start deployment path under oracle/
,,0.0628,jna,m68k fixes for signed 8 and 16-bit calls./
,,0.0772,jna,Fix building with Clang for Darwin (OS X 10.6+ and iOS 4.0+)/Rebase on fixed GCC sources/
,,0.0588,jna,abi check fixes and Linux/x32 support/
,,0.0686,jna,Testsuite fix for Solaris vendor compiler/
,,0.0652,jna,"fix javadoc warnings, move interface method definitions to WinNT from WinBase/"
,,0.0664,jna,fix javadoc errors/warnings/
,,0.0643,jna,Fix merge conflicts/
,,0.1062,jna,Merge pull request from Seven10Storage/mod-security Adding security functions and RtlNtStatusToDosError to NtDll/Fixed javadoc/
,,0.0577,jna,Whitespace fixes./
,,0.0686,jna,fix javadoc errors/warnings/
,,0.1071,jna,Merge pull request from Seven10Storage/mod-security Adding security functions and RtlNtStatusToDosError to NtDll/Final changes based on feedback * Changed Privilege constructor * Changed enable interface to return this * Removed try with resources * Fixed javadoc/Fixed javadoc/
,,0.1443,jna,"Unify ACEStructure and ACE_HEADER and return ACE_HEADER[] from ACL Instead of throwing an Exception or skipping ACEs, alle ACEs in an ACL are returned. If the ACE is an unsupported type, the base structure of all ACEs (ACE_HEADER) is returned. Users of the ACEs contained in the ACL need to check the type and downcast appropriately./"
,,0.0628,jna,"fix minor javadoc, compile bugs/"
,,0.0784,jna,fix line terminators/fix javadoc errors/warnings/Merge pull request from headcrashing/master New Windows Shell API mapping: SHGetSpecialFolderPath/
,,0.0577,jna,Fix merge conflicts in
,,0.0556,jna,Fix javadoc errors/
,,0.0828,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0782,jna,fix line terminators/Fixing compilation issues in Kernel32UtilTest/Merge pull request from headcrashing/master New Windows Shell API mapping: SHGetSpecialFolderPath/
,,0.0643,jna,Fix merge conflicts in
,,0.0982,jna,Merge pull request from Seven10Storage/mod-security Adding security functions and RtlNtStatusToDosError to NtDll/Added RtlNtStatusToDosError to NtDll/
,,0.0616,jna,"fix javadoc warnings, move interface method definitions to WinNT from WinBase/correct mappings causing failure on win64/"
,,0.1,jna,Merge pull request from Seven10Storage/mod-security Adding security functions and RtlNtStatusToDosError to NtDll/
,,0.0621,jna,Fix merge conflicts in
,,0.1141,jna,Fixed inheritance of LPVOID and simplified access to CoTaskMem*/
,,0.0673,jna,Fix compilation errors./
,,0.0673,jna,"fix javadoc warnings, move interface method definitions to WinNT from WinBase/"
,,0.0686,jna,fix javadoc warnings/
,,0.0599,jna,fix javadoc errors/
,,0.1197,jna,"Merge pull request from Seven10Storage/mod-security Adding security functions and RtlNtStatusToDosError to NtDll/Fixed incorrect structure write override Also set the SidStart bytes value in the relevant constructor/Merge pull request from matthiasblaesing/fix_javadoc Fix Javadoc build warnings/Fix Javadoc build warnings/Merge pull request from matthiasblaesing/fix_dde Correct struct definition for SECURITY_QUALITY_OF_SERVICE, fixing DDEML Bindings/Correct struct definition for SECURITY_QUALITY_OF_SERVICE, fixing DDEML Bindings/"
,,0.1917,jna,"Merge pull request from matthiasblaesing/fix_windows Fix build/test errors on Windows/Unify ACEStructure and ACE_HEADER and return ACE_HEADER[] from ACL Instead of throwing an Exception or skipping ACEs, alle ACEs in an ACL are returned. If the ACE is an unsupported type, the base structure of all ACEs (ACE_HEADER) is returned. Users of the ACEs contained in the ACL need to check the type and downcast appropriately./Add ACL constructor that tolerates files with unknown ACE types If an ACL contained supported (ACCESS_ALLOWED_ACE_TYPE, ACCESS_DENIED_ACE_TYPE) and unsupported types (i.e. ACCESS_ALLOWED_CALLBACK_ACE_TYPE) the constructor threw an IllegalArgumentException. The extraction logic for the ACEs was moved to the accessor function and unsupported ACEs are skipped./Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/"
,,0.0982,jna,Merge pull request from Seven10Storage/mod-security Adding security functions and RtlNtStatusToDosError to NtDll/Added RtlNtStatusToDosError to NtDll/
,,0.0982,jna,Merge pull request from Seven10Storage/mod-security Adding security functions and RtlNtStatusToDosError to NtDll/Added RtlNtStatusToDosError to NtDll/
,,0.0556,jna,Whitespace fixes./
,,0.0786,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.1101,jna,Fixed inheritance of LPVOID and simplified access to CoTaskMem*/
,,0.1081,jna,Fixed inheritance of LPVOID and simplified access to CoTaskMem*/
,,0.0697,jna,fix line terminators/Merge pull request from headcrashing/master New Windows Shell API mapping: SHGetSpecialFolderPath/
,,0.1121,jna,Fixed inheritance of LPVOID and simplified access to CoTaskMem*/
,,0.0673,jna,"fix javadoc warnings, move interface method definitions to WinNT from WinBase/"
,,0.1081,jna,Fixed inheritance of LPVOID and simplified access to CoTaskMem*/
,,0.0577,jna,fix javadoc errors/
,,0.0697,jna,fix line terminators/Merge pull request from headcrashing/master New Windows Shell API mapping: SHGetSpecialFolderPath/
,,0.0652,jna,"fix javadoc warnings, move interface method definitions to WinNT from WinBase/"
,,0.0599,jna,fix javadoc errors/
,,0.0863,jna,Merge pull request from matthiasblaesing/fix_javadoc Fix Javadoc build warnings/Fix Javadoc build warnings/
,,0.0895,jna,Merge branch improved_last_error of github.com:twall/jna into native-struct-ptr-creation/some fixed and extension for Variant date/fix some compilation errors/warnings/
,,0.0556,jna,fix javadoc errors/
,,0.0652,jna,fix javadoc error/Fix merge conflicts/
,,0.0828,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0599,jna,fix merge conflicts for
,,0.0599,jna,Fix merge conflicts/
,,0.0621,jna,fix merge conflicts for
,,0.0599,jna,Fix merge conflicts/
,,0.0556,jna,fix javadoc errors/
,,0.0813,jna,Merge branch master of Pulling master back to get compilation fixes./fix some tests under clover/
,,0.0673,jna,"fix javadoc warnings, move interface method definitions to WinNT from WinBase/"
,,0.1207,jna,"Merge pull request from SevenOf9Sleeper/correct_compile_errors_in_contrib_projects fixed compile errors/correct compile errors, fixed eclipse project files and created build.xml for contrib projects/"
,,0.0849,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0965,jna,some fixed and extension for Variant date/fix some compilation errors/warnings/
,,0.0744,jna,fix line terminators/fix compilation error/
,,0.1284,jna,"Merge pull request from matthiasblaesing/message_loop_errorhandling Update User32Util#MessageLoopThread to handle error condition of GetMessage/Update User32Util#MessageLoopThread to handle error condition of GetMessage The MSDN advises to check the return value of GetMessage, instead of blindingly spinning the main loop: If GetMessage returns this indicates an error and needs to be handled. By default the MainLoop will exit on an error and log this condition via java.util.logging. Users can choose to subclass MessageLoopThread to customize the behavior./"
,,0.0903,jna,Merge pull request from matthiasblaesing/fix_javadoc Fix Javadoc build warnings/Fix Javadoc build warnings/
,,0.0639,jna,some small bug fixes to TLB generating/
,,0.0828,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0556,jna,fix javadoc errors/
,,0.0556,jna,fix javadoc errors/
,,0.0899,jna,Use unicode escapes to avoid w32 compilation errors/
,,0.1259,jna,"Merge pull request from SevenOf9Sleeper/correct_compile_errors_in_contrib_projects fixed compile errors/correct compile errors, fixed eclipse project files and created build.xml for contrib projects/"
,,0.0556,jna,fix javadoc errors/
,,0.0577,jna,fix javadoc errors/
,,0.0609,jna,[ci skip] Fix conflict in CHANGES.md/
,,0.0609,jna,[ci skip] Fix conflict in CHANGES.md/
,,0.0556,jna,fix javadoc errors/
,,0.0849,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0577,jna,Fix javadoc errors/
,,0.0849,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0849,jna,Merge pull request from matthiasblaesing/javadoc Fix javadoc warnings/Fix javadoc warnings/
,,0.0916,OpenDDS,fixed line endings/fixed line endings/
,,0.1101,OpenDDS,Fri May 27 07:54:36 UTC 2011 Johnny Willemsen * dds/DCPS/InstanceState.cpp: Typo fix * dds/DCPS/OwnershipManager.cpp: Fixed GCC 4.6 warnings/
,,0.1101,OpenDDS,Fri May 27 07:54:36 UTC 2011 Johnny Willemsen * dds/DCPS/InstanceState.cpp: Typo fix * dds/DCPS/OwnershipManager.cpp: Fixed GCC 4.6 warnings/
,,0.1163,OpenDDS,"Thu Jun 16 15:58:16 UTC 2011 Don Hudson * tools/monitor/MonitorDataStorage.cpp: Fixed problem of monitor creating new transport nodes when existing transport nodes are updated by changing manageTransportLink() to lookup an existing transport using label ""Transport"" instead of ""Transport Id"" to match the label used when a transport node is created. Fixed some indentions./"
,,0.1141,OpenDDS,work-in-progress on transport refactoring: adapted the rest of the DDS_no_tests workspace; fixed bugs in wait_for_acks and shutdown/
,,0.1161,OpenDDS,work-in-progress on transport refactoring: adapted the rest of the DDS_no_tests workspace; fixed bugs in wait_for_acks and shutdown/
,,0.1161,OpenDDS,work-in-progress on transport refactoring: adapted the rest of the DDS_no_tests workspace; fixed bugs in wait_for_acks and shutdown/
,,0.1161,OpenDDS,work-in-progress on transport refactoring: adapted the rest of the DDS_no_tests workspace; fixed bugs in wait_for_acks and shutdown/
,,0.1141,OpenDDS,work-in-progress on transport refactoring: adapted the rest of the DDS_no_tests workspace; fixed bugs in wait_for_acks and shutdown/
,,0.1161,OpenDDS,work-in-progress on transport refactoring: adapted the rest of the DDS_no_tests workspace; fixed bugs in wait_for_acks and shutdown/
,,0.1161,OpenDDS,work-in-progress on transport refactoring: adapted the rest of the DDS_no_tests workspace; fixed bugs in wait_for_acks and shutdown/
,,0.1161,OpenDDS,work-in-progress on transport refactoring: adapted the rest of the DDS_no_tests workspace; fixed bugs in wait_for_acks and shutdown/
,,0.0737,OpenDDS,Thu May 24 12:39:03 UTC 2012 Johnny Willemsen * dds/DCPS/Service_Participant.h: * dds/DCPS/Service_Participant.cpp: * examples/DCPS/ishapes/main.cpp: Fixed typos/
,,0.0681,OpenDDS,Tue May 29 11:57:12 UTC 2012 Johnny Willemsen * dds/DCPS/Qos_Helper.h: Fixed typo/
,,0.0673,OpenDDS,Wed May 30 12:52:37 UTC 2012 Johnny Willemsen * dds/DCPS/DomainParticipantFactoryImpl.h: * dds/DCPS/Service_Participant.h: Doxygen fixes/
,,0.0887,OpenDDS,Wed May 30 12:52:37 UTC 2012 Johnny Willemsen * dds/DCPS/DomainParticipantFactoryImpl.h: * dds/DCPS/Service_Participant.h: Doxygen fixes/Thu May 24 12:39:03 UTC 2012 Johnny Willemsen * dds/DCPS/Service_Participant.h: * dds/DCPS/Service_Participant.cpp: * examples/DCPS/ishapes/main.cpp: Fixed typos/
,,0.0974,OpenDDS,"Sun May 13 18:37:35 UTC 2012 Johnny Willemsen * dds/DCPS/GuidUtils.h: Inline methods shouldnt be exported, resolves MinGW warnings on windows * dds/DCPS/Service_Participant.cpp: Fixed windows MinGW warning/"
,,0.0765,OpenDDS,Thu Apr 5 09:33:18 UTC 2012 Johnny Willemsen * dds/DCPS/RTPS/RtpsInfo.cpp: Fixed argument not used warnings/
,,0.1136,OpenDDS,"Thu May 24 12:39:03 UTC 2012 Johnny Willemsen * dds/DCPS/Service_Participant.h: * dds/DCPS/Service_Participant.cpp: * examples/DCPS/ishapes/main.cpp: Fixed typos/Sun May 13 18:37:35 UTC 2012 Johnny Willemsen * dds/DCPS/GuidUtils.h: Inline methods shouldnt be exported, resolves MinGW warnings on windows * dds/DCPS/Service_Participant.cpp: Fixed windows MinGW warning/"
,,0.1023,OpenDDS,Thu Jun 14 11:02:17 UTC 2012 Johnny Willemsen * dds/DCPS/DataReaderImpl.cpp: Fixed compile error/
,,0.0765,OpenDDS,Wed Jun 13 06:55:46 UTC 2012 Johnny Willemsen * dds/DCPS/Service_Participant.cpp: Fixed warning/
,,0.0903,OpenDDS,Thu Aug 16 09:08:54 UTC 2012 Johnny Willemsen * dds/InfoRepo/FederatorManagerImpl.cpp: Fixed C++11 warning/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.2266,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/"
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.2231,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/"
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.2248,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/"
,,0.1808,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/fixed bugs in locking and reactor interactions/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1407,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/improved error indication from specific transport to framework/"
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.2214,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/"
,,0.2248,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/"
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1762,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/improved error indication from specific transport to framework/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1658,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/improved error indication from specific transport to framework/
,,0.1339,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/"
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.2465,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/improved error indication from specific transport to framework/fixed bugs in locking and reactor interactions/fixed logging and use of local addr during connect/"
,,0.231,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/improved error indication from specific transport to framework/"
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1936,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/fixed bugs in locking and reactor interactions/fixed logging and use of local addr during connect/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.2214,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/"
,,0.128,OpenDDS,"more work in progress, udp transport compiles, fixed locking in TransportClient/"
,,0.1638,OpenDDS,use a Priority typedef instead of CORBA::Long inside the transport directory; made active/passive part of the PriorityKey comparison in order to fix a bug where both sides were passive/
,,0.0723,OpenDDS,Updates to get around compile failures using GMF > 2.2.2 (see RT 15037)/
,,0.0702,OpenDDS,Updates to get around compile failures using GMF > 2.2.2 (see RT 15037)/
,,0.0681,OpenDDS,Updates to get around compile failures using GMF > 2.2.2 (see RT 15037)/
,,0.066,OpenDDS,Updates to get around compile failures using GMF > 2.2.2 (see RT 15037)/
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1176,OpenDDS,"Multicast Transport work possible deadlocking in MulticastTransport.cpp, added logging to trace assoc failures throughout multicast, removed an unused TransportClient* arg in UdpTransport/"
,,0.1066,OpenDDS,"Added links_lock_ to stop contention during connect_datalink causing multiple datalink instances to be created/working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.172,OpenDDS,"Multicast Transport work possible deadlocking in MulticastTransport.cpp, added logging to trace assoc failures throughout multicast, removed an unused TransportClient* arg in UdpTransport/working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1618,OpenDDS,UdpTransport updated to remove deadlock scenario between connections_lock_ and DataReaderImpl::publication_handle_lock_ as well as TransportClient::use_datalink_i to use a local copy of the RepoId for remote instead of the reference passed in to alleviate memory access violation caused when stop_accepting_or_connecting deletes callback but use_datalink_i still requires the RepoId to call transport_assoc_done/
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.2616,OpenDDS,"Multicast Transport work possible deadlocking in MulticastTransport.cpp, added logging to trace assoc failures throughout multicast, removed an unused TransportClient* arg in UdpTransport/removed FAILED in debug statements/UdpTransport updated to remove deadlock scenario between connections_lock_ and DataReaderImpl::publication_handle_lock_ as well as TransportClient::use_datalink_i to use a local copy of the RepoId for remote instead of the reference passed in to alleviate memory access violation caused when stop_accepting_or_connecting deletes callback but use_datalink_i still requires the RepoId to call transport_assoc_done/working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1238,OpenDDS,"removed FAILED in debug statements/working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1296,OpenDDS,"removed FAILED in debug statements/working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.2631,OpenDDS,"Multicast Transport work possible deadlocking in MulticastTransport.cpp, added logging to trace assoc failures throughout multicast, removed an unused TransportClient* arg in UdpTransport/UdpTransport updated to remove deadlock scenario between connections_lock_ and DataReaderImpl::publication_handle_lock_ as well as TransportClient::use_datalink_i to use a local copy of the RepoId for remote instead of the reference passed in to alleviate memory access violation caused when stop_accepting_or_connecting deletes callback but use_datalink_i still requires the RepoId to call transport_assoc_done/working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1183,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1194,OpenDDS,"Multicast Transport work possible deadlocking in MulticastTransport.cpp, added logging to trace assoc failures throughout multicast, removed an unused TransportClient* arg in UdpTransport/"
,,0.2631,OpenDDS,"Multicast Transport work possible deadlocking in MulticastTransport.cpp, added logging to trace assoc failures throughout multicast, removed an unused TransportClient* arg in UdpTransport/UdpTransport updated to remove deadlock scenario between connections_lock_ and DataReaderImpl::publication_handle_lock_ as well as TransportClient::use_datalink_i to use a local copy of the RepoId for remote instead of the reference passed in to alleviate memory access violation caused when stop_accepting_or_connecting deletes callback but use_datalink_i still requires the RepoId to call transport_assoc_done/working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.2332,OpenDDS,"removed FAILED in debug statements/UdpTransport updated to remove deadlock scenario between connections_lock_ and DataReaderImpl::publication_handle_lock_ as well as TransportClient::use_datalink_i to use a local copy of the RepoId for remote instead of the reference passed in to alleviate memory access violation caused when stop_accepting_or_connecting deletes callback but use_datalink_i still requires the RepoId to call transport_assoc_done/working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.1204,OpenDDS,"working to fix deadlock during association between reactor lock and transportclient lock_, ACE_DEBUG comments abound/"
,,0.0737,OpenDDS,Compile fail fixes/fix build problems/
,,0.0895,OpenDDS,Fixed warnings in FACE/safety code/
,,0.0689,OpenDDS,"Fixed fuzz, attempted to fix errors on clang and older GCC versions./"
,,0.0936,OpenDDS,Fixed warnings in FACE/safety code/
,,0.078,OpenDDS,Fixed warnings from clang./
,,0.0798,OpenDDS,Compile fail fixes/fix build problems/
,,0.0599,OpenDDS,fixed fuzz error/
,,0.0801,OpenDDS,fixed warning/
,,0.0957,OpenDDS,Fixed warnings in FACE/safety code/
,,0.0744,OpenDDS,Demarshalling strings in union now use proper String_var. Fixed test./Fixed build errors./
,,0.0588,OpenDDS,Fix wide-character builds./More fixes for localhost./
,,0.0673,OpenDDS,fix compile failure/
,,0.0607,OpenDDS,Correct %C usage in ACE_DEBUG/fix compile failure/
,,0.0697,OpenDDS,Merge pull request from objectcomputing/writer_reader_impl_templates Fix errors in no BITS builds and java builds./Fix built-in-topics builds./
,,0.0956,OpenDDS,"Fixed compile error on vc9 32bit, due to ambiguity in TAOs sequence var. Added our own SequenceVar./merge and fix tests/"
,,0.1423,OpenDDS,"Limit number of retries to 40 for timedout writes to avoid infinite loop/Fix warnings about missing initializer for Message deci/Merge pull request from objectcomputing/ts_api_updates_redmine_2334 Fixed problem with publisher not using send_counter in normal send, thus.../Fixed problem with publisher not using send_counter in normal send, thus causing duplication of 0 and 1 in messages./Add processing of timeout in send_message to report an error if less than a reliable writers max_blocking_time as well as add cases to Reliability test to verify success/error combinations/Fixed warning in FACE Reliability test, uses the same IDL as the messenger test/"
,,0.1157,OpenDDS,"Demarshalling strings in union now use proper String_var. Fixed test./Added missing headers from ZeroCopyInfoSeq_T.h absence. Added CORBA::String_var setter to unions to avoid implicit conversion. Fixed SampleInfoSeq constructors./Fixed compiler warnings in langmap_generator.cpp./Removed workaround for older Visual C++, no longer needed./Merge remote branch upstream/master into face-conf-test-suite Conflicts: dds/CORBA/tao/BasicSequences.cpp dds/CORBA/tao/ORB_Misc.cpp dds/CORBA/tao/OctetSeqC.cpp dds/CORBA/tao/SystemException.cpp/Generator now typedefs _out to reference for fixed size types./Merge pull request from mitza-oci/idl-fixed-FACE Support for IDL fixed data type in FACE code generation./Continued support for fixed IDL data type./Support for IDL fixed data type in FACE code generation./Fixed compile error on vc9 32bit, due to ambiguity in TAOs sequence var. Added our own SequenceVar./"
,,0.0879,OpenDDS,Merge pull request from objectcomputing/writer_reader_impl_templates Fix build error for safety profile./
,,0.0556,OpenDDS,Fixes for removed sequences./
,,0.0984,OpenDDS,Merge pull request from objectcomputing/writer_reader_impl_templates Replace standard containers with OPENDDS variants to avoid calls to global new./
,,0.0669,OpenDDS,Merge pull request from mitza-oci/master Build fixes/
,,0.0809,OpenDDS,Merge pull request from objectcomputing/writer_reader_impl_templates Fix build error for safety profile./Fix build errors./
,,0.0965,OpenDDS,Merge pull request from objectcomputing/writer_reader_impl_templates Replace standard containers with OPENDDS variants to avoid calls to global new./
,,0.0965,OpenDDS,Merge pull request from objectcomputing/writer_reader_impl_templates Replace standard containers with OPENDDS variants to avoid calls to global new./
,,0.0974,OpenDDS,ReplayerImpl to call stop_associating during removal of associations/Merge pull request from objectcomputing/writer_reader_impl_templates Fix errors in no BITS builds and java builds./Fixes for no builtin topics builds./
,,0.1065,OpenDDS,Fix unused argument./Merge pull request from objectcomputing/writer_reader_impl_templates Replace standard containers with OPENDDS variants to avoid calls to global new./
,,0.0965,OpenDDS,Merge pull request from objectcomputing/writer_reader_impl_templates Replace standard containers with OPENDDS variants to avoid calls to global new./
,,0.1105,OpenDDS,"Fix callback to pass correct max message size parameter/Fix method definitions in header/Merge pull request from objectcomputing/ts_api_updates_redmine_2334 TS API Update: Callback If application returns error, log it/TS API Update: Callback If application returns error, log it/Merge pull request from objectcomputing/ts_api_updates_redmine_2334 Ts api updates redmine 2334 Add virtual destructor and fix compiler warnings./Add Dcps_debug_level guards around logging. Add typedefs for Entitiess maps/Merge remote branch upstream/master into face-conf-test-suite Conflicts: dds/CORBA/tao/BasicSequences.cpp dds/CORBA/tao/ORB_Misc.cpp dds/CORBA/tao/OctetSeqC.cpp dds/CORBA/tao/SystemException.cpp/Add processing of timeout in send_message to report an error if less than a reliable writers max_blocking_time as well as add cases to Reliability test to verify success/error combinations/"
,,0.0724,OpenDDS,Define TAOLIB_ERROR and TAOLIB_DEBUG to ACELIB_ERROR and ACELIB_DEBUG./Define TAOLIB_ERROR and TAOLIB_DEBUG to fix errors in safety build./
,,0.0744,OpenDDS,Define TAOLIB_ERROR and TAOLIB_DEBUG to ACELIB_ERROR and ACELIB_DEBUG./Define TAOLIB_ERROR and TAOLIB_DEBUG to fix errors in safety build./
,,0.1536,OpenDDS,Merge pull request from mitza-oci/master Fixed warning due to implicit noexcept on vc14./Fixed warning due to implicit noexcept on vc14./
,,0.1502,OpenDDS,Merge pull request from mitza-oci/master Fixed warning due to implicit noexcept on vc14./Fixed warning due to implicit noexcept on vc14./
,,0.1181,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.122,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.126,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1181,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.12,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.124,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.12,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.122,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1161,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.12,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1238,OpenDDS,Merge pull request from objectcomputing/ipv6_changes Ipv6 changes fixes for proper type conversions for wchar builds/Fix type conversions for wchar builds/
,,0.1238,OpenDDS,Merge pull request from objectcomputing/ipv6_changes Ipv6 changes fixes for proper type conversions for wchar builds/Fix type conversions for wchar builds/
,,0.1277,OpenDDS,Merge pull request from objectcomputing/ipv6_changes Ipv6 changes fixes for proper type conversions for wchar builds/Fix type conversions for wchar builds/
,,0.0813,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/"
,,0.0916,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/"
,,0.0792,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/"
,,0.078,OpenDDS,fix compile error/
,,0.078,OpenDDS,fix compile error/
,,0.10400000000000001,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for SunCC./Warnings fixes for SunCC./
,,0.1061,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for SunCC./Warnings fixes for SunCC./
,,0.1181,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1181,OpenDDS,Merge pull request from objectcomputing/ts_api_updates_redmine_2334 Fix compiler warning about missing initializer in SampleInfo/Fix compiler warning about missing initializer in SampleInfo/
,,0.0673,OpenDDS,fix logging for wchar builds/
,,0.0673,OpenDDS,fix logging for wchar builds/
,,0.0982,OpenDDS,"Merge pull request from iamtheschmitzer/master Fix warnings, including checked iterator/Fix warnings/"
,,0.1355,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for SunCC./Warnings fixes for SunCC./Fix warnings/
,,0.1181,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1808,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for SunCC./Warnings fixes for SunCC./Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.0874,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/"
,,0.1141,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.10400000000000001,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for SunCC./Warnings fixes for SunCC./
,,0.1263,OpenDDS,Merge pull request from mitza-oci/master Fixes for safety profile after yesterdays change to generated code./Fixes for safety profile after yesterdays change to generated code./
,,0.1432,OpenDDS,"Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./Merge pull request from iamtheschmitzer/master Fix Checked Iterators warning C4996 for zero copy sequence, other warnings/"
,,0.1742,OpenDDS,Merge pull request from objectcomputing/ipv6_changes Ipv6 changes fixes for proper type conversions for wchar builds/Fix type conversions for wchar builds/Merge pull request from objectcomputing/ipv6_updates Fix for wchar builds/Fix for wchar builds/Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./
,,0.1244,OpenDDS,Merge pull request from objectcomputing/datalink-pubsub-maps Use find to avoid insertion into assoc_by_local_ if it is not presentÖ/Use find to avoid insertion into assoc_by_local_ if it is not presently in the collection/Fixed hex conversion errors. Fixed multiple calls to write_subscription_data and write_publication-data./
,,0.1682,OpenDDS,"Merge pull request from objectcomputing/ipv6_updates Do not log errors in helper function, rather log warnings and let calÖ/Fix ACE_ERROR_RETURN call/Do not log errors in helper function, rather log warnings and let calling code determine how to deal with failures/Fix socket name in refactored method/Fix variable name in refactored method/Refactor open_dual_stack_socket into one function to open the appropriate type of socket for the configuration. Fix issues with IPV6 builds in the transport tests to use correct sockets and address types./Fix ttl parameter type/size for linux/Fix typo and format specifier/Merge pull request from objectcomputing/ipv6_updates Bug and compilation error fixes./Bug and compilation error fixes./Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Fix typo./Fix unused map argument compiler warning/Fix issues with IPV6 enabled builds on Windows./"
,,0.1726,OpenDDS,Merge pull request from objectcomputing/rtps_msg_lifespan_updates Working to resolve issues in the rtps transport layer (RtpsUdpDataLink) to deal with processing acknowledgements and lifetimes of transport queue elements (and derived) up to WriteDataContainer and DataSampleElements. Moving away from handling the processing of acknowledgements in a timer based solution into a direct processing solution./
,,0.0644,OpenDDS,Revert changes to DataLink to avoid test failures./Fixed hex conversion errors. Fixed multiple calls to write_subscription_data and write_publication-data./
,,0.122,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1933,OpenDDS,Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Merge pull request from objectcomputing/static_discovery_no_bit Fix bug in how callbacks are tracked and invoked./Fix issues with IPV6 enabled builds on Windows./Fix bug in how callbacks are tracked and invoked./Fix deadlocks from scheduling timer while holding lock./Fixed hex conversion errors. Fixed multiple calls to write_subscription_data and write_publication-data./Fix compiler warnings on multimap insert for sun os/Merge pull request from objectcomputing/rtps_msg_lifespan_updates Working to resolve issues in the rtps transport layer (RtpsUdpDataLink) to deal with processing acknowledgements and lifetimes of transport queue elements (and derived) up to WriteDataContainer and DataSampleElements. Moving away from handling the processing of acknowledgements in a timer based solution into a direct processing solution./
,,0.1557,OpenDDS,"Refactor open_dual_stack_socket into one function to open the appropriate type of socket for the configuration. Fix issues with IPV6 builds in the transport tests to use correct sockets and address types./Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Merge pull request from mitza-oci/static-disc-compile-fixes Fixed compile problems in certain configurations (wchar, nobits, etc.Ö/Fixed compile problems in certain configurations (wchar, nobits, etc.) due to recent changes for static discovery./"
,,0.2787,OpenDDS,"Merge pull request from objectcomputing/ipv6_changes Fix issue where locator was being improperly set due to local_addressÖ/Fix issue where locator was being improperly set due to local_address_string being non empty, but only populated with the updated port number and no address. Need to detect this scenario and populate locator with appropriate interfaces./Merge pull request from objectcomputing/ipv6_changes Ipv6 changes fixes for proper type conversions for wchar builds/Fix type conversions for wchar builds/Merge pull request from objectcomputing/ipv6_updates Fix for wchar builds/Fix for wchar builds/Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/Fix warnings. Require optional arg to DomainParticipantImpl::get_handle so it does not hide ACE_Event_Handlers version./Merge pull request from mitza-oci/static-disc-compile-fixes Fixed compile problems in certain configurations (wchar, nobits, etc.Ö/Fixed compile problems in certain configurations (wchar, nobits, etc.) due to recent changes for static discovery./"
,,0.1965,OpenDDS,"Fix typo and format specifier/Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Merge pull request from objectcomputing/static_discovery_no_bit Fix bug in how callbacks are tracked and invoked./Fix issues with IPV6 enabled builds on Windows./Fix bug in how callbacks are tracked and invoked./Merge pull request from objectcomputing/datalink-pubsub-maps Fix issue with uninitialized bytes in RepoId in map/Fix issue with uninitialized bytes in RepoId in map/Remove additional durability debugging information that is no longer necessary/Remove durability debugging information that is no longer necessary/Updated for pre-standard SunCC standard library, and fixed a warning./Fix deadlocks from scheduling timer while holding lock./Fixed hex conversion errors. Fixed multiple calls to write_subscription_data and write_publication-data./Remove unused iterator to fix compiler warning./Avoid calling release_acked on the send buffer multiple times for same sequence number (sns may appear multiple times in multimap due to fragmentation, but all will be acknowledged at the same time. release_acked need only be called once per sequence number\)/Fix compiler warnings on multimap insert for sun os/Merge pull request from objectcomputing/rtps_msg_lifespan_updates Working to resolve issues in the rtps transport layer (RtpsUdpDataLink) to deal with processing acknowledgements and lifetimes of transport queue elements (and derived) up to WriteDataContainer and DataSampleElements. Moving away from handling the processing of acknowledgements in a timer based solution into a direct processing solution./"
,,0.0738,OpenDDS,Merge pull request from mitza-oci/master Fixes to build static discovery changes on Visual C++/Avoid IDL sequence typedefs equivalent to those in other modules./
,,0.1257,OpenDDS,Merge pull request from objectcomputing/ipv6_changes Ipv6 changes fixes for proper type conversions for wchar builds/Fix type conversions for wchar builds/
,,0.1121,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./Fix some logging. Fix sizing for formateNameForDump method/
,,0.0792,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/"
,,0.1576,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/Merge pull request from objectcomputing/recorder_replayer_updates Fix compiler error/Fix compiler error/"
,,0.1528,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/Fix warnings. Require optional arg to DomainParticipantImpl::get_handle so it does not hide ACE_Event_Handlers version./"
,,0.0929,OpenDDS,"Prefix parameter with DCPS, always check for CDR alignment, fix fuzz, test inclusion/Bug fixes, RtiSerialization test/Merge pull request from mitza-oci/master Minor fixes to logging and a test perl script./Fixed wchar logging bugs./"
,,0.1754,OpenDDS,Downgrade timeout from an error to information./Merge pull request from objectcomputing/rtps_msg_lifespan_updates Working to resolve issues in the rtps transport layer (RtpsUdpDataLink) to deal with processing acknowledgements and lifetimes of transport queue elements (and derived) up to WriteDataContainer and DataSampleElements. Moving away from handling the processing of acknowledgements in a timer based solution into a direct processing solution./
,,0.1773,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/Fix warnings. Require optional arg to DomainParticipantImpl::get_handle so it does not hide ACE_Event_Handlers version./Merge pull request from objectcomputing/datalink-pubsub-maps Fix logging/Fix logging/"
,,0.1425,OpenDDS,Merge pull request from mitza-oci/master Fixes for safety profile after yesterdays change to generated code./Fixes for safety profile after yesterdays change to generated code./
,,0.0989,OpenDDS,Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Fix unused map argument compiler warning/
,,0.1248,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./Fixed out-of-order destruction by moving ReactorRunner to PeerDiscovery./
,,0.1204,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Fixed out-of-order destruction by moving ReactorRunner to PeerDiscovery./
,,0.1026,OpenDDS,Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Fix unused map argument compiler warning/
,,0.2121,OpenDDS,"Merge pull request from objectcomputing/ipv6_updates Fix issues with IPV6 enabled builds on Windows./Fix unused map argument compiler warning/Fix unused arg compiler warning./Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/Fix warning/Merge pull request from mitza-oci/master Fixes to build static discovery changes on Visual C++/Avoid IDL sequence typedefs equivalent to those in other modules./"
,,0.0751,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/"
,,0.0772,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/"
,,0.1792,OpenDDS,"Prefix parameter with DCPS, always check for CDR alignment, fix fuzz, test inclusion/Add to command line, fix parsing/Merge pull request from mitza-oci/static-disc-compile-fixes Fixed compile problems in certain configurations (wchar, nobits, etc.Ö/Fixed compile problems in certain configurations (wchar, nobits, etc.) due to recent changes for static discovery./"
,,0.1082,OpenDDS,"Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/ReplayerImpl to call stop_associating during removal of associations/"
,,0.1709,OpenDDS,Merge pull request from objectcomputing/rtps_msg_lifespan_updates Working to resolve issues in the rtps transport layer (RtpsUdpDataLink) to deal with processing acknowledgements and lifetimes of transport queue elements (and derived) up to WriteDataContainer and DataSampleElements. Moving away from handling the processing of acknowledgements in a timer based solution into a direct processing solution./
,,0.0588,OpenDDS,"Bug fixes, RtiSerialization test/"
,,0.1016,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for SunCC./Warnings fixes for SunCC./MSVC14 support requires workaround to avoid compiler-generated copy ctor and assignment for a few classes/
,,0.0744,OpenDDS,"Fix Checked Iterators warning C4996 for zero copy sequence, other warnings/"
,,0.124,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1161,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1181,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1181,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1692,OpenDDS,Merge pull request from objectcomputing/rtps_msg_lifespan_updates Working to resolve issues in the rtps transport layer (RtpsUdpDataLink) to deal with processing acknowledgements and lifetimes of transport queue elements (and derived) up to WriteDataContainer and DataSampleElements. Moving away from handling the processing of acknowledgements in a timer based solution into a direct processing solution./
,,0.1861,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for SunCC./Warnings fixes for SunCC./Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.0838,OpenDDS,"Prefix parameter with DCPS, always check for CDR alignment, fix fuzz, test inclusion/Merge pull request from mitza-oci/master Minor fixes to logging and a test perl script./Fixed wchar logging bugs./"
,,0.179,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for SunCC./Warnings fixes for SunCC./Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.1216,OpenDDS,Merge pull request from mitza-oci/master Removed workarounds for GCC 3.3.x bugs./Removed workarounds for GCC 3.3.x bugs./Merge pull request from mitza-oci/master Fixes for safety profile after yesterdays change to generated code./Fixes for safety profile after yesterdays change to generated code./
,,0.1709,OpenDDS,Merge pull request from objectcomputing/rtps_msg_lifespan_updates Working to resolve issues in the rtps transport layer (RtpsUdpDataLink) to deal with processing acknowledgements and lifetimes of transport queue elements (and derived) up to WriteDataContainer and DataSampleElements. Moving away from handling the processing of acknowledgements in a timer based solution into a direct processing solution./
,,0.0923,OpenDDS,"Merge pull request from iamtheschmitzer/master Fix warnings, including checked iterator/Fix warnings/"
,,0.2694,OpenDDS,"Merge pull request from iamtheschmitzer/master Fix Checked Iterators warning C4996 for zero copy sequence, other warnings/Fix Checked Iterators warning C4996 for zero copy sequence, other warnings/Merge pull request from iamtheschmitzer/master Warning fixes, updates for release/Fix warnings. Require optional arg to DomainParticipantImpl::get_handle so it does not hide ACE_Event_Handlers version./Merge pull request from objectcomputing/rtps_msg_lifespan_updates Working to resolve issues in the rtps transport layer (RtpsUdpDataLink) to deal with processing acknowledgements and lifetimes of transport queue elements (and derived) up to WriteDataContainer and DataSampleElements. Moving away from handling the processing of acknowledgements in a timer based solution into a direct processing solution./"
,,0.1161,OpenDDS,Merge pull request from mitza-oci/master Warnings fixes for Visual C++./Warnings fixes for Visual C++./
,,0.0599,OpenDDS,"Merge pull request from iamtheschmitzer/master LynxOS Fixes for FooTest5, RtiSerialization, StaticDiscoveryReconnect, MultiDiscovery/"
,,0.0577,OpenDDS,"Merge pull request from iamtheschmitzer/master LynxOS Fixes for FooTest5, RtiSerialization, StaticDiscoveryReconnect, MultiDiscovery/"
,,0.0621,OpenDDS,"Merge pull request from iamtheschmitzer/master LynxOS Fixes for FooTest5, RtiSerialization, StaticDiscoveryReconnect, MultiDiscovery/"
,,0.0759,OpenDDS,fix compile error/
,,0.1081,OpenDDS,"Merge pull request from huangminghuang/master Fixes for Java bindings docs and configure, and build on Mac OS X El Capitan/Fixed unused variable warning./"
,,0.0673,OpenDDS,Merge pull request from jwillemsen/master Add guard include to fix issue
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.1082,OpenDDS,Merge branch master into coverity_issues_fixes/Merge pull request from huangminghuang/RcHandle_fix Fix multiple definition problem in MSVC/Fix MSVC compile error/Avoid implicit conversion from pointer to RcHandle/
,,0.0673,OpenDDS,Merge pull request from jwillemsen/master Add guard include to fix issue
,,0.0818,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0798,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.1026,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0838,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0758,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0778,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0798,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0758,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0798,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0838,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0857,OpenDDS,Merge pull request from huangminghuang/RcHandle_fix Some fixes for RcHandle/Fix RcHandle usage for ishapes Conflicts: examples/DCPS/ishapes/main.cpp/
,,0.0778,OpenDDS,Merge pull request from mitza-oci/ishapes-cxx11-v2 configure and MPC support for C++11 version of ishapes; fixed a bug/
,,0.0673,OpenDDS,Merge pull request from jwillemsen/master Add guard include to fix issue
,,0.0673,OpenDDS,Merge pull request from jwillemsen/master Add guard include to fix issue
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.1281,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CID: 711980. Check return value from ACE_OS::mkdir to make sure directory was able to be created./Merge pull request from jwillemsen/master Add guard include to fix issue some include problems and missing versioned namespace macros now we merged everything to master * dds/DCPS/ReplayerImpl.cpp: * dds/DCPS/ReplayerImpl.h: * dds/idl/ts_generator.cpp:/Use global scoping to fix namespace compiler test * dds/idl/ts_generator.cpp:/
,,0.0597,OpenDDS,Fixed version number/
,,0.0673,OpenDDS,Merge pull request from jwillemsen/master Add guard include to fix issue
,,0.0948,OpenDDS,Merge pull request from objectcomputing/reliable_time_based_filter Time Based Filter QoS (support for reliable readers) Issue SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.0867,OpenDDS,"Rework again includes, still causes problems in some older builds * dds/DCPS/DomainParticipantImpl.cpp: * dds/DCPS/RecorderImpl.cpp: * dds/DCPS/ReplayerImpl.h: * dds/DCPS/WriterDataSampleList.h: * tests/DCPS/LivelinessTest/publisher.cpp:/Merge pull request from jwillemsen/master Add guard include to fix issue some include problems and missing versioned namespace macros now we merged everything to master * dds/DCPS/ReplayerImpl.cpp: * dds/DCPS/ReplayerImpl.h: * dds/idl/ts_generator.cpp:/"
,,0.1034,OpenDDS,"Merge pull request from huangminghuang/RcHandle_fix Fix multiple definition problem in MSVC/Fix some Coverity problems/Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Addressing Coverity Scan CID: 712159 . If input is correctly formatted, when leaving the loop with index of 8, encoded[i] should never be the which is used for padding in the format. Can safeguard against the out-of-bounds read of dec[i] by adding a placeholder in dec at that position and cause minimal overhead./Avoid implicit conversion from pointer to RcHandle/"
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.1266,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CID: 401684. Might as well check to make sure that mb is in fact not-null before calling release./Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0823,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0673,OpenDDS,Merge pull request from jwillemsen/master Add guard include to fix issue
,,0.0776,OpenDDS,Merge branch master into coverity_issues_fixes/Merge pull request from huangminghuang/RcHandle_fix Fix multiple definition problem in MSVC/Fix multiple definition problem in MSVC/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.1146,OpenDDS,Avoid implicit conversion from pointer to RcHandle/Merge pull request from huangminghuang/transport_client_fix Fix DataWriterImpl accessed after deletion bug/Fix DataWriterImpl accessed after deletion bug/Fix DataWriterImpl accessed after deletion bug/Fix DataWriterImpl accessed after deletion bug/Merge pull request from huangminghuang/master Fixed compile problem with sun cc/Fixed compile problem with sun cc/Merge pull request from mitza-oci/master TransportClient allow fallback to next transport impl when active side fails to connect on the first/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0673,OpenDDS,Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.1291,OpenDDS,Fix JNI compile errors/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CID: 1380665. Initialize member variable./Fix missed setting reference counting policy in TcpConnection constructor/Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0804,OpenDDS,Merge pull request from huangminghuang/RcHandle_fix Fix multiple definition problem in MSVC/Fix some Coverity problems/Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.1266,OpenDDS,Fix JNI compile errors/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CID: 1380660. Initialize member variable./Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.0673,OpenDDS,Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0673,OpenDDS,Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.1732,OpenDDS,"Merge pull request from huangminghuang/RcHandle_fix Fix multiple definition problem in MSVC/Fixed MultiTopicTest error caused by store_instance_data only initializing filtered parameter for sample data. Fixed code to release the sample_lock_ when calling into the reactor. Fixed corner case in handle_timeout where store_instance_data is called just slightly ahead of a samples timeout being called, which would have resulted in subsequent data incorrectly delayed./Fix loss precision warnings/Merge pull request from objectcomputing/reliable_time_based_filter Time Based Filter QoS (support for reliable readers) Issue errors and added detaching FilterDelayedHandler from DataReaderImpl_T./Cleaned up debug statements./Added typename to fix gcc build errors./Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Addressing Coverity Scan CID: 1392419. Provide null check prior to dereference./Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/Merge pull request from jwillemsen/master Minor typo and doxygen fixes/"
,,0.0877,OpenDDS,Merge pull request from huangminghuang/RcHandle_fix Fix multiple definition problem in MSVC/Fix loss precision warnings/Fix missed setting reference counting policy in TcpConnection constructor/Fix RequestedDeadlineWatchdog::cancel_timer()/Fix incorrect handle_timeout() signature/Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.1185,OpenDDS,Fix JNI compile errors/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CID: 312647. Make sure not to deref dr_servant pointer if null./Merge pull request from jwillemsen/master Fixed typo in comment and minor code improvements/Merge pull request from jwillemsen/master Minor typo and doxygen fixes/
,,0.0958,OpenDDS,Fix unused param warning./Merge pull request from objectcomputing/reliable_time_based_filter Time Based Filter QoS (support for reliable readers) Issue SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/Avoid implicit conversion from pointer to RcHandle/Merge pull request from huangminghuang/transport_client_fix Fix DataWriterImpl accessed after deletion bug/Fix DataWriterImpl accessed after deletion bug/Fix DataWriterImpl accessed after deletion bug/Fix DataWriterImpl accessed after deletion bug/
,,0.0804,OpenDDS,Merge pull request from objectcomputing/reliable_time_based_filter Time Based Filter QoS (support for reliable readers) Issue
,,0.1516,OpenDDS,"Fix JNI compile errors/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CIDs: 1392343, 1380559, 1380558. Working to fix handling of Buffer not null terminated./Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Addressing Coverity Scan CID: 1392343 . Check length for validity before calling strncpy to guarantee no truncation and null termination of interface name before passing to ioctl. reference socket manpage: ""The passed option is a variable-length null-terminated interface name string with the maximum size of IFNAMSIZ.""/Interface-specific MAC in GUID: Win32 with older ACE (2.0a) needs fixed typo in earlier attempt/Merge pull request from jwillemsen/master Minor typo and doxygen fixes/Fixed inline=0 build on Linux/Fixed fuzz script errors./"
,,0.1406,OpenDDS,Merge branch master into coverity_issues_fixes/Merge pull request from huangminghuang/RcHandle_fix Some fixes for RcHandle/Fix StaticDiscovery implcit conversion problem/Avoid implicit conversion from pointer to RcHandle/Merge pull request from jwillemsen/master Add guard include to fix issue warning by assigning a default value * dds/DCPS/RTPS/RtpsDiscovery.cpp:/
,,0.1121,OpenDDS,"Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Catch const CORBA::Exception & in the catch clauses./Addressing Coverity Scan CIDs: 1392433, 1392432, 1392430, 1392429, 1392427, 1392424, 1392421. Fix handling of uncaught exceptions./"
,,0.0618,OpenDDS,Fixed error * dds/DCPS/RTPS/BaseMessageUtils.h:/
,,0.0849,OpenDDS,Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/Avoid implicit conversion from pointer to RcHandle/
,,0.1306,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CID: 1396628. Check for null pointer return from dynamic_cast before deref./Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/Avoid implicit conversion from pointer to RcHandle/
,,0.0811,OpenDDS,Merge pull request from jwillemsen/master Add guard include to fix issue some include problems and missing versioned namespace macros now we merged everything to master * dds/DCPS/ReplayerImpl.cpp: * dds/DCPS/ReplayerImpl.h: * dds/idl/ts_generator.cpp:/
,,0.0785,OpenDDS,Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/Merge pull request from jwillemsen/master Minor typo and doxygen fixes/Merge pull request from jwillemsen/jwi-bigobj-354 Add nmake to the specific list to use /bigobj and fixed some typos/Fixed typo * dds/DCPS/WriteDataContainer.h:/Merge pull request from jwillemsen/master Add guard include to fix issue
,,0.0618,OpenDDS,Merge pull request from jwillemsen/jwi-bigobj-354 Add nmake to the specific list to use /bigobj and fixed some typos/Fixed typo * dds/DCPS/Serializer.h:/
,,0.063,OpenDDS,Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.0686,OpenDDS,Versioned namespaces * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/FailoverListener.cpp: * dds/DCPS/InfoRepoDiscovery/FailoverListener.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.mpc:/
,,0.0686,OpenDDS,Versioned namespaces * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/FailoverListener.cpp: * dds/DCPS/InfoRepoDiscovery/FailoverListener.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.mpc:/
,,0.2087,OpenDDS,"Merge pull request from huangminghuang/RcHandle_fix Some fixes for RcHandle/Fix RcHandle changes/Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Catch const CORBA::Exception & in the catch clauses./Addressing Coverity Scan CIDs: 1392433, 1392432, 1392430, 1392429, 1392427, 1392424, 1392421. Fix handling of uncaught exceptions./Avoid implicit conversion from pointer to RcHandle/Versioned namespaces * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/FailoverListener.cpp: * dds/DCPS/InfoRepoDiscovery/FailoverListener.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.mpc:/"
,,0.0686,OpenDDS,Versioned namespaces * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/FailoverListener.cpp: * dds/DCPS/InfoRepoDiscovery/FailoverListener.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.mpc:/
,,0.0686,OpenDDS,Versioned namespaces * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/FailoverListener.cpp: * dds/DCPS/InfoRepoDiscovery/FailoverListener.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.mpc:/
,,0.0686,OpenDDS,Versioned namespaces * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataReaderRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.cpp: * dds/DCPS/InfoRepoDiscovery/DataWriterRemoteImpl.h: * dds/DCPS/InfoRepoDiscovery/FailoverListener.cpp: * dds/DCPS/InfoRepoDiscovery/FailoverListener.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.cpp: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.h: * dds/DCPS/InfoRepoDiscovery/InfoRepoDiscovery.mpc:/
,,0.075,OpenDDS,Merge pull request from huangminghuang/RcHandle_fix Fix multiple definition problem in MSVC/Fix loss precision warnings/Fix incorrect handle_timeout() signature/Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.2645,OpenDDS,"Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing additional defects from Coverity Scan/Merge branch master into coverity_issues_fixes/Addressing Coverity Scan CID: 1392424. Uncaught Exception from populate_locators./Merge pull request from huangminghuang/RcHandle_fix Some fixes for RcHandle/Fix StaticDiscovery implcit conversion problem/Fix JNI compile errors/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CIDs: 1392424 Fix handling of uncaught exceptions./Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Catch const CORBA::Exception & in the catch clauses./Addressing Coverity Scan CIDs: 1392433, 1392432, 1392430, 1392429, 1392427, 1392424, 1392421. Fix handling of uncaught exceptions./Avoid implicit conversion from pointer to RcHandle/"
,,0.0865,OpenDDS,Avoid implicit conversion from pointer to RcHandle/
,,0.0652,OpenDDS,Fix SubscriptionInstance/PublicationInstance being accessed by watchdogs after deletion/
,,0.1457,OpenDDS,"Fix JNI compile errors/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CIDs: 1392343, 1380559, 1380558. Working to fix handling of Buffer not null terminated./Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Addressing Coverity Scan CID: 1380559. Check length for validity before calling strncpy to guarantee no truncation and null termination./"
,,0.2581,OpenDDS,"Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix compiler warning: comparison between signed and unsigned integer Ö/Fix compiler warning: comparison between signed and unsigned integer expressions./Fix JNI compile errors/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CIDs: 1392343, 1380559, 1380558. Working to fix handling of Buffer not null terminated./Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Addressing Coverity Scan CID: 1380558. Check length for validity before calling strncpy to guarantee no truncation and null termination./"
,,0.1964,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix compiler warning: comparison between signed and unsigned integer Ö/Fix compiler warning: comparison between signed and unsigned integer expressions./Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Addressing Coverity Scan CID: 1380558. Check length for validity before calling strncpy to guarantee no truncation and null termination./
,,0.1089,OpenDDS,"Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Addressing Coverity Scan CID: 1380559. Check length for validity before calling strncpy to guarantee no truncation and null termination./Removed some commented out code, disable versioned namespaces in opendds by default unless explicitly enabled, fixed compile error * dds/FACE/config/TopicSettings.h: * dds/Versioned_Namespace.h:/"
,,0.1141,OpenDDS,Merge pull request from huangminghuang/master Fix uncaught exception/Fix uncaught exception/
,,0.1357,OpenDDS,"Merge pull request from oschwaldp-oci/coverity_issues_fixes Fix issues reported by Coverity./Addressing Coverity Scan CIDs: 1392433, 1392432, 1392430, 1392429, 1392427, 1392424, 1392421. Fix handling of uncaught exceptions./Merge pull request from jwillemsen/master Add guard include to fix issue"
,,0.1134,OpenDDS,"Fix JNI compile errors/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Addressing Coverity Scan CID: 313330. If participant pointer is null, dont do any processing that would require dereferencing. Let remove_domain_participant handle the fact that the participant for that repo id was not found./Merge pull request from jwillemsen/master Minor typo and doxygen fixes/"
,,0.0625,OpenDDS,"Initial support for Wireshark 2.x, see TODO comments proto_tree_add* still needs to be handled as this has a large breaking change in wireshark/"
,,0.0625,OpenDDS,"Initial support for Wireshark 2.x, see TODO comments proto_tree_add* still needs to be handled as this has a large breaking change in wireshark/"
,,0.0652,OpenDDS,Coverity Scan Defects: Dereference after null check fixes./
,,0.0917,OpenDDS,Merge branch jwi-gendirbug/Merge branch master into issue460-multidim Conflicts: .travis.yml/Merge pull request from jwillemsen/jwi-gendirbug Cleanup in various files/Initialise variable to fix compile warning * tests/DCPS/StaticDiscoveryReconnect/StaticDiscoveryTest.cpp:/
,,0.0545,OpenDDS,Coverity Scan Defects: Dereference after null check fixes./
,,0.063,OpenDDS,Coverity Scan Defects: Dereference after null check fixes./
,,0.063,OpenDDS,Coverity Scan Defects: Dereference after null check fixes./
,,0.0566,OpenDDS,Coverity Scan Defects: Dereference after null check fixes./
,,0.1231,OpenDDS,Merge pull request from mitza-oci/master Fixed compile error on SunCC/Fixed compile error on SunCC/
,,0.0588,OpenDDS,Coverity Scan Defects: Dereference after null check fixes./
,,0.0545,OpenDDS,Coverity Scan Defects: Dereference after null check fixes./
,,0.0717,OpenDDS,Merge branch jwi-gendirbug/Merge branch master into issue460-multidim Conflicts: .travis.yml/Merge pull request from jwillemsen/jwi-gendirbug Cleanup in various files/
,,0.0636,OpenDDS,Merge branch jwi-gendirbug/Merge branch master into issue460-multidim Conflicts: .travis.yml/Merge pull request from jwillemsen/jwi-gendirbug Cleanup in various files/
,,0.0704,OpenDDS,Fix unsynchronized access to REQUEST ACK TransportQueueElement./Merge branch jwi-gendirbug/Merge pull request from huangminghuang/tcp_wait_for_acks Fix TCP wait_for_acknowledgements() bug/Fix issues with the interaction with DataWriterConatiner/
,,0.0699,OpenDDS,Fix unsynchronized access to REQUEST ACK TransportQueueElement./Merge branch jwi-gendirbug/Merge pull request from huangminghuang/tcp_wait_for_acks Fix TCP wait_for_acknowledgements() bug/Fix issues with the interaction with DataWriterConatiner/Fix TCP wait_for_acknowledgements() bug/
,,0.0993,OpenDDS,Merge pull request from jwillemsen/jwi-cft-parameters Fix warning in ShmemTransport in some configurations/Fixed compile warning on Android * dds/DCPS/transport/shmem/ShmemTransport.cpp:/
,,0.1071,OpenDDS,Merge pull request from huangminghuang/MultiTopic-fix Fix listener created in a loop issue/Fix listener created in a loop issue/Merge pull request from jwillemsen/jwi-fixes540 Fix compile errors/warnings as introduced by PR compile errors/warnings as introduced by PR * dds/DCPS/MultiTopicDataReaderBase.cpp: * dds/DCPS/MultiTopicDataReaderBase.h:/Merge pull request from huangminghuang/cygwin-link-fix Fix MinGW link issue/Fix mingw64 link issue/Merge pull request from huangminghuang/MultiTopicDataReader-Fix Fix MultiTopicDataReader memory access problem/Fix MultiTopicDataReader memory access problem/
,,0.0657,OpenDDS,Merge branch jwi-gendirbug/Merge branch master into issue460-multidim Conflicts: .travis.yml/Merge pull request from jwillemsen/jwi-gendirbug Cleanup in various files/
,,0.0717,OpenDDS,Merge branch jwi-gendirbug/Merge pull request from huangminghuang/tcp_wait_for_acks Fix TCP wait_for_acknowledgements() bug/Fix issues with the interaction with DataWriterConatiner/
,,0.1085,OpenDDS,Merge pull request from jwillemsen/jwi-fixes540 Fix compile errors/warnings as introduced by PR compile errors/warnings as introduced by PR * dds/DCPS/MultiTopicDataReaderBase.cpp: * dds/DCPS/MultiTopicDataReaderBase.h:/Merge pull request from huangminghuang/cygwin-link-fix Fix MinGW link issue/Fix mingw64 link issue/Merge pull request from huangminghuang/MultiTopicDataReader-Fix Fix MultiTopicDataReader memory access problem/Fix MultiTopicDataReader memory access problem/
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.0618,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Handle thrown exception BAD_PARAM./
,,0.1183,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.0689,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Fix dereference of possible null return value./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1659,OpenDDS,Merge pull request from mitza-oci/warnings Fixed compiler warnings/Fixed compiler warnings/Merge pull request from mitza-oci/master Fixed compiler warnings/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./Fixed compiler warnings/
,,0.1325,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Fix accidental increase in writes in the test from previous change./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1204,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1121,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1121,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1331,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1331,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1222,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1162,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1204,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.0737,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/
,,0.1367,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Merge branch master into jwi-endhistorysampleleak/Adding checks after dynamic_cast to address coverity defect reports./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.0639,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Handle thrown exception BAD_PARAM./
,,0.1121,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1183,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1321,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Adding checks after dynamic_cast to address coverity defect reports./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1102,OpenDDS,Add include so that we get the CORBA exceptions * tests/DCPS/UnitTests/Fragmentation.cpp:/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1101,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1142,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1305,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Addressing Coverity Scan Defect Reported issues. Initialize member variable. Check return values./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1142,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1121,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.0577,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Merge branch master into jwi-endhistorysampleleak/
,,0.1222,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1389,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1351,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1183,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.13,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./Fix trailing whitespace./
,,0.11199999999999999,OpenDDS,Merge pull request from jwillemsen/jwi-zapexceptionspecification Removed deprecated throw exception specification in tests/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1204,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.0787,OpenDDS,Fixed compile errors and made some layout/indent changes * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp: * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h: * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:/
,,0.0806,OpenDDS,Fixed compile errors and made some layout/indent changes * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp: * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h: * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:/
,,0.075,OpenDDS,Fixed compile errors and made some layout/indent changes * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.cpp: * tests/DCPS/DCPSInfoRepo/DCPSDataReaderI.h: * tests/DCPS/DCPSInfoRepo/DCPSDataWriterI.h:/
,,0.1205,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Fixed memory leak in Lifespan test and made it running with rtps_disc * tests/DCPS/Lifespan/rtps_disc.ini: Added. * bin/dcps_tests.lst: * tests/DCPS/Lifespan/README: * tests/DCPS/Lifespan/publisher.cpp: * tests/DCPS/Lifespan/subscriber.cpp:/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1142,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1121,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1204,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.129,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1142,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1183,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1405,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Fix braces for style./Addressing Coverity Scan Report Defects: Untrusted loop bound due to tainted data./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1121,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1183,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1162,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1242,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1141,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.0702,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Handle thrown exception BAD_PARAM./
,,0.1142,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1347,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1142,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1182,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1444,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Use RETCODE_ERROR instead of RETCODE_PRECONDITION_NOT_MET./Addressing Coverity Scan reported defect of uninitialized members./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1456,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Merge branch master into jwi-endhistorysampleleak/Fixed compile errors when no query condition is available and added new option to the test suite * bin/dcps_short_tests.lst: * bin/dcps_tests.lst: * tests/DCPS/FooTest3_0/DataReaderQCListener.cpp: * tests/DCPS/FooTest3_0/DataReaderQCListener.h: * tests/DCPS/FooTest3_0/SubDriver.cpp:/Fixed compile errors when no query condition is available and added new option to the test suite * bin/dcps_short_tests.lst: * bin/dcps_tests.lst: * tests/DCPS/FooTest3_0/DataReaderQCListener.cpp: * tests/DCPS/FooTest3_0/DataReaderQCListener.h: * tests/DCPS/FooTest3_0/SubDriver.cpp:/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1141,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1204,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1101,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1183,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1121,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1202,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1389,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Fix braces for style./Addressing Coverity Scan Report Defects: Untrusted loop bound due to tainted data./Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1163,OpenDDS,Merge pull request from oschwaldp-oci/coverity_scan_defects_fixes Coverity Scan defect: checking result of dynamic; ACE logging fixes; etc./
,,0.1193,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Merge pull request from jwillemsen/jwi-gcc7 Fix gcc7 warning/Fix gcc7 warning * dds/idl/langmap_generator.cpp:/
,,0.0906,OpenDDS,Merge pull request from mitza-oci/warnings Fixed compiler warnings/Fixed compiler warnings/
,,0.0899,OpenDDS,Merge pull request from jwillemsen/jwi-fixdocutypo Fixed some typos/Fixed some typos * dds/DCPS/transport/tcp/TcpConnection.h:/
,,0.0669,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from huangminghuang/master Fix RemoveAssociationSweeper failed to remove association problem/
,,0.0751,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from huangminghuang/master Fix RemoveAssociationSweeper failed to remove association problem/
,,0.0926,OpenDDS,Merge pull request from mitza-oci/warnings Fixed compiler warnings/Fixed compiler warnings/
,,0.0717,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from huangminghuang/master Fix RemoveAssociationSweeper failed to remove association problem/Fix RemoveAssociationSweeper failed to remove association problem/
,,0.0717,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from huangminghuang/master Fix RemoveAssociationSweeper failed to remove association problem/Fix RemoveAssociationSweeper failed to remove association problem/
,,0.1101,OpenDDS,Merge branch master into jwi-endhistorysampleleak/Merge pull request from jwillemsen/jwi-serializer-gcc71 Fix gcc7.1 warnings/Fix gcc7.1 warnings * dds/DCPS/Serializer.cpp:/
,,0.1138,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Use RETCODE_ERROR instead of RETCODE_PRECONDITION_NOT_MET./Adding checks after dynamic_cast to address coverity defect reports./Add missing include and fixed compile errors * dds/DCPS/DomainParticipantFactoryImpl.cpp:/
,,0.2037,OpenDDS,Merge pull request from jwillemsen/jwi-face-warnings Fixed some warnings with msvc and fixed some typos in some debug messÖ/Fixed some warnings with msvc and fixed some typos in some debug messages * dds/FACE/FaceTSS.cpp:/Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity issues fixes/Fix unintentional style changes./Add try/catch for CORBA::BAD_PARAM exceptions at the FaceTSS API boundary./Merge pull request from oschwaldp-oci/coverity_issues_fixes Addressing Coverity Scan Reported Defects./Adding checks after dynamic_cast to address coverity defect reports./Fixed invalid use of PARTICIPANT_QOS_DEFAULT in FaceTSS/
,,0.1081,OpenDDS,Merge pull request from jwillemsen/jwi-gcc7 Fix gcc7 warning/Fix gcc7 warnings * dds/InfoRepo/DCPSInfo_i.cpp:/
,,0.0874,OpenDDS,Merge pull request from mitza-oci/master Attempting to fix GCC7 warnings/Attempting to fix GCC7 warnings/
,,0.0916,OpenDDS,Merge pull request from huangminghuang/memory-leak-fixes Fourth batch of memory leak fixes/Another memory leak fix in Service_T.cpp/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0954,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.114,OpenDDS,Merge pull request from huangminghuang/master Several memory leak fixes/Fix memory leak for tests/transport/simple/
,,0.0933,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1101,OpenDDS,Merge pull request from huangminghuang/master Several memory leak fixes/Fix memory leak for tests/transport/simple/
,,0.2475,OpenDDS,Merge pull request from mitza-oci/master fix asan invalid stack use errors/fix asan invalid stack use errors/Merge pull request from huangminghuang/master Third batch of memory leak fixes/Merge pull request from mitza-oci/master Attempting to fix GCC7 warnings/Attempting to fix GCC7 warnings/Merge pull request from huangminghuang/master Second batch of memory leak fixes/Merge pull request from huangminghuang/master Several memory leak fixes/Fix memory leaks in tests/transport//
,,0.1456,OpenDDS,Merge pull request from mitza-oci/master fix asan invalid stack use errors/fix asan invalid stack use errors/Merge pull request from huangminghuang/master Third batch of memory leak fixes/Merge pull request from huangminghuang/master Several memory leak fixes/Fix memory leaks in tests/transport//
,,0.0936,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.1535,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0977,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0957,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0936,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0891,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1422,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0954,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1497,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.1082,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix circular reference problem when deadline is enabled/
,,0.1497,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0957,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0977,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0977,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0652,OpenDDS,Merge pull request from huangminghuang/memory-leak-fixes Fourth batch of memory leak fixes/Fix memory leak for tests/DCPS/ManualAssertLiveliness/
,,0.0933,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0936,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0936,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0998,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0957,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0957,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0957,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0957,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0936,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0673,OpenDDS,Merge pull request from huangminghuang/memory-leak-fixes Fourth batch of memory leak fixes/Fix memory leak in TestFramework/
,,0.0652,OpenDDS,Merge pull request from huangminghuang/memory-leak-fixes Fourth batch of memory leak fixes/Fix memory leak in TestFramework/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/
,,0.0916,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0833,OpenDDS,Merge pull request from mitza-oci/master Attempting to fix GCC7 warnings/Attempting to fix GCC7 warnings/
,,0.0744,OpenDDS,Merge pull request from mitza-oci/master Attempting to fix GCC7 warnings/
,,0.0957,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0998,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.1896,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix FACE/Compiler/idl_test1_main memory leak/Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix another ACE_Message_Block leak in test/
,,0.0936,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in FACE/
,,0.0643,OpenDDS,Some more compiler fixes/
,,0.0954,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1038,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0912,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0954,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1081,OpenDDS,Some more compiler fixes/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1101,OpenDDS,Some more compiler fixes/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1355,OpenDDS,Fix unused parameter warning/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0686,OpenDDS,Fix unused parameter warning/
,,0.0686,OpenDDS,Fix unused parameter warning/
,,0.0954,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1374,OpenDDS,Merge pull request from huangminghuang/master memory leak fixes/Fix memory leak in replayer/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.073,OpenDDS,Another missing include fix/Some more compiler fixes/
,,0.0933,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0759,OpenDDS,Break TransportSendStrategy and ThreadSynch reference cycle/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0737,OpenDDS,Break TransportSendStrategy and ThreadSynch reference cycle/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1121,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix leaks in TransportQueuedElement derived classes/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.10800000000000001,OpenDDS,Avoid storing TcpConnnection pointer in TcpSendStrategy/Break TransportSendStrategy and ThreadSynch reference cycle/
,,0.1101,OpenDDS,Avoid storing TcpConnnection pointer in TcpSendStrategy/Break TransportSendStrategy and ThreadSynch reference cycle/
,,0.0954,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1101,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix leaks in TransportQueuedElement derived classes/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0697,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix ambiguous call for clang/Fix leaks in TransportQueuedElement derived classes/
,,0.13699999999999998,OpenDDS,Break TransportSendStrategy and ThreadSynch reference cycle/Merge pull request from huangminghuang/master memory leak fixes/Fix memory leak in replayer/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0912,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.078,OpenDDS,Break TransportSendStrategy and ThreadSynch reference cycle/
,,0.1081,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix warning messages/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0954,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1162,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix leaks in TransportQueuedElement derived classes/
,,0.0954,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0737,OpenDDS,Break TransportSendStrategy and ThreadSynch reference cycle/
,,0.0673,OpenDDS,Fix ReceiveListenerSet memory access violation/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1081,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix leaks in TransportQueuedElement derived classes/
,,0.1182,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix leaks in TransportQueuedElement derived classes/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0833,OpenDDS,Avoid storing TcpConnnection pointer in TcpSendStrategy/Avoid storing TcpConnection pointer in TcpReceiveStrategy/
,,0.1814,OpenDDS,Break reference cycle between TcpSynchResource and TcpConnection/Avoid storing TcpConnnection pointer in TcpSendStrategy/Avoid storing TcpConnection pointer in TcpReceiveStrategy/Merge pull request from huangminghuang/master Several memory leak fixes/Fix memory leak for TcpConnection/
,,0.0813,OpenDDS,Avoid storing TcpConnnection pointer in TcpSendStrategy/Avoid storing TcpConnection pointer in TcpReceiveStrategy/
,,0.1368,OpenDDS,Change reconnect failure message log level/Fix a memory access bug during shutdown/Break reference cycle between TcpSynchResource and TcpConnection/Merge pull request from huangminghuang/master Several memory leak fixes/Fix memory leak for TcpConnection/
,,0.0686,OpenDDS,Break reference cycle between TcpSynchResource and TcpConnection/
,,0.0686,OpenDDS,Break reference cycle between TcpSynchResource and TcpConnection/
,,0.2294,OpenDDS,Fix memory leak for TfpDataLink during shutdown/Break reference cycle between TcpSynchResource and TcpConnection/Avoid storing TcpConnnection pointer in TcpSendStrategy/Avoid storing TcpConnection pointer in TcpReceiveStrategy/Break reference cycle between TcpDataLink and TcpConnection/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0919,OpenDDS,Fix a memory access bug during shutdown/Break reference cycle between TcpSynchResource and TcpConnection/
,,0.0673,OpenDDS,Break reference cycle between TcpDataLink and TcpConnection/
,,0.0686,OpenDDS,Fix unused parameter warning/
,,0.0686,OpenDDS,Fix unused parameter warning/
,,0.0664,OpenDDS,Fix unused parameter warning/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0737,OpenDDS,Merge pull request from huangminghuang/memory-leak-fixes Fourth batch of memory leak fixes/Added WeakRcHandle to break reference cycles/
,,0.1473,OpenDDS,"BIT lookup: ""bad parameter"" errors should result in retries (BIT data hasnt arrived yet)/Merge pull request from huangminghuang/master Third batch of memory leak fixes/"
,,0.0664,OpenDDS,Some more compiler fixes/
,,0.2044,OpenDDS,Fix race condition for accessing ownership manager/Merge pull request from huangminghuang/allocator-alignment Allocator alignment fix/Fix allocator alignment problem Aslo resolve IS pull request from huangminghuang/master Fix unused parameter warning messages/Fix unused parameter warning messages/Merge pull request from huangminghuang/master Fix compiler error for gcc 4.1.2/Fix compiler error for gcc 4.1.2/Merge pull request from huangminghuang/master Fix memory leak in ZeroCopySeq/Fix compile problem for Safety profile/Fix memory leak in ZeroCopySeq/Merge pull request from huangminghuang/master Third batch of memory leak fixes/Merge pull request from mitza-oci/master Fixed formatting where ACE_GUARD was on the same line as {/Fixed formatting where ACE_GUARD was on the same line as {/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1101,OpenDDS,Break reference cycle inside DataWriterImpl/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1029,OpenDDS,Merge pull request from PaulCalabrese/master Fix Monitor library and test/Add new DCPSMonitor configuration option to initialize monitor functionality. Fix bug in DCPSRTISerialization command line option./Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0737,OpenDDS,Fix compiler error/
,,0.1506,OpenDDS,"BIT lookup: ""bad parameter"" errors should result in retries (BIT data hasnt arrived yet)/Fix race condition for accessing ownership manager/Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix circular reference problem when deadline is enabled/Merge pull request from mitza-oci/master Fixed formatting where ACE_GUARD was on the same line as {/Fixed formatting where ACE_GUARD was on the same line as {/Merge pull request from huangminghuang/jwillemsen-jwi-listenercleanup-641 Fix PR tests/DCPS/Reconnect/run_test.pl bp_timeout/"
,,0.0916,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Fix warning messages/Fix memory leaks in Sedp/
,,0.0818,OpenDDS,Fix missing include/Fix MSVC compile problem/
,,0.0972,OpenDDS,Merge pull request from huangminghuang/allocator-alignment Allocator alignment fix/Fix allocator alignment problem Aslo resolve IS pull request from huangminghuang/master Fix unused parameter warning messages/Fix unused parameter warning messages/Merge pull request from huangminghuang/master Fix memory leak in ZeroCopySeq/Fix memory leak in ZeroCopySeq/
,,0.1296,OpenDDS,Merge pull request from huangminghuang/master memory leak fixes/Fix memory leak in replayer/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0673,OpenDDS,Fix MSVC compile problem/
,,0.063,OpenDDS,Merge pull request from huangminghuang/allocator-alignment Allocator alignment fix/Fix allocator alignment problem Aslo resolve IS pull request from huangminghuang/master Fix memory leak in ZeroCopySeq/Fix some compiler errors/Fix memory leak in ZeroCopySeq/
,,0.0996,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1017,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.08800000000000001,OpenDDS,"BIT lookup: ""bad parameter"" errors should result in retries (BIT data hasnt arrived yet)/"
,,0.1061,OpenDDS,Some more compiler fixes/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1121,OpenDDS,Break reference cycle inside DataWriterImpl/Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0975,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.0933,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/
,,0.1347,OpenDDS,"Merge pull request from jwillemsen/jwi-dp-handleexceptionresult Instead of returning an error we have to set the shutdown_result_, thÖ/Merge pull request from huangminghuang/master Third batch of memory leak fixes/"
,,0.27399999999999997,OpenDDS,"Persistent InfoRepo may invoke association_complete again, this isnt an error./BIT lookup: ""bad parameter"" errors should result in retries (BIT data hasnt arrived yet)/Some more compiler fixes/Break reference cycle inside DataWriterImpl/Merge pull request from huangminghuang/master Third batch of memory leak fixes/fixed warnings/Fix circular reference problem when deadline is enabled/Merge pull request from huangminghuang/master Several memory leak fixes/Fix memory leak when timeout occurs/Merge pull request from huangminghuang/jwillemsen-jwi-listenercleanup-641 Fix PR tests/DCPS/Reconnect/run_test.pl bp_timeout/"
,,0.1335,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity Issues./Initialize last_msg_header to default. Addressing coverity defect 1380662/Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in FACE/
,,0.1225,OpenDDS,Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity Scan updates/Coverity Scan updates: Address 1454919 and 1454912 having to do with further exceptions not being caught from the bind_config call./Merge pull request from oschwaldp-oci/coverity_issues_fixes Coverity Issues./Catch exception thrown in bind_config. Addresses Coverity Defects: 1446126 & 1446125./Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in FACE/FaceTSS memory leak fix/
,,0.0865,OpenDDS,Merge pull request from huangminghuang/master Fix persistent Inforepo memory leak/Fix persistent Inforepo memory leak/
,,0.0865,OpenDDS,Merge pull request from huangminghuang/master Fix persistent Inforepo memory leak/Fix persistent Inforepo memory leak/
,,0.0844,OpenDDS,Merge pull request from huangminghuang/master fix some federated inforepo memory leaks/fix some federated inforepo memory leaks/
,,0.0801,OpenDDS,Merge pull request from huangminghuang/master fix some federated inforepo memory leaks/fix some federated inforepo memory leaks/
,,0.0865,OpenDDS,Merge pull request from huangminghuang/master fix some federated inforepo memory leaks/fix some federated inforepo memory leaks/
,,0.0823,OpenDDS,Merge pull request from mitza-oci/master fix asan invalid stack use errors/fix asan invalid stack use errors/Merge pull request from huangminghuang/memory-leak-fixes Fourth batch of memory leak fixes/fix memory leak in InfoRepo/UpdateManager/
,,0.1441,OpenDDS,Merge pull request from huangminghuang/master Third batch of memory leak fixes/Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0865,OpenDDS,Merge pull request from huangminghuang/master Fix persistent Inforepo memory leak/Fix persistent Inforepo memory leak/
,,0.0844,OpenDDS,Merge pull request from huangminghuang/master Fix persistent Inforepo memory leak/Fix persistent Inforepo memory leak/
,,0.0977,OpenDDS,Merge pull request from huangminghuang/master Second batch of memory leak fixes/Fix memory leaks in tests/
,,0.0899,OpenDDS,Fix unique_ptr on C++03 mode/Merge pull request from huangminghuang/master Fix persistent Inforepo memory leak/Fix persistent Inforepo memory leak/
,,0.0865,OpenDDS,Merge pull request from huangminghuang/master fix some federated inforepo memory leaks/fix some federated inforepo memory leaks/
,,0.0865,OpenDDS,Merge pull request from huangminghuang/master Fix persistent Inforepo memory leak/Fix persistent Inforepo memory leak/
,,0.0673,OpenDDS,Merge pull request from huangminghuang/memory-leak-fixes Revert UpdateDataTypes.h/Merge pull request from huangminghuang/memory-leak-fixes Fourth batch of memory leak fixes/fix memory leak in InfoRepo/UpdateManager/
,,0.0865,OpenDDS,Merge pull request from huangminghuang/master fix some federated inforepo memory leaks/fix some federated inforepo memory leaks/
,,0.0673,OpenDDS,Fix MSVC compile problem/
,,0.0865,OpenDDS,Merge pull request from huangminghuang/master Fix persistent Inforepo memory leak/Fix persistent Inforepo memory leak/
,,0.0891,OpenDDS,fixed compile error with clang on macOS/
,,0.0912,OpenDDS,fixed warnings: no need for break after return/
,,0.0917,OpenDDS,Merge pull request from mitza-oci/master Filter Eval: improved error message/fixed an unused variable warning/
,,0.0934,OpenDDS,"fixing bug in parameter list converter, setting up local permissions and governance files for Messenger test with correct domain, temporary work around for missing permissions CA cert file/Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.0843,OpenDDS,"temporary fix for missing permissions cert/Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.0685,OpenDDS,Presentation test: dont write uninit values; better error messages/
,,0.1271,OpenDDS,fixed crypto plugin tests/Fixed compile error on newer gcc/
,,0.1066,OpenDDS,Fixed bugs in Auth unit test; finished impl. of complete-handshake unit test/Modified AuthenticationTest to generate mock-topic-data. The routine is broken though needs to be fixed/Fixed bug with signature in begin_handshake_reply/Fixed bugs in begin_handshake_reply/fixed bug in make_adjusted_guid; Completed first validate-remote-identity test/Set participant privkey in test fixture/Added test fixture/
,,0.1294,OpenDDS,"A bit of cleanup for subject name, fixing how AccessControl gets remote identity subject name (cant rely on auth plugin get_identity_token, which is OK and in line with spec)/Corrected permissions loading errors. Completed get_topic_security_attributes and check_create_topic/Implemented PluginParticipantSecurityAttributesMask, fixed PermissionsCredentialsToken content and test./fixed warnings/Fixed check_create_participant success test/"
,,0.0618,OpenDDS,fixed review comment/
,,0.0843,OpenDDS,"Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.1002,OpenDDS,"Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.168,OpenDDS,TcpConnection: Fix Error Message/Merge pull request from mitza-oci/master Restored publisher side content filter; fixed warnings/Restored publisher side content filter; fixed warnings/Merge pull request from huangminghuang/master Fix the deadlock issue in TCP reconnect thread/Fix the memory access for tcp reconnect task/Fix tcp deadlock/Try to fix heap access after release problem in Asan build/
,,0.1589,OpenDDS,Merge pull request from mitza-oci/master Restored publisher side content filter; fixed warnings/Restored publisher side content filter; fixed warnings/
,,0.163,OpenDDS,"bug fixes and improved logging for submessage crypto/fixing duplicate token issue from lack of clearing in/out parameter in begin_handshake_reply, updating tests to catch original issue and more accurately test handshake setups/Modified token-writer to use dynamic back-insertions instead of fixed property indices/Fixed issue with bad dh1 value in process_handshake_reply/fixed compile error/Fixed issue with bad dh1 value in process_final_handshake/Fixed auth signature-signing issues/Fixed bug in handshake-reply/Continued debugging the auth handshake Fixed typo in DdsSecurityCore.idl/Added error message to failed deserialization of guid from cpdata/Fixed bug with signature in begin_handshake_reply/Debugging fixes for Authentication/Fixed issue with diffie-hellman key generation/Fixed another but in begin_handshake_reply/Fixed bugs in begin_handshake_reply/another intermediate commit on the way towards 8.8.2, adds security fields to DiscoveredParticipant and fixes a few testing issues/Fixed issue with security-MPC; Added copy-assignment to Certificate/PrivateKey/Adding Support for DCPSSecurity runtime flag (disabled by default), fixing DomainParticipant return codes, adding temporary unique guid generation to builtin auth plugin/"
,,0.0699,OpenDDS,Modified token-writer to use dynamic back-insertions instead of fixed property indices/
,,0.0757,OpenDDS,Modified token-writer to use dynamic back-insertions instead of fixed property indices/
,,0.1197,OpenDDS,"A bit of cleanup for subject name, fixing how AccessControl gets remote identity subject name (cant rely on auth plugin get_identity_token, which is OK and in line with spec)/Modified token-writer to use dynamic back-insertions instead of fixed property indices/Corrected permissions loading errors. Completed get_topic_security_attributes and check_create_topic/Fixed permissions xml file parsing errors/Implemented PluginParticipantSecurityAttributesMask, fixed PermissionsCredentialsToken content and test./fixed build errors with access control/"
,,0.0881,OpenDDS,"DataReaderImpl_T.h: Improved No Data Debug Msg/fixed warnings, restored MultiTopics error messages to have correct int to string conversion/Reliable Time based Filter fix: move() conflict/DataReaderImpl Fix Indent on 9 lines/"
,,0.0898,OpenDDS,"fixed warnings, restored MultiTopics error messages to have correct int to string conversion/"
,,0.0762,OpenDDS,Merge pull request from iguessthislldo/bit Built In Topic Test Fixes/Code Review Fixes Restored for loop in DataReaderImpl.cpp Fixed method on NULL pointer in DataLink.inl/
,,0.1215,OpenDDS,"fixed warnings/Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.0903,OpenDDS,"Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.0871,OpenDDS,"removing security builtin topics from filter for check_create_topic, adding topic name to debug output/Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./removing debugging throw/Adding Support for DCPSSecurity runtime flag (disabled by default), fixing DomainParticipant return codes, adding temporary unique guid generation to builtin auth plugin/"
,,0.0942,OpenDDS,"Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.0923,OpenDDS,"Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.0982,OpenDDS,"Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.1571,OpenDDS,Merge pull request from mitza-oci/master Restored publisher side content filter; fixed warnings/Restored publisher side content filter; fixed warnings/
,,0.0903,OpenDDS,"Adding some inital qos properties to Messenger test for testing, fixing a few bugs discovered in the process, more to follow./"
,,0.1554,OpenDDS,Merge pull request from mitza-oci/master Restored publisher side content filter; fixed warnings/Restored publisher side content filter; fixed warnings/
,,0.1623,OpenDDS,Merge pull request from mitza-oci/master Restored publisher side content filter; fixed warnings/Restored publisher side content filter; fixed warnings/
,,0.1207,OpenDDS,Merge pull request from kpansky/issue841 Catch all variants of Transport::Exception in FaceTSS/Catch all variants of Transport::Exception in FaceTSS Issue pull request from mitza-oci/master Restored publisher side content filter; fixed warnings/Merge pull request from kpansky/issue789 Fix for in-process messaging in FACE TSS/Fix for in-process messaging in FACE TSS/
,,0.1,OpenDDS,"fixing typo in debug output/fixing compile warning, debug statement formatting for timeval/Attempting to fix the intermittent LivelinessTimeout test failure/"
,,0.1303,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/
,,0.1102,OpenDDS,"consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.1158,OpenDDS,"consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.0744,OpenDDS,fixed review comments in crypto/
,,0.1188,OpenDDS,"Fixed issues with OpenDDS hooks into elliptic-curve signature verification/consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/Fix SSL Unit Test on OpenSSL 1.0/"
,,0.1544,OpenDDS,"Fixed bug in copyconstruct unit test/Fixed serialization routines in SignedDocument/review fixes/consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.1158,OpenDDS,"consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.0716,OpenDDS,fixed review comments in opendds_idl/
,,0.0759,OpenDDS,fixed review comments in opendds_idl/
,,0.1761,OpenDDS,"Corrected failing test. Added methods to SignedDocument./Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.1133,OpenDDS,"Adding configurable timeout, certs, key files to security attributes test; flushing out SC0 and SC1 scenarios; fixing ERROR vs WARNING messages in Spdp for test scripts/Initial implementation of 8.8.5 and rest of 8.8.6, changes to tests & script & dds log messages to allow for failure test/"
,,0.1162,OpenDDS,"Adding configurable timeout, certs, key files to security attributes test; flushing out SC0 and SC1 scenarios; fixing ERROR vs WARNING messages in Spdp for test scripts/Initial implementation of 8.8.5 and rest of 8.8.6, changes to tests & script & dds log messages to allow for failure test/"
,,0.1176,OpenDDS,"Adding configurable timeout, certs, key files to security attributes test; flushing out SC0 and SC1 scenarios; fixing ERROR vs WARNING messages in Spdp for test scripts/Initial implementation of 8.8.5 and rest of 8.8.6, changes to tests & script & dds log messages to allow for failure test/"
,,0.1103,OpenDDS,"Adding configurable timeout, certs, key files to security attributes test; flushing out SC0 and SC1 scenarios; fixing ERROR vs WARNING messages in Spdp for test scripts/"
,,0.0857,OpenDDS,"fixing valgrind problems in OpenSSL and Xerces-C++ usage, some related issues, make use of ACE XML Utils/"
,,0.1446,OpenDDS,"Fixed broken auth unit tests/fixing valgrind problems in OpenSSL and Xerces-C++ usage, some related issues, make use of ACE XML Utils/cleaned up namespace issues in AuthenticationTest/Added unit test for GetSharedSecret; fixed issue with GetAuthenticationPeerCredentialToken test/auth plugin: resolved review issue with TODO / commented-out code/consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.1443,OpenDDS,"fixed compile errors with LocalCredentialData/consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.11199999999999999,OpenDDS,Merge pull request from mitza-oci/master fixed warnings; updating rapidjson submodule/fixed warnings/Merge pull request from mitza-oci/master opendds_idl Javascript support: fixed bug with string-in-union/opendds_idl Javascript support: fixed bug with string-in-union/
,,0.0801,OpenDDS,fixed review comments in opendds_idl/
,,0.1202,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/
,,0.1408,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in transport/
,,0.1466,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in transport/
,,0.1102,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/cleanup and bugfixes in transport support for security/
,,0.1195,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in transport/Fixed spacing/cleanup and bugfixes in transport support for security/better error/debug logging for when an encoded message cant be decoded/RtpsUdpReceiveStrategy: Debug level on debug msg Added debug level if statement to decode debug message/
,,0.1443,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in transport/cleanup and bugfixes in transport support for security/
,,0.1408,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in transport/
,,0.1394,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/RtpsUdpDataLink.cpp: Fix Typo/
,,0.155,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in opendds_idl/
,,0.1103,OpenDDS,Fixed compile error/Fixed bug with validate-remote-identity blocking multiple locally-validated GUIds/fixed namespace versioning in dds/DCPS/security/
,,0.1525,OpenDDS,Fixed issues with OpenDDS hooks into elliptic-curve signature verification/Fixed bug with validate-remote-identity blocking multiple locally-validated GUIds/fixed warnings/Fixed spacing/formatting/auth plugin: resolved review issue with TODO / commented-out code/Added exception context/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/Added more error context to return-failure cases/Added more exception context/Added error context to validate_local_identity when err formatting and const issues/Fixed typo in error string/
,,0.2413,OpenDDS,Added unit test for GetSharedSecret; fixed issue with GetAuthenticationPeerCredentialToken test/fixed warnings/Added exception context to Certificate/Added exception context to SignedDocument/Fixed bug in copyconstruct unit test/Fixed serialization routines in SignedDocument/Corrected failing test. Added methods to SignedDocument./Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/Removed various fprintf calls in favour of ACE_ERROR/Fixed compile issues associated with changes to OPENDDS_SSL_LOG_ERR/Fixed constness and added virtual destructor/SSL formatting fixes/
,,0.1133,OpenDDS,"fixing valgrind problems in OpenSSL and Xerces-C++ usage, some related issues, make use of ACE XML Utils/Corrected issue with bad DH shared-secret sizes/Removed various fprintf calls in favour of ACE_ERROR/Fixed compile issues associated with changes to OPENDDS_SSL_LOG_ERR/SSL formatting fixes/"
,,0.1479,OpenDDS,"Switched SSL logging to print WARNING messages instead of ERROR/Fixed compile issues associated with changes to OPENDDS_SSL_LOG_ERR/Replaced stderr logging with ACE_ERROR/SSL formatting fixes/consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.1316,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/SSL formatting fixes/
,,0.1594,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/Removed various fprintf calls in favour of ACE_ERROR/SSL formatting fixes/
,,0.177,OpenDDS,"fixing valgrind problems in OpenSSL and Xerces-C++ usage, some related issues, make use of ACE XML Utils/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/Removed various fprintf calls in favour of ACE_ERROR/Fixed compile issues associated with changes to OPENDDS_SSL_LOG_ERR/SSL formatting fixes/"
,,0.11699999999999999,OpenDDS,"fixing valgrind problems in OpenSSL and Xerces-C++ usage, some related issues, make use of ACE XML Utils/Fixed compile issues associated with changes to OPENDDS_SSL_LOG_ERR/SSL formatting fixes/"
,,0.063,OpenDDS,SSL formatting fixes/
,,0.2355,OpenDDS,"Fixed issues with OpenDDS hooks into elliptic-curve signature verification/fixing valgrind problems in OpenSSL and Xerces-C++ usage, some related issues, make use of ACE XML Utils/fixed warning/Added exception context to Certificate/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/minor formatting and const issues/Removed various fprintf calls in favour of ACE_ERROR/Fixed compile issues associated with changes to OPENDDS_SSL_LOG_ERR/SSL formatting fixes/consolidating test certificate authorities, resigning permissions and governance documents, and updating / fixing matching tests/"
,,0.0609,OpenDDS,SSL formatting fixes/
,,0.1978,OpenDDS,Added exception context to SignedDocument/Fixed serialization routines in SignedDocument/Corrected failing test. Added methods to SignedDocument./Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/Fixed constness and added virtual destructor/SSL formatting fixes/
,,0.1283,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/
,,0.0588,OpenDDS,fixed namespace versioning in dds/DCPS/security/
,,0.1461,OpenDDS,Modified get_sec_attributes to also fill in the text for the SecurityException object. Removed mutex lock in generate_handle method due to the lock being set in the calling methods before calling generate_handle()./Fixed serialization routines in SignedDocument/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed namespace versioning in dds/DCPS/security/Task 3630: Corrected Linux compile error in file./
,,0.0912,OpenDDS,Fixing (linux?) compile errors/
,,0.063,OpenDDS,fixed namespace versioning in dds/DCPS/security/
,,0.0652,OpenDDS,fixed namespace versioning in dds/DCPS/security/
,,0.1461,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/further review fixes for crypto/fixed review comments in crypto/Fix SSL Unit Test on OpenSSL 1.0/
,,0.0588,OpenDDS,fixed namespace versioning in dds/DCPS/security/
,,0.1283,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/
,,0.1338,OpenDDS,Added unit test for GetSharedSecret; fixed issue with GetAuthenticationPeerCredentialToken test/Removed error-case when access-permissions doc is missing/Added exception context/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/minor formatting and const issues/LocalCredentialData: Prop debug/error msgs/
,,0.0998,OpenDDS,"fixed compile errors with LocalCredentialData/Added exception context/minor formatting and const issues/LocalCredentialData.h: add missing ""ERROR""s to error msg/LocalCredentialData: Prop debug/error msgs/"
,,0.2397,OpenDDS,"Fixed compile error/Corrected a memory leak in start_timer method./Modified get_sec_attributes to also fill in the text for the SecurityException object. Removed mutex lock in generate_handle method due to the lock being set in the calling methods before calling generate_handle()./Fixed compile error/Fixed serialization routines in SignedDocument/Fix for build-server compile error; removed xerces includes from Access-plugin-impl/Debugging statements./Fixed outstanding issues with Governance abstraction/Corrected failing test. Added methods to SignedDocument./Fixed compile errors; removed trailing whitespace/fix compile errors/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/Task 3642: Correcting Linux compile errors./Task 3642: Corrected Linux compiler error./fixing some const issues in local access credential data/Fixing (linux?) compile errors/a bit more minor cleanup in AccessControl, adding messages to topic not found failure cases/fixing valgrind issue within mktime for tm structures, adding / cleaning up some error messages in AccessControl/"
,,0.19,OpenDDS,Incremental addition of ifdefs in dds/DCPS/RTPS/*; build fails though/fix compile warning about initializer lists/fix compile errors/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in transport/fixing duplicate variable declaration and formatting issues from code review resolution changes/fixing and/or issue from resolutions/
,,0.1102,OpenDDS,Incremental addition of ifdefs in dds/DCPS/RTPS/*; build fails though/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/
,,0.1723,OpenDDS,"initializing participant security attributes to avoid valgrind warning (even for non-secure constructor\)/initializing participant security attributes to avoid valgrind warning/Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/Correcting debug statement function description/Adding configurable timeout, certs, key files to security attributes test; flushing out SC0 and SC1 scenarios; fixing ERROR vs WARNING messages in Spdp for test scripts/adding support for 8.8.7.1 (unauth) and fixing half_sec test issues (also unauth)/Dont rely on format of the guidPrefix when security is in use/Initial implementation of 8.8.5 and rest of 8.8.6, changes to tests & script & dds log messages to allow for failure test/"
,,0.1504,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in transport/
,,0.1504,OpenDDS,Merge branch security of github.com:objectcomputing/OpenDDS into security (resolving a few conflicts / compile errors)/fixed review comments in transport/
,,0.1019,OpenDDS,attempting to fix signed / unsigned compiler warning/
,,0.0823,OpenDDS,repoctl fixes/Fixed memory leaks/
,,0.1017,OpenDDS,Merge pull request from jmmorato/master Fixed set_qos method for not enabled DataWriters and DataReaders/
,,0.0954,OpenDDS,Merge pull request from jmmorato/master Fixed set_qos method for not enabled DataWriters and DataReaders/
,,0.1485,OpenDDS,Merge pull request from mitza-oci/master fixed unused variable warnings/fixed unused variable warnings/
,,0.1408,OpenDDS,Merge pull request from mitza-oci/master fixed unused variable warnings/fixed unused variable warnings/
,,0.0815,OpenDDS,"opendds_idl: Error on more cases of invalid arguments/opendds_idl: set error state for invalid argument/typecode suppression, fixed warnings/"
,,0.0723,OpenDDS,"typecode suppression, fixed warnings/"
,,0.0765,OpenDDS,"typecode suppression, fixed warnings/"
,,0.1314,OpenDDS,"Merge branch master into fix-local-acl-data/fixed warnings, style issues, OpenSSL 1.0.x compat/Merge pull request from mitza-oci/master security post-merge fixes/fixed coverity issues in new code/safety profile fixes/"
,,0.11199999999999999,OpenDDS,Merge branch master into fix-local-acl-data/warnings and guidelines fixes/Merge pull request from mitza-oci/master security post-merge fixes/fixed coverity issues in new code/
,,0.0792,OpenDDS,Merge branch master into fix-local-acl-data/warnings and guidelines fixes/transport: fixed a message block memory mgmt bug in submessage decryption/
,,0.0844,OpenDDS,Fixed memory leaks/
,,0.0778,OpenDDS,"Merge branch master into fix-local-acl-data/fixed warnings, style issues, OpenSSL 1.0.x compat/"
,,0.0891,OpenDDS,Possible Solution to GroupPres Test Error/Possible Solution to GroupPres Test Error/
,,0.1466,OpenDDS,Merge pull request from mitza-oci/master fixed unused variable warnings/fixed unused variable warnings/
,,0.12,OpenDDS,Merge pull request from jmmorato/master Fixed set_qos method for not enabled DataWriters and DataReaders/Fixed set_qos method for not enabled DataWriters and DataReaders/
,,0.0751,OpenDDS,Fixed FACE broken tests/
,,0.0919,OpenDDS,Merge pull request from jmmorato/master Fixed set_qos method for not enabled DataWriters and DataReaders (cherry picked from commit 3df6dce0096a594e5fb5ed4f01c8572d039b0261)/
,,0.0919,OpenDDS,Merge pull request from jmmorato/master Fixed set_qos method for not enabled DataWriters and DataReaders (cherry picked from commit 3df6dce0096a594e5fb5ed4f01c8572d039b0261)/
,,0.1002,OpenDDS,Merge pull request from simpsont-oci/master Fixes for Deadline Test timing issues (cherry picked from commit 2f75334792a29f4338c5dfdaaddb6ea2777421c8) Conflicts: tests/DCPS/StaticDiscovery/StaticDiscoveryTest.cpp/Merge pull request from jmmorato/master Fixed set_qos method for not enabled DataWriters and DataReaders (cherry picked from commit 3df6dce0096a594e5fb5ed4f01c8572d039b0261)/
,,0.0919,OpenDDS,fixed unused variable warnings (cherry picked from commit 292bdf223b9786c1552f6312a15f6d957243a945)/
,,0.0939,OpenDDS,Merge pull request from jmmorato/master Fixed set_qos method for not enabled DataWriters and DataReaders (cherry picked from commit 3df6dce0096a594e5fb5ed4f01c8572d039b0261)/
,,0.0829,OpenDDS,Merge pull request from jmmorato/master Visual Studio /clr leads to linking errors/DataReaderImpl changes to avoid linking error when compiling with clr/
,,0.0621,OpenDDS,fixed whitespace/
,,0.0847,OpenDDS,Merge pull request from jmmorato/master Visual Studio /clr leads to linking errors/DataReaderImpl changes to avoid linking error when compiling with clr/
,,0.0689,OpenDDS,Merge pull request from iguessthislldo/igtd/security Security Fixes/Various Minor Fixes/
,,0.0669,OpenDDS,Merge pull request from iguessthislldo/igtd/security Security Fixes/Various Minor Fixes/
,,0.0978,OpenDDS,"Merge pull request from simpsont-oci/fix_messenger_leaks Security Registry and cleanup/Merge pull request from iguessthislldo/igtd/security Security Fixes/Service_Participant.cpp: Fix Security Opts/Adding cleanup of SecurityRegistry to ServiceParticipant, similar to TransportRegistry, in order to remove leak warnings/Security Debug Options/fixed safety profile and other build issues/"
,,0.0848,OpenDDS,unique_ptr changes to avoid linking error when compiling with clr/
,,0.075,OpenDDS,Merge pull request from iguessthislldo/igtd/presqos Fixes for Bugs Introduced in 1094/Fix Group Presentation by Instance QoS/
,,0.0731,OpenDDS,Merge pull request from iguessthislldo/igtd/presqos Fixes for Bugs Introduced in 1094/Change delete_datareader errors to warnings/
,,0.077,OpenDDS,Merge pull request from iguessthislldo/igtd/presqos Fixes for Bugs Introduced in 1094/Change delete_datareader errors to warnings/
,,0.1205,OpenDDS,Restore Includes in Presentation Test Fix For Static Builds for pull request from iguessthislldo/igtd/presqos Fixes for Bugs Introduced in 1094/Fix Leak in Presentation Test/Merge pull request from c4m3lc4s3/master Fixed listener invocation for Presentation QoS policy coherent_access/
,,0.1019,OpenDDS,idl2jni/codegen: Style and Compiler Warning Fixes/
,,0.1196,OpenDDS,"Merge pull request from ocielliottc/idl_generated_warning Assign zero to the jni type array to avoid a ""may be used uninitialized"" warning from gcc./Assign zero to the jni type array to avoid a ""may be used uninitialized"" warning from gcc./idl2jni/codegen: Style and Compiler Warning Fixes/"
,,0.0855,OpenDDS,"opendds_idl: Misc Fixes/As per conversations, changed from error to warning./Properly using the error logger for throwing errors/Throw an error and fail if we see both a and a"
,,0.0681,OpenDDS,Misc Style Fixes/opendds_idl: Misc Fixes/
,,0.0621,OpenDDS,opendds_idl: Misc Fixes/
,,0.0599,OpenDDS,opendds_idl: Misc Fixes/
,,0.0804,OpenDDS,Merge pull request from jrw972/coverity Coverity issues/Coverity 1481700/Merge pull request from iguessthislldo/igtd/presqos Fixes for Bugs Introduced in 1094/Change delete_datareader errors to warnings/Merge pull request from c4m3lc4s3/master Fixed listener invocation for Presentation QoS policy coherent_access/Log why delete_datareader fails/
,,0.063,OpenDDS,Merge pull request from c4m3lc4s3/master Fixed listener invocation for Presentation QoS policy coherent_access/
,,0.0577,OpenDDS,Data*Impls: Misc Fixes/
,,0.0588,OpenDDS,Merge pull request from c4m3lc4s3/master Fixed listener invocation for Presentation QoS policy coherent_access/
,,0.1019,OpenDDS,Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for for pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/
,,0.0599,OpenDDS,Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/
,,0.0556,OpenDDS,Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/
,,0.0577,OpenDDS,Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/
,,0.0599,OpenDDS,Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/
,,0.0599,OpenDDS,More Various Fixes/
,,0.2037,OpenDDS,"opendds_idl: Add error and readd warning/Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/Replace DCPS_DATA_TYPE warning MPC feature To avoid changing all the build server configs and avoid any possiblity of the warning not showing on the users end, instead of disabling an MPC feature to mask DCPS_DATA_TYPE warnings in OpenDDS, have opendds_idl just not do warn if the IDL file is in tests, performance-tests, and java of DDS_ROOT. Also make the check for DCPS_DATA_TYPE take all the possible whitespace into effect./"
,,0.2037,OpenDDS,"opendds_idl: Add error and readd warning/Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/Replace DCPS_DATA_TYPE warning MPC feature To avoid changing all the build server configs and avoid any possiblity of the warning not showing on the users end, instead of disabling an MPC feature to mask DCPS_DATA_TYPE warnings in OpenDDS, have opendds_idl just not do warn if the IDL file is in tests, performance-tests, and java of DDS_ROOT. Also make the check for DCPS_DATA_TYPE take all the possible whitespace into effect./"
,,0.1745,OpenDDS,"Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/Replace DCPS_DATA_TYPE warning MPC feature To avoid changing all the build server configs and avoid any possiblity of the warning not showing on the users end, instead of disabling an MPC feature to mask DCPS_DATA_TYPE warnings in OpenDDS, have opendds_idl just not do warn if the IDL file is in tests, performance-tests, and java of DDS_ROOT. Also make the check for DCPS_DATA_TYPE take all the possible whitespace into effect./"
,,0.2052,OpenDDS,"opendds_idl: Add error and readd warning/Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/Replace DCPS_DATA_TYPE warning MPC feature To avoid changing all the build server configs and avoid any possiblity of the warning not showing on the users end, instead of disabling an MPC feature to mask DCPS_DATA_TYPE warnings in OpenDDS, have opendds_idl just not do warn if the IDL file is in tests, performance-tests, and java of DDS_ROOT. Also make the check for DCPS_DATA_TYPE take all the possible whitespace into effect./"
,,0.1714,OpenDDS,"Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/Replace DCPS_DATA_TYPE warning MPC feature To avoid changing all the build server configs and avoid any possiblity of the warning not showing on the users end, instead of disabling an MPC feature to mask DCPS_DATA_TYPE warnings in OpenDDS, have opendds_idl just not do warn if the IDL file is in tests, performance-tests, and java of DDS_ROOT. Also make the check for DCPS_DATA_TYPE take all the possible whitespace into effect./"
,,0.1682,OpenDDS,"Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/Changes for Coverity/Replace DCPS_DATA_TYPE warning MPC feature To avoid changing all the build server configs and avoid any possiblity of the warning not showing on the users end, instead of disabling an MPC feature to mask DCPS_DATA_TYPE warnings in OpenDDS, have opendds_idl just not do warn if the IDL file is in tests, performance-tests, and java of DDS_ROOT. Also make the check for DCPS_DATA_TYPE take all the possible whitespace into effect./"
,,0.0599,OpenDDS,Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/
,,0.2042,OpenDDS,"opendds_idl: Add error and readd warning/opendds_idl: Error if idl version 4/Merge pull request from iguessthislldo/igtd/1067_fixes Fixes for 1067/Replace DCPS_DATA_TYPE warning MPC feature To avoid changing all the build server configs and avoid any possiblity of the warning not showing on the users end, instead of disabling an MPC feature to mask DCPS_DATA_TYPE warnings in OpenDDS, have opendds_idl just not do warn if the IDL file is in tests, performance-tests, and java of DDS_ROOT. Also make the check for DCPS_DATA_TYPE take all the possible whitespace into effect./"
,,0.1011,OpenDDS,Merge pull request from mitza-oci/master fixed warnings and unit test from recent security change/fixed warnings/
,,0.0643,OpenDDS,More Fixes/
,,0.0844,OpenDDS,formating and output fixes/
,,0.0844,OpenDDS,formating and output fixes/
,,0.0801,OpenDDS,formating and output fixes/
,,0.0759,OpenDDS,formating and output fixes/
,,0.0737,OpenDDS,formating and output fixes/
,,0.0737,OpenDDS,formating and output fixes/
,,0.0759,OpenDDS,formating and output fixes/
,,0.0865,OpenDDS,formating and output fixes/
,,0.0865,OpenDDS,formating and output fixes/
,,0.0801,OpenDDS,formating and output fixes/
,,0.0621,OpenDDS,Fixes after Review/
,,0.1142,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1142,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1163,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1085,OpenDDS,Merge pull request from mitza-oci/master Fixed GuardConditions _narrow/Fixed GuardConditions _narrow Its not an IDL type but it needs to act more like one. LocalObject template not compatible with multiple interface inheritance./
,,0.1163,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1163,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1183,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.0859,OpenDDS,More Proper Java Cross Compile Fix various issues with cross compiling Java for Android on Windows./
,,0.1004,OpenDDS,idl2jni_jni.h: fix typo/More Proper Java Cross Compile Fix various issues with cross compiling Java for Android on Windows./
,,0.1163,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.0828,OpenDDS,Merge pull request from iguessthislldo/igtd/opendds_idl_leak Fix Memory Leak in opendds_idl/Fix Memory Leak in opendds_idl/
,,0.071,OpenDDS,Fix MultiTopic Querry Error Messages/
,,0.0981,OpenDDS,Merge pull request from mitza-oci/master Fixed GuardConditions _narrow/Fixed GuardConditions _narrow Its not an IDL type but it needs to act more like one. LocalObject template not compatible with multiple interface inheritance./
,,0.071,OpenDDS,Fix MultiTopic Querry Error Messages/
,,0.0689,OpenDDS,Fix MultiTopic Querry Error Messages/
,,0.0556,OpenDDS,Whitespace fixes/
,,0.1163,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1163,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1163,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1183,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1204,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.0935,OpenDDS,fixing double free issue introduced by removing strdup/fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1121,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1163,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1183,OpenDDS,fixing many (not all) ACE_ERROR usages with priorities other than LM_ERROR and LM_WARNING/
,,0.1033,OpenDDS,Merge pull request from mitza-oci/master Fixed GuardConditions _narrow/Fixed GuardConditions _narrow Its not an IDL type but it needs to act more like one. LocalObject template not compatible with multiple interface inheritance./
,,0.0813,OpenDDS,Merge pull request from jrw972/participant-location-topic-memory-leaks Fix memory leaks in ParticipantLocationTopic test/
,,0.0813,OpenDDS,Merge pull request from jrw972/participant-location-topic-memory-leaks Fix memory leaks in ParticipantLocationTopic test/
,,0.0833,OpenDDS,Merge pull request from jrw972/participant-location-topic-memory-leaks Fix memory leaks in ParticipantLocationTopic test/
,,0.0813,OpenDDS,Merge pull request from jrw972/participant-location-topic-memory-leaks Fix memory leaks in ParticipantLocationTopic test/
,,0.075,OpenDDS,"json generator fixes round 2, versioning for core_idl_json/fixing versioned namespace issue for opendds_idl json generators/"
,,0.0887,OpenDDS,"json generator fixes round 2, versioning for core_idl_json/fixing versioned namespace issue for opendds_idl json generators/"
,,0.0867,OpenDDS,"json generator fixes round 2, versioning for core_idl_json/fixing versioned namespace issue for opendds_idl json generators/"
,,0.0744,pljava,Fixed bug occuring sporadically on re-entry./Fix bug
,,0.0717,pljava,Fixed bug occuring sporadically on re-entry./
,,0.0697,pljava,Fixed bug occuring sporadically on re-entry./
,,0.0758,pljava,Fixed bug occuring sporadically on re-entry./
,,0.0681,pljava,Fixed some gcjh compiler problems/
,,0.0758,pljava,Fixed bug occuring sporadically on re-entry./
,,0.0786,pljava,Fixed some gcjh compiler problems/
,,0.075,pljava,"Fixed misspelled ""Retrieved""/Fixed bug# 1216/Fixed bug bug"
,,0.0744,pljava,Fixed bug# 1216/Fixed bug# 1216/Fixed bug
,,0.161,pljava,Fixed signed/unsigned problem./Fixed signed/unsigned warnings/Fixed signed/unsigned warnings/
,,0.0653,pljava,Fixed memory leak that occured during recursive calls to function returning sets/
,,0.0782,pljava,Fixed memory leak that occured during recursive calls to function returning sets/Fixed bug
,,0.078,pljava,Fixed some memory leaks/
,,0.0786,pljava,Fixed bug some memory leaks/
,,0.1266,pljava,Fixed memory leak that occured during recursive calls to function returning sets/Fixed some memory leaks/Fixed some memory leaks/
,,0.10800000000000001,pljava,Fixed some memory leaks/Fixed some memory leaks/
,,0.0609,pljava,Fixed bug
,,0.0764,pljava,Fixed some backward compatibility issues Added explicit coercion capability/
,,0.0724,pljava,Fixed some backward compatibility issues Added explicit coercion capability/
,,0.0744,pljava,Fixed some backward compatibility issues Added explicit coercion capability/
,,0.0784,pljava,Fixed some backward compatibility issues Added explicit coercion capability/
,,0.0782,pljava,Fixed some backward compatibility issues Added explicit coercion capability/Fixed copy/paste mistakes/
,,0.0724,pljava,Fixed some backward compatibility issues Added explicit coercion capability/
,,0.0762,pljava,"Fixed some backward compatibility issues Added explicit coercion capability/Fixed glitch causing bytea[] to fail. Added ""char""[]/"
,,0.0857,pljava,Fixed some backward compatibility issues Added explicit coercion capability/Fixed copy/paste mistakes/
,,0.0763,pljava,Fixed some backward compatibility issues Added explicit coercion capability/Fixed copy/paste mistakes/
,,0.0954,pljava,Merge pull request from shawjef3/master Fix compilation error against 9.4 due to a missing function argument./Fix compilation error against 9.4 due to a missing function argument./
,,0.0899,pljava,Only fix javadoc nits that JDK 8 calls errors. Annoying: Skipping pull request for this./
,,0.10400000000000001,pljava,Only fix javadoc nits that JDK 8 calls errors. Annoying: Skipping pull request for this./
,,0.096,pljava,Only fix javadoc nits that JDK 8 calls errors. Annoying: Skipping pull request for this./
,,0.0939,pljava,Only fix javadoc nits that JDK 8 calls errors. Annoying: Skipping pull request for this./
,,0.0919,pljava,Only fix javadoc nits that JDK 8 calls errors. Annoying: Skipping pull request for this./
,,0.1164,pljava,Run unicode roundtrip test only on UTF8 server. PostgreSQLs different definition of chr() for every encoding other than UTF8 leads to spurious test failure for other encodings. Pushing directly trivial change./Only fix javadoc nits that JDK 8 calls errors. Annoying: Skipping pull request for this./
,,0.096,pljava,Only fix javadoc nits that JDK 8 calls errors. Annoying: Skipping pull request for this./
,,0.0989,pljava,"Handle widening of portalPos and demise of posOverflow. No need for version conditionals around isPosOverflow: it isnt in an API class, and nothing in this code base uses it, so out it goes. This eliminates the other compile-time error that was blocking compilation for PG 9.6, but its not the last thing to have had its width changed./"
,,0.085,pljava,Merge pull request from tada/bug/REL1_5_STABLE/issue142 Enable row triggers to suppress operations./Enable row triggers to suppress operations. Adds to TriggerData the suppress() method suggested in issue
,,0.0566,realm-java,Updated with newest TightDB containing BREAKING database file changes. (API ver 10)/
,,0.0625,realm-java,"Added tests and examples for the ""average"" method (issue "".generated"" suffix in generated sources packages (issue"
,,0.0636,realm-java,Adjusted examples to the inline subtable construction (issue
,,0.1004,realm-java,Merge remote-tracking branch Tightdb/move_last_over Conflicts: tightdb-java-core/src/main/java/com/tightdb/typed/AbstractTable.java Contains BUG FIX: GetBinaryData() could throw when empty BinaryData. AFTER Merge: Contains new move_last_over method (currently disabled) Removed the graph example./
,,0.0965,realm-java,Merge remote-tracking branch Tightdb/move_last_over Conflicts: tightdb-java-core/src/main/java/com/tightdb/typed/AbstractTable.java Contains BUG FIX: GetBinaryData() could throw when empty BinaryData. AFTER Merge: Contains new move_last_over method (currently disabled) Removed the graph example./
,,0.0998,realm-java,Added testcases for Mixed float and double/
,,0.0926,realm-java,Merge remote-tracking branch Tightdb/move_last_over Conflicts: tightdb-java-core/src/main/java/com/tightdb/typed/AbstractTable.java Contains BUG FIX: GetBinaryData() could throw when empty BinaryData. AFTER Merge: Contains new move_last_over method (currently disabled) Removed the graph example./
,,0.1121,realm-java,Merge remote-tracking branch Tightdb/move_last_over Conflicts: tightdb-java-core/src/main/java/com/tightdb/typed/AbstractTable.java Contains BUG FIX: GetBinaryData() could throw when empty BinaryData. AFTER Merge: Contains new move_last_over method (currently disabled) Removed the graph example./
,,0.0932,realm-java,"Merge remote-tracking branch Tightdb/move_last_over Conflicts: tightdb-java-core/src/main/java/com/tightdb/typed/AbstractTable.java Contains BUG FIX: GetBinaryData() could throw when empty BinaryData. AFTER Merge: Contains new move_last_over method (currently disabled) Removed the graph example./bugfix: wrong error in GetBinaryData() could occur when len=0/WIP: Updated with float, double support. Still a crash./"
,,0.1004,realm-java,Merge remote-tracking branch Tightdb/move_last_over Conflicts: tightdb-java-core/src/main/java/com/tightdb/typed/AbstractTable.java Contains BUG FIX: GetBinaryData() could throw when empty BinaryData. AFTER Merge: Contains new move_last_over method (currently disabled) Removed the graph example./
,,0.0763,realm-java,"Added testcases for Mixed float and double/WIP: Updated with float, double support. Still a crash./"
,,0.1402,realm-java,"Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Added exception for getTable(null) and getTable(""""). Updated an example to use new addColumn() methods./"
,,0.1568,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/Deprecated ReadTransaction.close() Throw IllegalStateException if WriteTransaction.commit() is done twice./
,,0.1496,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/Deprecated ReadTransaction.close() Throw IllegalStateException if WriteTransaction.commit() is done twice./
,,0.2929,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.1496,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/Deprecated ReadTransaction.close() Throw IllegalStateException if WriteTransaction.commit() is done twice./
,,0.153,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/
,,0.1966,realm-java,"Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/"
,,0.4031,realm-java,"merge conflicts fixed/Merge pull request from mekjaer/v0.1.1 fixed jlong cast to int64/fixed jlong cast to int64/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch breaking2 of github.com:Tightdb/tightdb_java into breaking2/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Added exception handling to TableView (no tests)/Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/"
,,0.4715,realm-java,"merge conflicts fixed/Merge pull request from mekjaer/v0.1.1 fixed jlong cast to int64/fixed jlong cast to int64/Back-porting Brians fixes to B29 (actually B30)/Merge pull request from Tightdb/datebug Fixed testcase bug. Fixed a bug in 32 bit Ubuntu in the new find() method/debugging datebug fixed one/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch breaking2 of github.com:Tightdb/tightdb_java into breaking2/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-fixleak Fixed leak in Query/Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Query could leak./Exception handling added for Query (not tested)/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Merged develop into breaking updates and updated test case correspondingly/"
,,0.4048,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-equals Added com.tightdb.Table.equals() and fixed com.tightdb.Group.equals(/Fixed bug in Group.equals(). Added Table.equals and tests./Merge remote-tracking branch Tightdb/develop into dev-fixleak/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/
,,0.2481,realm-java,"merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from hovoere/file_exceptions File exceptions/Updated group exceptions to be RuntimeExceptions/Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Fixed SubTableDefinition to check for wrong columnIndex and exceptions. And some refactoring. Changed OutOfMemory Exception til com.tightdb.OutOfMemory/Added test cases for all Exceptions that native interface can throw./Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/ BREAKING CHANGE: Group() now takes a new OpenMode parameter and not a boolean. It now supports multiple ways to open a group. (ReadOnly, ReadWrite, WriteNoCreate) + Added Group.Commit()/"
,,0.5055,realm-java,"merge conflicts fixed/Merge pull request from Tightdb/datebug Fixed testcase bug. Fixed a bug in 32 bit Ubuntu in the new find() method/Fixed testcase bug in date-test/debugging datebug fixed one/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch breaking2 of github.com:Tightdb/tightdb_java into breaking2/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-equals Added com.tightdb.Table.equals() and fixed com.tightdb.Group.equals(/Fixed bug in Group.equals(). Added Table.equals and tests./Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Fixed merge bug./Fixed SubTableDefinition to check for wrong columnIndex and exceptions. And some refactoring. Changed OutOfMemory Exception til com.tightdb.OutOfMemory/Merge remote-tracking branch Tightdb/develop into develop-exceptions Conflicts: tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from hovoere/dev Exception on non const get_spec for subtables/Exception on non const get_spec for subtables/Exception handling for Table (not tested)/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Renaming to adjustColumnValues. Added exception thrown in JNI/Merge branch develop into Breaking-updates/Added parameter checks to all Table methods. (lacking testcases) Changed Exception for invalid Table form IllegalArgumentException to InvalidStateException./"
,,0.5268,realm-java,"merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge pull request from mekjaer/Breaking-updates Master merged into Breaking-updates + SharedGroup examples/Merge branch master of github.com:Tightdb/tightdb_java into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewTest.java/Merge pull request from hovoere/dev_into_breaking Merged develop into Breaking/Merged develop into Breaking/Fixed merge conflicts/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch breaking2 of github.com:Tightdb/tightdb_java into breaking2/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Merge remote-tracking branch Tightdb/develop into dev-fixleak/Added exception handling to TableView (no tests)/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Merge branch develop into Breaking-updates/"
,,0.3543,realm-java,"merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/"
,,0.4189,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-equals Added com.tightdb.Table.equals() and fixed com.tightdb.Group.equals(/Fixed bug in Group.equals(). Added Table.equals and tests./Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Merge remote-tracking branch Tightdb/develop into develop-exceptions Conflicts: tightdb_jni/src/com_tightdb_table.cpp/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/
,,0.3478,realm-java,"merge conflicts fixed/Merge pull request from mekjaer/v0.1.1 sorting and getting on negative column index no longer breaks core/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-equals Added com.tightdb.Table.equals() and fixed com.tightdb.Group.equals(/Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Added test cases for all Exceptions that native interface can throw./Added exception handling for Group (untested)/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Made testcases pass. Disabled some of the new tests for View and Query, until the required checks are implemented/Merge branch develop into Breaking-updates/Added parameter checks to all Table methods. (lacking testcases) Changed Exception for invalid Table form IllegalArgumentException to InvalidStateException./"
,,0.1747,realm-java,"merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/ BREAKING CHANGE: Group() now takes a new OpenMode parameter and not a boolean. It now supports multiple ways to open a group. (ReadOnly, ReadWrite, WriteNoCreate) + Added Group.Commit()/"
,,0.1283,realm-java,merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/
,,0.1822,realm-java,"Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Added test cases for all Exceptions that native interface can throw./Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/ BREAKING CHANGE: Group() now takes a new OpenMode parameter and not a boolean. It now supports multiple ways to open a group. (ReadOnly, ReadWrite, WriteNoCreate) + Added Group.Commit()/"
,,0.348,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/Breaking-updates Breaking updates lookup outcommented in table and tableview + fixes in quick benchmark tests/Merge pull request from mekjaer/develop Benchmark case updated with moved setIndex. Float and Double column search fixed in typed. Pom file now has modules again/tutorial small fix + fixes for typed float and double column + test cases/
,,0.266,realm-java,"merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/mekjaer-dev Merging changes from develop into Breaking-updates + Showcase example now uses built-in toString()/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./"
,,0.1976,realm-java,"Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Example Util changed to ExampleHelper to avoid conflict with internal.Util/"
,,0.1608,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/
,,0.3207,realm-java,"merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-fixleak Fixed leak in Query/spelling fixed/Query could leak./table closed getmethod exceptions added/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Example Util changed to ExampleHelper to avoid conflict with internal.Util/Merge branch develop into Breaking-updates/Added parameter checks to all Table methods. (lacking testcases) Changed Exception for invalid Table form IllegalArgumentException to InvalidStateException./"
,,0.162,realm-java,merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/
,,0.3438,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/fixed test case for query with limit/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/adjust() renamed in Typed interface + example fixes/fixed indentation/fixed indention/Renaming to adjustColumnValues. Added exception thrown in JNI/Merge branch develop into Breaking-updates/
,,0.3583,realm-java,"merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/fixed test case for query with limit/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Testcases added to SharedGroup and Transactions/Added test cases for all Exceptions that native interface can throw./Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Merged develop into breaking updates and updated test case correspondingly/Renaming to adjustColumnValues. Added exception thrown in JNI/"
,,0.1608,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/
,,0.43799999999999994,realm-java,"Updated build.sh to test ref-doc. Updated examples. Some needs fixing./merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge pull request from hovoere/dev_into_breaking Merged develop into Breaking/Merged develop into Breaking/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-fixleak Fixed leak in Query/Merge pull request from Tightdb/develop-exceptions Exceptions handling added/Query could leak./Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Fixed SubTableDefinition to check for wrong columnIndex and exceptions. And some refactoring. Changed OutOfMemory Exception til com.tightdb.OutOfMemory/Merge remote-tracking branch Tightdb/develop into develop-exceptions Conflicts: tightdb_jni/src/com_tightdb_table.cpp/Fixed type errors/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./"
,,0.5112,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge pull request from hovoere/dev_into_breaking Merged develop into Breaking/Merged develop into Breaking/Fixed merge conflicts/merged breaking-updates and resolved conflicts/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged develop into breaking/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/Breaking-updates Breaking updates lookup outcommented in table and tableview + fixes in quick benchmark tests/Merge pull request from mekjaer/develop Benchmark case updated with moved setIndex. Float and Double column search fixed in typed. Pom file now has modules again/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore tightdb-java-test/src/test/java/com/tightdb/JNITableTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/tutorial small fix + fixes for typed float and double column + test cases/
,,0.2407,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/
,,0.3706,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-fixleak Fixed leak in Query/Query could leak./Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/
,,0.3313,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/fixed test case for query with limit/Merge remote-tracking branch Tightdb/develop into dev-fixleak/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/adjust() renamed in Typed interface + example fixes/
,,0.48,realm-java,"Lookup reenabled on typed table. Test case added, Check for null otherwise core crash/merge conflicts fixed/Merge pull request from astigsen/master Mostly doc fixes/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge pull request from hovoere/dev_into_breaking Merged develop into Breaking/Merged develop into Breaking/Fixed merge conflicts/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged develop into breaking/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-equals Added com.tightdb.Table.equals() and fixed com.tightdb.Group.equals(/Fixed bug in Group.equals(). Added Table.equals and tests./Merge remote-tracking branch Tightdb/develop into dev-fixleak/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/removed break lines/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/"
,,0.4363,realm-java,"merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged develop into breaking/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-equals Added com.tightdb.Table.equals() and fixed com.tightdb.Group.equals(/Fixed bug in Group.equals(). Added Table.equals and tests./Merge pull request from hovoere/file_exceptions File exceptions/Updated group exceptions to be RuntimeExceptions/Merge remote-tracking branch Tightdb/develop into dev-fixleak/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Merged develop into breaking updates and updated test case correspondingly/ BREAKING CHANGE: Group() now takes a new OpenMode parameter and not a boolean. It now supports multiple ways to open a group. (ReadOnly, ReadWrite, WriteNoCreate) + Added Group.Commit()/Added exception for getTable(null) and getTable(""""). Updated an example to use new addColumn() methods./"
,,0.3889,realm-java,merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/master into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNITableTest.java tightdb-java-test/src/test/java/com/tightdb/typed/SubtableTest.java/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/merged breaking-updates and resolved conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged develop into breaking/merged with breaking updates/
,,0.2769,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/
,,0.2915,realm-java,merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge remote-tracking branch Tightdb/develop into dev-fixleak/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/adjust() renamed in Typed interface + example fixes/
,,0.2354,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/
,,0.3795,realm-java,merge conflicts fixed/Merge pull request from astigsen/master Mostly doc fixes/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/merged breaking-updates and resolved conflicts/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged develop into breaking/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/fixed test case for query with limit/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore tightdb-java-test/src/test/java/com/tightdb/JNITableTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Added testcase for limit argument/
,,0.308,realm-java,"merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/fixed test case for query with limit/Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/"
,,0.3,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Testcases added to SharedGroup and Transactions/
,,0.2265,realm-java,merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Merge remote-tracking branch Tightdb/develop into develop-exceptions Conflicts: tightdb_jni/src/com_tightdb_table.cpp/
,,0.3271,realm-java,add exception. Throw it when wrong type is acessed from Mixed type/merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/
,,0.4448,realm-java,"merge conflicts fixed/More comprehensive testcase/Added where() to TableOrView interface and updated testcase/small update of testcase/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/merged breaking-updates and resolved conflicts/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-fixleak Fixed leak in Query/Query could leak./Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Merged develop into breaking updates and updated test case correspondingly/Merge pull request from hovoere/develop Test for exceptions on wrong parameter types in Query, and column out of bounds/Test for thrown exception in queri on wrong column types/Fixed code layout/"
,,0.3418,realm-java,"merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-fixleak Fixed leak in Query/Query could leak./Table.close() now private (added private_debug_close() instead. Added better support for detecting valid View and Query after close of table. Still not completely tested, also missing core-support./Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/Merged develop into breaking updates and updated test case correspondingly/minor fixes./"
,,0.41100000000000003,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch breaking2 of github.com:Tightdb/tightdb_java into breaking2/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Resolved confligt in merging with Breaking-updates/Test case check that all other column than String throws exception when setting index/Merge branch develop into Breaking-updates/Updated testcases/
,,0.3394,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge pull request from mekjaer/Breaking-updates Master merged into Breaking-updates + SharedGroup examples/Merge branch master of github.com:Tightdb/tightdb_java into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewTest.java/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/
,,0.4746,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge pull request from hovoere/dev_into_breaking Merged develop into Breaking/Merged develop into Breaking/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged develop into breaking/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Merge remote-tracking branch Tightdb/develop into develop-exceptions Conflicts: tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from hovoere/dev Exception on non const get_spec for subtables/Exception on non const get_spec for subtables/
,,0.1874,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop into Breaking-updates/
,,0.2865,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.1361,realm-java,"Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/master Merging changes from develop into Breaking-updates + ref doc setup. Many changes, please review/"
,,0.4819,realm-java,merge conflicts fixed/Merge pull request from mekjaer/master_new lookup reimplemented and fixed test cases for column type/lookup reimplemented and fixed test cases for column type/Added where() to TableOrView interface and updated testcase/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge pull request from hovoere/dev_into_breaking Merged develop into Breaking/Merged develop into Breaking/Fixed merge conflicts/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch breaking2 of github.com:Tightdb/tightdb_java into breaking2/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/Breaking-updates Breaking updates lookup outcommented in table and tableview + fixes in quick benchmark tests/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/Renaming to adjustColumnValues. Added exception thrown in JNI/
,,0.1917,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/
,,0.2913,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2913,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2849,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.1917,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/
,,0.3219,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/Breaking-updates Breaking updates lookup outcommented in table and tableview + fixes in quick benchmark tests/Merge pull request from mekjaer/develop Benchmark case updated with moved setIndex. Float and Double column search fixed in typed. Pom file now has modules again/tutorial small fix + fixes for typed float and double column + test cases/
,,0.1466,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/
,,0.1891,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/merged breaking-updates and resolved conflicts/
,,0.3008,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.3194,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/Breaking-updates Breaking updates lookup outcommented in table and tableview + fixes in quick benchmark tests/Merge pull request from mekjaer/develop Benchmark case updated with moved setIndex. Float and Double column search fixed in typed. Pom file now has modules again/tutorial small fix + fixes for typed float and double column + test cases/
,,0.3731,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch breaking2 of github.com:Tightdb/tightdb_java into breaking2/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/adjust() renamed in Typed interface + example fixes/Renaming to adjustColumnValues. Added exception thrown in JNI/
,,0.2865,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2636,realm-java,merge conflicts fixed/Merge pull request from mekjaer/v0.1.1 Typed interface small fixes and prepare for automatic run of examples in.../Typed interface small fixes and prepare for automatic run of examples in build.sh/Merge pull request from astigsen/master Mostly doc fixes/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore tightdb-java-test/src/test/java/com/tightdb/JNITableTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/
,,0.1917,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/
,,0.3483,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/
,,0.3384,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/merged breaking-updates and resolved conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore tightdb-java-test/src/test/java/com/tightdb/JNITableTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/
,,0.2976,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2944,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.1511,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge remote-tracking branch Tightdb/develop into dev-fixleak/
,,0.1427,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/
,,0.1917,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/
,,0.3383,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/
,,0.2738,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/merged breaking-updates and resolved conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/
,,0.3024,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2944,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.4313,realm-java,merge conflicts fixed/Merge pull request from mekjaer/v0.1.1 Typed interface small fixes and prepare for automatic run of examples in.../Typed interface small fixes and prepare for automatic run of examples in build.sh/Merge pull request from astigsen/master Mostly doc fixes/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/Breaking-updates Breaking updates lookup outcommented in table and tableview + fixes in quick benchmark tests/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Merge pull request from Tightdb/dev-equals Added com.tightdb.Table.equals() and fixed com.tightdb.Group.equals(/Fixed bug in Group.equals(). Added Table.equals and tests./Merge remote-tracking branch Tightdb/develop into dev-fixleak/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/
,,0.1909,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/merged breaking-updates and resolved conflicts/
,,0.2881,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2881,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2974,realm-java,"Lookup reenabled on typed table. Test case added, Check for null otherwise core crash/merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/Breaking-updates Breaking updates lookup outcommented in table and tableview + fixes in quick benchmark tests/"
,,0.2913,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.4093,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/merged breaking-updates and resolved conflicts/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore tightdb-java-test/src/test/java/com/tightdb/JNITableTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/
,,0.3413,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: .JNI-h-file-generation.launch/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/merged breaking-updates and resolved conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore tightdb-java-test/src/test/java/com/tightdb/JNITableTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/
,,0.2897,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2849,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2992,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.2913,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/merged develop into breaking/
,,0.1866,realm-java,renamed exception/add exception. Throw it when wrong type is acessed from Mixed type/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/
,,0.2245,realm-java,merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNICloseTest.java tightdb-java-test/src/test/java/com/tightdb/JNIQueryTest.java tightdb-java-test/src/test/java/com/tightdb/JNISubtableTest.java tightdb-java-test/src/test/java/com/tightdb/JNITableInsertTest.java tightdb-java-test/src/test/java/com/tightdb/JNITransactions.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSearchTest.java tightdb-java-test/src/test/java/com/tightdb/JNIViewSortTest.java tightdb-java-test/src/test/java/com/tightdb/experiment/SetIndexTest.java tightdb-java-test/src/test/java/com/tightdb/typed/GroupTest.java tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java tightdb_jni/src/com_tightdb_Group.cpp tightdb_jni/src/com_tightdb_table.cpp/Testcases added to SharedGroup and Transactions/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/Deprecated ReadTransaction.close() Throw IllegalStateException if WriteTransaction.commit() is done twice./
,,0.1496,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge branch develop into Breaking-updates Conflicts: tightdb-java-core/src/main/java/com/tightdb/Table.java tightdb-java-test/src/test/java/com/tightdb/experiment/GroupToStringTest.java/Deprecated ReadTransaction.close() Throw IllegalStateException if WriteTransaction.commit() is done twice./
,,0.1508,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge pull request from mekjaer/master prevent crash when providing null as byte[] in typed and avoid NullPointerException in exception in dyn and sort in read trans/merge fixes/
,,0.1497,realm-java,merge conflicts fixed/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/master into Breaking-updates Conflicts: tightdb-java-test/src/test/java/com/tightdb/JNITableTest.java tightdb-java-test/src/test/java/com/tightdb/typed/SubtableTest.java/
,,0.2372,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/
,,0.3171,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/merged with breaking updates/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/develop into dev-fixleak/Merge branch develop of github.com:Tightdb/tightdb_java2 into Breaking-updates Conflicts: .gitignore doc/changes.txt tightdb-java-test/src/test/java/com/tightdb/typed/TableTest.java/
,,0.2903,realm-java,merge conflicts fixed/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: pom.xml/Fixed merge conflicts/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates/Merge pull request from Tightdb/breaking2 Breaking2 in Breaking-updates/Merge branch breaking2 of github.com:Tightdb/tightdb_java into breaking2/
,,0.1917,realm-java,Merge branch Breaking-updates of github.com:Tightdb/tightdb_java into breaking-updates Conflicts: doc/ref/data/group_ref.yaml/Merge branch Breaking-updates of github.com:Tightdb/tightdb_java2 into Breaking-updates/Merge remote-tracking branch Tightdb/Breaking-updates into Breaking-updates Conflicts: doc/changes.txt/
,,0.1534,realm-java,"Fixes due to on two methods more./Fixed table.find_first_* and tableview.find_first_* to return for 32 bit architectures./Fixed table.find_first_* and tableview.find_first_* to return for 32 bit architectures./Merge pull request from mekjaer/gc-issue Gc issue. Implementation of Context in all tightdb objects/Merge branch master of github.com:Tightdb/tightdb_java into group-readonly-bug/debug added. Removed class reference in jni TR output, just the pointer now/fixed merge conflicts/better testcase for getSortedView + ref doc added. Check for column types/Merge pull request from Tightdb/master fixed bug in lookup(), which didnt return on 32 bit when it should/fixed bug in lookup(), which didnt return on 32 bit when it should/Merge pull request from mekjaer/doc-fixes Doc fixes/Merge pull request from mekjaer/error_message_schema rename error message to use getSubTableSchema instead/rename error message to use getSubTableSchema instead/"
,,0.1378,realm-java,Fixed on two methods more./Fixed table.find_first_* and tableview.find_first_* to return for 32 bit architectures./Fixed table.find_first_* and tableview.find_first_* to return for 32 bit architectures./Merge pull request from mekjaer/gc-issue Gc issue. Implementation of Context in all tightdb objects/Merge branch master of github.com:Tightdb/tightdb_java into group-readonly-bug/added no exception note/fixed merge conflicts/better testcase for getSortedView + ref doc added. Check for column types/
,,0.1643,realm-java,"Eliminate warnings relating to `MAX_JLONG`. First warning was eliminated by add suffix `LL` to the constant. This is necessary becuase `long long` is the smallest and only type that ANSI guarantees is 64 bits. Likewise, `MAX_JINT` must have an `L` suffix, because `long` is the smallest type that ANSI guarantees is 32 bits. The second and last warning was removed by using `util::int_less_than_or_equal()` (a utility function created precisely for this purpose)./Fixed table.find_first_* and tableview.find_first_* to return for 32 bit architectures./Fixed table.find_first_* and tableview.find_first_* to return for 32 bit architectures./Fixes due to some core header files having been moved into subdir /util//"
,,0.0586,realm-java,Merge branch master of github.com:Tightdb/tightdb_java into group-readonly-bug/small fixes in test and refdoc/
,,0.0723,realm-java,fixed merge conflicts/
,,0.1105,realm-java,Changed NullPointerException to IllegalArgumentException when its an argument thats wrong./Merge branch master of github.com:Tightdb/tightdb_java into group-readonly-bug/fixed merge conflicts/Merge pull request from mekjaer/set-string-null throw exception when setting null on string + test cases/throw exception when setting null on string + test cases/Merge pull request from mekjaer/check_for_minus_one Check for minus one + better exception descr when getting wrong mixed value/enabled test for table.lookup. Throws more specific exceptions. Non-breaking as they are subclasses of RuntimeException/better testcase for getSortedView + ref doc added. Check for column types/Merge pull request from mekjaer/doc-fixes Doc fixes/
,,0.0676,realm-java,Merge branch master of github.com:Tightdb/tightdb_java into group-readonly-bug/more lines breaks/subtable sort test case added + try fail added more places/
,,0.1235,realm-java,Merge pull request from mekjaer/gc-issue Gc issue. Implementation of Context in all tightdb objects/Merge branch master of github.com:Tightdb/tightdb_java into group-readonly-bug/one more line break/more lines breaks/subtable sort test case added + try fail added more places/Merge pull request from mekjaer/check_for_minus_one Check for minus one + better exception descr when getting wrong mixed value/better exception description when getting wrong type from Mixed/Merge pull request from Tightdb/doc-fixes Doc fixes into master/Merge pull request from Tightdb/doc-fixes Doc fixes/
,,0.1141,realm-java,fixed merge conflicts/fixed merge-conflicts/
,,0.1066,realm-java,Merge pull request from mekjaer/doc-fixes Doc fixes/Merge pull request from mekjaer/mixed-runtime-exc add exception. Throw it when wrong type is acessed from Mixed type/
,,0.1089,realm-java,"fixed indentation./Added testcases for unbalanced subtable()/end_subtable()/moved check to java and changed to illegalArgument exception/Merge pull request from mekjaer/check_for_minus_one Check for minus one + better exception descr when getting wrong mixed value/Merge pull request from mekjaer/doc-fixes Doc fixes/fail messages/added test cases, currently it will crash the core/"
,,0.0852,realm-java,Changed NullPointerException to IllegalArgumentException when its an argument thats wrong./Merge branch master of github.com:Tightdb/tightdb_java into group-readonly-bug/editorial fix/Merge pull request from mekjaer/check_for_minus_one Check for minus one + better exception descr when getting wrong mixed value/
,,0.0765,realm-java,fixed merge conflicts/
,,0.0639,realm-java,fixed merge conflicts/
,,0.0744,realm-java,fixed merge conflicts/
,,0.0744,realm-java,fixed merge conflicts/
,,0.1667,realm-java,Merge pull request from mekjaer/check_for_minus_one Check for minus one + better exception descr when getting wrong mixed value/better exception description when getting wrong type from Mixed/Merge pull request from mekjaer/doc-fixes Doc fixes/Merge pull request from mekjaer/mixed-runtime-exc add exception. Throw it when wrong type is acessed from Mixed type/
,,0.0588,realm-java,Doc fixes and spelling/
,,0.114,realm-java,Merge pull request from realm/mc-non-ascii-warning-fix Fix warning caused by non-ascii chars/Fix warning caused by non-ascii chars/
,,0.0653,realm-java,Merge pull request from realm/cm/patch/fix-jsonexample Fixed bug in jsonExample/Fixed wrong key in son string/
,,0.0664,realm-java,fix intro Lint warning (#2583)/
,,0.0577,realm-java,Merge pull request from realm/lk/fix-doc Fix javadoc/Fix javadoc/
,,0.0618,realm-java,Fixed unit tests./
,,0.0669,realm-java,Fixed leaking unit tests./
,,0.0648,realm-java,"Nh/fix 3966 (#3979) Realm migration is triggered, when the primary key definition is altered (#3966)/"
,,0.0669,realm-java,"Nh/fix 3966 (#3979) Realm migration is triggered, when the primary key definition is altered (#3966)/"
,,0.0759,realm-java,Nh/fixes token renew (#4040) * fixes and fixes
,,0.0694,realm-java,Nh/fixes token renew (#4040) * fixes and fixes
,,0.0673,realm-java,Nh/fixes token renew (#4040) * fixes and fixes
,,0.0804,realm-java,Enable and fix warnings (#3961) Adapt the same warning options from object store/
,,0.0723,realm-java,"Fix memory leak (#3993) (#3995) (#3996) Fix memory leak (#3993)/Fix memory leak (#3993) (#3995) Fix memory leak (#3993)/Revert ""Fix memory leak (#3993)."" This reverts commit f1bcb141244f32008b9c226c255a5a531fb66217./Fix memory leak (#3993)./Merge pull request from realm/merge-a8d647-to-master Fix merge from a8d647 to master/"
,,0.0828,realm-java,Enable and fix warnings (#3961) Adapt the same warning options from object store/Merge pull request from realm/merge-a8d647-to-master Fix merge from a8d647 to master/
,,0.0789,realm-java,Enable and fix warnings (#3961) Adapt the same warning options from object store/Merge pull request from realm/merge-a8d647-to-master Fix merge from a8d647 to master/
,,0.1466,realm-java,"Merge pull request from realm/merge-154419-to-master Fix merge from 154419 to master/Fix warnings from error prone plugin (#4339) This PR does not add the plugin, just fix the warnings. Ill add the plugin in another PR with suppressing some warnings./"
,,0.0664,realm-java,Merge pull request from realm/merge-6d0712-to-master Fix merge from 6d0712 to master/fix warnings reported by ErrorProne (#4341)/
,,0.1428,realm-java,"added field name information to exception messages (#4491) * add field name to the exception message when null is set to required field (#4484) * fix existing tests * fix cast style * update CHNAGELOG/Merge pull request from realm/merge-52ba43-to-master Fix merge from 52ba43 to master/Introduce ErrorProne plugin (#4342)/Merge pull request from realm/merge-154419-to-master Fix merge from 154419 to master/Fix warnings from error prone plugin (#4339) This PR does not add the plugin, just fix the warnings. Ill add the plugin in another PR with suppressing some warnings./Merge pull request from realm/merge-b10f18-to-master Fix merge from b10f18 to master/Add thread check to methods in DynamicRealmObject (#4259) * add a simple test case to expose * update Changelog * fix issue4258 * fix test failure * fix test process crash when RealmListTests#add_set_dynamicObjectFromOtherThread() fails/Merge pull request from realm/merge-3b3364-to-master Fix merge from 3b3364 to master/Fixed element type checking in DynamicRealmOject#setList(). (#4254) * Fixed element type checking in DynamicRealmOject#setList() (#4252). * Update CHANGELOG.md * PR fixes * PR fixes/"
,,0.0686,realm-java,Merge pull request from realm/merge-6d0712-to-master Fix merge from 6d0712 to master/fix warnings reported by ErrorProne (#4341)/
,,0.1264,realm-java,Fix threading bugs in RunInLooperThread rule (#4563) * Fix threading bugs in RunInLooperThread rule * Respond to comments Fix spelling errors Clean up multi-error recovery./remove breaking changes in SyncSession.ErrorHandler (#4408) * remove breaking changes in SyncSession.ErrorHandler * update CHANGELOG * update JNI file * update CMakeLists.txt * address review comments/
,,0.1561,realm-java,remove breaking changes in SyncSession.ErrorHandler (#4408) * remove breaking changes in SyncSession.ErrorHandler * update CHANGELOG * update JNI file * update CMakeLists.txt * address review comments/Merge pull request from realm/merge-6d0712-to-master Fix merge from 6d0712 to master/fix warnings reported by ErrorProne (#4341)/
,,0.128,realm-java,Fix threading bugs in RunInLooperThread rule (#4563) * Fix threading bugs in RunInLooperThread rule * Respond to comments Fix spelling errors Clean up multi-error recovery./remove breaking changes in SyncSession.ErrorHandler (#4408) * remove breaking changes in SyncSession.ErrorHandler * update CHANGELOG * update JNI file * update CMakeLists.txt * address review comments/
,,0.1232,realm-java,Fix threading bugs in RunInLooperThread rule (#4563) * Fix threading bugs in RunInLooperThread rule * Respond to comments Fix spelling errors Clean up multi-error recovery./remove breaking changes in SyncSession.ErrorHandler (#4408) * remove breaking changes in SyncSession.ErrorHandler * update CHANGELOG * update JNI file * update CMakeLists.txt * address review comments/
,,0.1357,realm-java,remove breaking changes in SyncSession.ErrorHandler (#4408) * remove breaking changes in SyncSession.ErrorHandler * update CHANGELOG * update JNI file * update CMakeLists.txt * address review comments/
,,0.0643,realm-java,Merge pull request from realm/merge-6d0712-to-master Fix merge from 6d0712 to master/fix warnings reported by ErrorProne (#4341)/
,,0.1357,realm-java,remove breaking changes in SyncSession.ErrorHandler (#4408) * remove breaking changes in SyncSession.ErrorHandler * update CHANGELOG * update JNI file * update CMakeLists.txt * address review comments/
,,0.1451,realm-java,remove breaking changes in SyncSession.ErrorHandler (#4408) * remove breaking changes in SyncSession.ErrorHandler * update CHANGELOG * update JNI file * update CMakeLists.txt * address review comments/Merge pull request from realm/merge-6d0712-to-master Fix merge from 6d0712 to master/fix warnings reported by ErrorProne (#4341)/Fix merge from 97fdf6 to master (#4156) * Release v2.3.1 * Prepare next release v2.3.2-SNAPSHOT * Nh/refresh access token (#4147) * Add a timer to refresh the access_token before it expires/
,,0.0621,realm-java,Merge pull request from realm/merge-6d0712-to-master Fix merge from 6d0712 to master/fix warnings reported by ErrorProne (#4341)/
,,0.1248,realm-java,remove breaking changes in SyncSession.ErrorHandler (#4408) * remove breaking changes in SyncSession.ErrorHandler * update CHANGELOG * update JNI file * update CMakeLists.txt * address review comments/
,,0.1466,realm-java,"Merge pull request from realm/merge-154419-to-master Fix merge from 154419 to master/Fix warnings from error prone plugin (#4339) This PR does not add the plugin, just fix the warnings. Ill add the plugin in another PR with suppressing some warnings./"
,,0.1466,realm-java,"Merge pull request from realm/merge-154419-to-master Fix merge from 154419 to master/Fix warnings from error prone plugin (#4339) This PR does not add the plugin, just fix the warnings. Ill add the plugin in another PR with suppressing some warnings./"
,,0.071,realm-java,Merge pull request from realm/my/fix_memory_leaking My/fix memory leaking/Merge pull request from realm/merge-dc09d5-to-master Fix merge from dc09d5 to master/
,,0.0577,realm-java,Merge pull request from realm/merge-fbb711-to-master Fix merge from fbb711 to master/
,,0.1898,realm-java,Merge pull request from realm/merge-ea02c9-to-master Fix merge from ea02c9 to master/Suppress warnings in JNIQueryTest and JNITableInsertTest (#4815) * suppress warnings in JNIQueryTest and JNITableInsertTest * stop suppressing deprecation warnings/
,,0.0686,realm-java,Fix admin users not connection correctly to ROS (#4760)/
,,0.0686,realm-java,Fix admin users not connection correctly to ROS (#4760)/
,,0.0934,realm-java,Add missing error codes. (#4981)/Fix merge conflict resulting in duplicate error code (#4915)/Add missing error codes (#4914)/Exponential Back Off now retry query in case of `ConnectionException` (#4805) * fixes
,,0.0697,realm-java,Exponential Back Off now retry query in case of `ConnectionException` (#4805) * fixes
,,0.0677,realm-java,Exponential Back Off now retry query in case of `ConnectionException` (#4805) * fixes
,,0.0686,realm-java,Fix admin users not connection correctly to ROS (#4760)/
,,0.0673,realm-java,Merge pull request from realm/merge-f2144d-to-master-4.0 Fix merge from f2144d to master-4.0/fixes (#4862) * fixes admin users not connection correctly to ROS (#4760)/
,,0.0609,realm-java,Merge branch releases into fixes/
,,0.0804,realm-java,Fix possible leaks with java callback in config (#5173) Holding strong java refs in the lambda function in the Object Store config will cause circular refs with SharedRealm/Callbacks/Config. That will leak some objects./
,,0.0804,realm-java,Fix possible leaks with java callback in config (#5173) Holding strong java refs in the lambda function in the Object Store config will cause circular refs with SharedRealm/Callbacks/Config. That will leak some objects./
,,0.0784,realm-java,Fix possible leaks with java callback in config (#5173) Holding strong java refs in the lambda function in the Object Store config will cause circular refs with SharedRealm/Callbacks/Config. That will leak some objects./
,,0.1393,realm-java,"fixes unknown error code * Logging a warning instead of throwing an exception when sync report an unknown error code,/"
,,0.1466,realm-java,"fixes unknown error code * Logging a warning instead of throwing an exception when sync report an unknown error code,/"
,,0.0636,realm-java,Merge pull request from realm/merge-1cf419-to-next-major Fix merge from 1cf419 to next-major/Fixed bad Javadoc/
,,0.0983,realm-java,Merge pull request from realm/merge-daebc8-to-master Fix merge from daebc8 to master/Nh/fixes local ref overflow (#5881) * Closing local JNI references to avoid the local table overflow * Fix changelog section & update internal section/
,,0.0636,realm-java,Fix various lifecycle issues with tests. Work-around for logs not being saved. (#6141)/
,,0.0636,realm-java,Fix various lifecycle issues with tests. Work-around for logs not being saved. (#6141)/
,,0.0636,realm-java,Fix various lifecycle issues with tests. Work-around for logs not being saved. (#6141)/
,,0.0636,realm-java,Fix various lifecycle issues with tests. Work-around for logs not being saved. (#6141)/
,,0.0837,rocksdb,"Sun Studio support, and fix for test related memory fixes. LevelDB patch for Sun Studio Based on a patch submitted by Theo Schlossnagle thanks This fixes Issue 17. Fix a couple of test related memory leaks. git-svn-id: 62dab493-f737-651d-591e-8d6aee1b9529/"
,,0.0804,rocksdb,"Sun Studio support, and fix for test related memory fixes. LevelDB patch for Sun Studio Based on a patch submitted by Theo Schlossnagle thanks This fixes Issue 17. Fix a couple of test related memory leaks. git-svn-id: 62dab493-f737-651d-591e-8d6aee1b9529/"
,,0.0854,rocksdb,"Sun Studio support, and fix for test related memory fixes. LevelDB patch for Sun Studio Based on a patch submitted by Theo Schlossnagle thanks This fixes Issue 17. Fix a couple of test related memory leaks. git-svn-id: 62dab493-f737-651d-591e-8d6aee1b9529/"
,,0.0904,rocksdb,"Sun Studio support, and fix for test related memory fixes. LevelDB patch for Sun Studio Based on a patch submitted by Theo Schlossnagle thanks This fixes Issue 17. Fix a couple of test related memory leaks. git-svn-id: 62dab493-f737-651d-591e-8d6aee1b9529/"
,,0.0837,rocksdb,"Sun Studio support, and fix for test related memory fixes. LevelDB patch for Sun Studio Based on a patch submitted by Theo Schlossnagle thanks This fixes Issue 17. Fix a couple of test related memory leaks. git-svn-id: 62dab493-f737-651d-591e-8d6aee1b9529/"
,,0.0782,rocksdb,fixed issues 66 (leaking files on disk error) and 68 (no sync of CURRENT file)/
,,0.0744,rocksdb,fixed issues 66 (leaking files on disk error) and 68 (no sync of CURRENT file)/
,,0.0725,rocksdb,fixed issues 66 (leaking files on disk error) and 68 (no sync of CURRENT file)/
,,0.0948,rocksdb,fix compile warning Summary: as subject Test Plan: compile Reviewers: dhruba Reviewed By: dhruba Differential Revision:
,,0.1793,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.18100000000000002,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1827,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1742,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1877,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1742,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1759,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1793,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1726,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1827,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.18100000000000002,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.18100000000000002,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1759,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.18600000000000003,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1057,rocksdb,Compilation error while compiling with OPT=-g Summary: make clean check OPT=-g fails leveldb::DBStatistics::getTickerCount(leveldb::Tickers)í: ./db/db_statistics.h:34: error: ëMAX_NO_TICKERSí was not declared in this scope util/ldb_cmd.cc:255: warning: left shift count >= width of type Test Plan: make clean check OPT=-g Reviewers: CC: Task ID: Blame Rev:/
,,0.1776,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1793,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1776,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1726,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1793,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.18100000000000002,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.1877,rocksdb,"Fix all warnings generated by option to the compiler. Summary: The default compilation process now uses ""-Wall"" to compile. Fix all compilation error generated by gcc. Test Plan: make all check Reviewers: heyongqiang, emayanke, sheki Reviewed By: heyongqiang CC: MarkCallaghan Differential Revision:"
,,0.0636,rocksdb,Quick fix for a string format Summary: Fix one more string format issue that throws warning in mac/
,,0.0987,rocksdb,"Revert ""Minor fixes found while trying to compile it using clang on Mac OS X"" This reverts commit 5f2c136c328a8dbb6c3cb3818881e30eeb916cd6./Minor fixes found while trying to compile it using clang on Mac OS X/"
,,0.0967,rocksdb,"Revert ""Minor fixes found while trying to compile it using clang on Mac OS X"" This reverts commit 5f2c136c328a8dbb6c3cb3818881e30eeb916cd6./Minor fixes found while trying to compile it using clang on Mac OS X/"
,,0.1222,rocksdb,Merge pull request from pborreli/typos Fixed typos/Fixed typos/
,,0.1275,rocksdb,"Move the compiler back to 4.8.1 + more small fixes Summary: 1. Moved the compiler back to 4.8.1 and uses Centos 5.2 binaries if OS is Centos 5.2. 2. Fixes this issue: 3. We use lot of c++11 features, so we cant pretend we can compile without them. Makes it a first class dependency. 4. Fix blob_store_test, which failes on Ubuntu with ""too many files opened"" error 5. Removed dependency on port/port_chromium.h, which does not even exist on our system Test Plan: make clean; make check Reviewers: dhruba, kailiu Reviewed By: kailiu CC: leveldb Differential Revision:"
,,0.1141,rocksdb,Merge pull request from Yancey1989/master fix compile warning/fix compile warning/
,,0.0708,rocksdb,Misc cleanup on performance branch Summary: Did some trivial stuffs: * Add more comments; * fix compilers warning messages (uninitialized variables). * etc Test Plan: make check/
,,0.1242,rocksdb,Merge pull request from pborreli/typos Fixed typos/Fixed typos/
,,0.1202,rocksdb,Merge pull request from pborreli/typos Fixed typos/Fixed typos/
,,0.1222,rocksdb,Merge pull request from pborreli/typos Fixed typos/Fixed typos/
,,0.1182,rocksdb,Merge pull request from pborreli/typos Fixed typos/Fixed typos/
,,0.1301,rocksdb,"Move the compiler back to 4.8.1 + more small fixes Summary: 1. Moved the compiler back to 4.8.1 and uses Centos 5.2 binaries if OS is Centos 5.2. 2. Fixes this issue: 3. We use lot of c++11 features, so we cant pretend we can compile without them. Makes it a first class dependency. 4. Fix blob_store_test, which failes on Ubuntu with ""too many files opened"" error 5. Removed dependency on port/port_chromium.h, which does not even exist on our system Test Plan: make clean; make check Reviewers: dhruba, kailiu Reviewed By: kailiu CC: leveldb Differential Revision:"
,,0.1222,rocksdb,"Move the compiler back to 4.8.1 + more small fixes Summary: 1. Moved the compiler back to 4.8.1 and uses Centos 5.2 binaries if OS is Centos 5.2. 2. Fixes this issue: 3. We use lot of c++11 features, so we cant pretend we can compile without them. Makes it a first class dependency. 4. Fix blob_store_test, which failes on Ubuntu with ""too many files opened"" error 5. Removed dependency on port/port_chromium.h, which does not even exist on our system Test Plan: make clean; make check Reviewers: dhruba, kailiu Reviewed By: kailiu CC: leveldb Differential Revision:"
,,0.1,rocksdb,"Revert ""Fix sst_dump and reduce_levels_test compile errors"" This reverts commit d8f00b4109e3df10be56141f3ff3ba9b0d10f585./Fix sst_dump and reduce_levels_test compile errors/"
,,0.0813,rocksdb,Fix iOS compile/fix release build/fix compile warning/
,,0.063,rocksdb,Merge pull request from Chilledheart/master Fix errors while building with clang (against libc++) under linux/Fix errors while building with clang/
,,0.0652,rocksdb,Merge pull request from Chilledheart/master Fix errors while building with clang (against libc++) under linux/Fix errors while building with clang/
,,0.1235,rocksdb,"[Java] Fixed the Java compilation error caused by PlainTableFactory API change. Summary: Fixed the Java compilation error caused by PlainTableFactory API change. Test Plan: make rocksdbjava make jdb_bench cd java;./jdb_bench.sh Reviewers: sdong, ljin, ankgup87, swapnilghike, zzbennett, rsumbaly, igor Reviewed By: igor Subscribers: leveldb Differential Revision:"
,,0.2506,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: for tools Summary: Previously I made `make check` work with but there are some tools that are not compiled using `make check`. Test Plan: make all Reviewers: yhchiang, rven, ljin, sdong Reviewed By: ljin, sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.1427,rocksdb,Merge pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang
,,0.341,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.3632,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision: pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.2814,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: Summary: This work on my compiler, but it turns out some compilers dont implicitly add constness, see: This diff adds constness explicitly. Test Plan: still compiles Reviewers: sdong Reviewed By: sdong Subscribers: leveldb Differential Revision:"
,,0.155,rocksdb,"Turn on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.0694,rocksdb,fixed conflict in java/Makefile/
,,0.1895,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: to fix auto_roll_logger_test Summary: auto_roll_logger_test fails from time to time. I wasnt able to repro the issue but by looking at the code, it seems like the initial ctime_ value can be set to the boundary of the second so it may still have a chance to get rolled when interval is set to 1 second. ``` util/auto_roll_logger_test.cc:120: failed: 118 > 708 Syscall param msync(start) points to unaddressable byte(s) at 0x4E46CE0: __msync_nocancel (in /usr/local/fbcode/gcc-4.8.1-glibc-2.17/lib/libpthread-2.17.so) by 0x584EFB: access_mem (Ginit.c:137) by 0x5834E3: _ULx86_64_access_reg (libunwind_i.h:162) by 0x585601: apply_reg_state (Gparser.c:742) by 0x5866BE: _ULx86_64_dwarf_find_save_locs (Gparser.c:883) by 0x584550: _ULx86_64_dwarf_step (Gstep.c:34) by 0x583653: _ULx86_64_step (Gstep.c:71) by 0x583FD2: _ULx86_64_tdep_trace (Gtrace.c:217) by 0x5831C3: backtrace (backtrace.c:69) Test Plan: ./auto_roll_logger_test Reviewers: sdong, yhchiang, igor Reviewed By: igor Subscribers: leveldb Differential Revision:"
,,0.2217,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: cast char to signed char in Hash() Summary: The compilers we use treat char as signed. However, this is not guarantee of C standard and some compilers (for ARM platform for example), treat char as unsigned. Code that assumes that char is either signed or unsigned is wrong. This change explicitly casts the char to signed version. This will not break any of our use cases on x86, which, I believe are all of them. In case somebody out there is using RocksDB on ARM AND using bloom filters, theyre going to have a bad time. However, it is very unlikely that this is the case. Test Plan: sanity test with previous commit (with new sanity test) Reviewers: yhchiang, ljin, sdong Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.0621,rocksdb,Merge pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/
,,0.1786,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.27399999999999997,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.271,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.154,rocksdb,"Fixed Mac compile error in util/options_test.cc Summary: Fixed the following error in Mac: ./util/testharness.h:93:19: error: comparison of integers of different signs: const unsigned long and const int [-Werror,-Wsign-compare] BINARY_OP(IsEq, ~~~~~~~~~~~~~~~~^~~ ./util/testharness.h:86:14: note: expanded from macro BINARY_OP if ( (x op y)) { \ ^ util/options_test.cc:269:3: note: in instantiation of function template specialization rocksdb::test::Tester::IsEq<unsigned long, int> requested here ASSERT_EQ(new_cf_opt.write_buffer_size, 5); ^ Test Plan: options_test/Fix release compile/Fix mac compile/Merge pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.1478,rocksdb,"Turn on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.2695,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.2532,rocksdb,"Merge pull request from huahang/patch-2 fix a few compile warnings/fix a few compile warnings 1, const qualifiers on return types make no sense and will trigger a compile warning: warning: type qualifiers ignored on function return type [-Wignored-qualifiers] 2, class HistogramImpl has virtual functions and thus should have a virtual destructor 3, with some toolchain, the macro __STDC_FORMAT_MACROS is predefined and thus should be checked before define Change-Id: I69747a03bfae88671bfbb2637c80d17600159c99 Signed-off-by: liuhuahang"
,,0.268,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.2785,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.3314,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.3212,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision: pull request from yinqiwen/rate-limiter-crash-fix fix rate limiter crash rate limiter crash"
,,0.2484,rocksdb,"Merge pull request from huahang/patch-2 fix a few compile warnings/fix a few compile warnings 1, const qualifiers on return types make no sense and will trigger a compile warning: warning: type qualifiers ignored on function return type [-Wignored-qualifiers] 2, class HistogramImpl has virtual functions and thus should have a virtual destructor 3, with some toolchain, the macro __STDC_FORMAT_MACROS is predefined and thus should be checked before define Change-Id: I69747a03bfae88671bfbb2637c80d17600159c99 Signed-off-by: liuhuahang"
,,0.27399999999999997,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.3286,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.1536,rocksdb,Update logging.cc fix cast style to cpp static_cast/Merge pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang
,,0.2763,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: benchmarkharness make bm_min_usec uint/"
,,0.2748,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: pull request from dalgaaf/wip-da-SCA-20141001 Fix some issues from SCA/"
,,0.2785,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.21899999999999997,rocksdb,"Merge pull request from tdfischer/perf-timer-destructors Refactor PerfStepTimer to automatically stop on destruct/Refactor PerfStepTimer to stop on destruct This eliminates the need to remember to call PERF_TIMER_STOP when a section has been timed. This allows more useful design with the perf timers and enables possible return value optimizations. Simplistic example: class Foo { public: Foo(int v) : m_v(v); private: int m_v; } Foo makeFrobbedFoo(int *errno) { *errno 0; return Foo(); } Foo bar(int *errno) { PERF_TIMER_GUARD(some_timer); return makeFrobbedFoo(errno); } int main(int argc, char[] argv) { Foo f; int errno; f bar(&errno); if (errno) return return 0; } After bar() is called, perf_context.some_timer would be incremented as if Stop(&perf_context.some_timer) was called at the end, and the compiler is still able to produce optimizations on the return value from makeFrobbedFoo() through to main()./"
,,0.2695,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.2785,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.265,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.1118,rocksdb,"Added a few statistics for BackupableDB Summary: Added the following statistics to BackupableDB: 1. Number of successful and failed backups in class BackupStatistics 2. Time taken to do a backup 3. Number of files in a backup 1 is implemented in the BackupStatistics class 2 and 3 are added in the BackupMeta and BackupInfo class Test Plan: 1 can be tested using BackupStatistics::ToString(), 2 and 3 can be tested in the BackupInfo class Reviewers: sdong, igor2, ljin, igor Reviewed By: igor Differential Revision: pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.2186,rocksdb,"Merge pull request from fyrz/32BitRocksJavaBug 32 Bit RocksJava Fix for overflowing jlongs/32-Bit RocksJava resolution for jlong overflows Summary: This pull request solves the jlong overflow problem on 32-Bit machines as described in 1. There is a new org.rocksdb.test.PlatformRandomHelper to assist in getting random values. For 32 Bit the getLong method is overriden by xpromaches code above. For 64 Bit it behaves as is. 2. The detection should be cross-platform (Windows is supported though it is not ported completely yet). 3. Every JNI method which sets jlong values must check if the value fits into size_t. If it overflows size_t a InvalidArgument Status object will be returned. If its ok a OK Status will be returned. 4. Setters which have this check will throw a RocksDBException if its no OK Status. Additionally some other parts of code were corrected using the wrong type casts. Test Plan: make rocksdbjava make jtest Differential Revision: Include WriteBatch into RocksDBSample.java, fix how DbBenchmark.java handles WriteBatch. Summary: Include WriteBatch into RocksDBSample.java, fix how DbBenchmark.java handles WriteBatch. Previously DbBenchmark.java does not use WriteBatch when benchmarks is set to fillbatch. Test Plan: make rocksdbjava make jtest make jdb_bench cd java ./jdb_bench.sh Reviewers: naveenatceg, ljin, sdong, ankgup87 Reviewed By: ankgup87 Subscribers: leveldb Differential Revision:"
,,0.0825,rocksdb,[RocksJava] JavaDoc cleanup warnings with Java8 Java8 is more restrictive than Java7 with generating JavaDocs. This commit resolves current existing Java8 warnings./Merge pull request from EugenePig/java8 suppress JDK8 errors for JDK8 errors for pull request from fyrz/JavaDoc-Cleanup JavaDoc fixes & enhancements RocksJava/
,,0.1602,rocksdb,[RocksJava] BackupInfos & Restore-/BackupableDB enhancements Summary: BackupableDB deleteBackup method BackupableDB purgeOldBackups bugfix BackupInfos now available in Restorable-/BackupableDB Extended BackupableDBTest to cover more of the currently implemented functionality. Test Plan: make rocksdbjava make jtest Differential Revision:
,,0.2302,rocksdb,Merge pull request from fyrz/32BitRocksJavaBug 32 Bit RocksJava Fix for overflowing jlongs/32-Bit RocksJava resolution for jlong overflows Summary: This pull request solves the jlong overflow problem on 32-Bit machines as described in 1. There is a new org.rocksdb.test.PlatformRandomHelper to assist in getting random values. For 32 Bit the getLong method is overriden by xpromaches code above. For 64 Bit it behaves as is. 2. The detection should be cross-platform (Windows is supported though it is not ported completely yet). 3. Every JNI method which sets jlong values must check if the value fits into size_t. If it overflows size_t a InvalidArgument Status object will be returned. If its ok a OK Status will be returned. 4. Setters which have this check will throw a RocksDBException if its no OK Status. Additionally some other parts of code were corrected using the wrong type casts. Test Plan: make rocksdbjava make jtest Differential Revision:
,,0.2554,rocksdb,"Merge pull request from fyrz/32BitRocksJavaBug 32 Bit RocksJava Fix for overflowing jlongs/32-Bit RocksJava resolution for jlong overflows Summary: This pull request solves the jlong overflow problem on 32-Bit machines as described in 1. There is a new org.rocksdb.test.PlatformRandomHelper to assist in getting random values. For 32 Bit the getLong method is overriden by xpromaches code above. For 64 Bit it behaves as is. 2. The detection should be cross-platform (Windows is supported though it is not ported completely yet). 3. Every JNI method which sets jlong values must check if the value fits into size_t. If it overflows size_t a InvalidArgument Status object will be returned. If its ok a OK Status will be returned. 4. Setters which have this check will throw a RocksDBException if its no OK Status. Additionally some other parts of code were corrected using the wrong type casts. Test Plan: make rocksdbjava make jtest Differential Revision: Fix JNI link error caused by the removal of options.db_stats_log_interval Summary: Fix JNI link error caused by the removal of options.db_stats_log_interval in Test Plan: make rocksdbjava make jtest Reviewers: ljin, ankgup87 Reviewed By: ankgup87 Subscribers: leveldb Differential Revision:"
,,0.2313,rocksdb,[RocksJava] JavaDoc cleanup warnings with Java8 Java8 is more restrictive than Java7 with generating JavaDocs. This commit resolves current existing Java8 warnings./Merge pull request from fyrz/32BitRocksJavaBug 32 Bit RocksJava Fix for overflowing jlongs/32-Bit RocksJava resolution for jlong overflows Summary: This pull request solves the jlong overflow problem on 32-Bit machines as described in 1. There is a new org.rocksdb.test.PlatformRandomHelper to assist in getting random values. For 32 Bit the getLong method is overriden by xpromaches code above. For 64 Bit it behaves as is. 2. The detection should be cross-platform (Windows is supported though it is not ported completely yet). 3. Every JNI method which sets jlong values must check if the value fits into size_t. If it overflows size_t a InvalidArgument Status object will be returned. If its ok a OK Status will be returned. 4. Setters which have this check will throw a RocksDBException if its no OK Status. Additionally some other parts of code were corrected using the wrong type casts. Test Plan: make rocksdbjava make jtest Differential Revision: pull request from fyrz/JavaDoc-Cleanup JavaDoc fixes & enhancements RocksJava/
,,0.0848,rocksdb,[RocksJava] JavaDoc cleanup warnings with Java8 Java8 is more restrictive than Java7 with generating JavaDocs. This commit resolves current existing Java8 warnings./
,,0.077,rocksdb,[RocksJava] JavaDoc cleanup warnings with Java8 Java8 is more restrictive than Java7 with generating JavaDocs. This commit resolves current existing Java8 warnings./
,,0.08199999999999999,rocksdb,[RocksJava] JavaDoc cleanup warnings with Java8 Java8 is more restrictive than Java7 with generating JavaDocs. This commit resolves current existing Java8 warnings./Merge pull request from fyrz/JavaDoc-Cleanup JavaDoc fixes & enhancements RocksJava/
,,0.1708,rocksdb,[RocksJava] JavaDoc cleanup warnings with Java8 Java8 is more restrictive than Java7 with generating JavaDocs. This commit resolves current existing Java8 warnings./[RocksJava] BackupInfos & Restore-/BackupableDB enhancements Summary: BackupableDB deleteBackup method BackupableDB purgeOldBackups bugfix BackupInfos now available in Restorable-/BackupableDB Extended BackupableDBTest to cover more of the currently implemented functionality. Test Plan: make rocksdbjava make jtest Differential Revision: pull request from fyrz/JavaDoc-Cleanup JavaDoc fixes & enhancements RocksJava/
,,0.3337,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: improvements Minor corrections to resolve build problems with RocksJava code./Merge pull request from fyrz/FixBrokenJavaBuild RocksJava Fix after MutableCFOptions change. (relates to f184198)/RocksJava Fix after MutableCFOptions change./Merge pull request from fyrz/32BitRocksJavaBug 32 Bit RocksJava Fix for overflowing jlongs/32-Bit RocksJava resolution for jlong overflows Summary: This pull request solves the jlong overflow problem on 32-Bit machines as described in 1. There is a new org.rocksdb.test.PlatformRandomHelper to assist in getting random values. For 32 Bit the getLong method is overriden by xpromaches code above. For 64 Bit it behaves as is. 2. The detection should be cross-platform (Windows is supported though it is not ported completely yet). 3. Every JNI method which sets jlong values must check if the value fits into size_t. If it overflows size_t a InvalidArgument Status object will be returned. If its ok a OK Status will be returned. 4. Setters which have this check will throw a RocksDBException if its no OK Status. Additionally some other parts of code were corrected using the wrong type casts. Test Plan: make rocksdbjava make jtest Differential Revision: pull request from fyrz/master resolution for java build problem introduced by 5ec53f3edf62bec1b690ce12.../resolution for java build problem introduced by 5ec53f3edf62bec1b690ce12fb21a6c52203f3c8/Merge pull request from ankgup87/master [Java] Fix build/Fix build/[Java] Fixed 32-bit overflowing issue when converting jlong to size_t Summary: Fixed 32-bit overflowing issue when converting jlong to size_t by capping jlong to std::numeric_limits<size_t>::max(). Test Plan: make rocksdbjava make jtest Reviewers: ankgup87, ljin, sdong, igor Reviewed By: igor Subscribers: leveldb Differential Revision: RocksDB java build Summary: as title Test Plan: make rocksdbjava Reviewers: sdong, yhchiang, igor Reviewed By: igor Subscribers: leveldb Differential Revision:"
,,0.2865,rocksdb,"fixed conflict in java/Makefile/Merge pull request from fyrz/32BitRocksJavaBug 32 Bit RocksJava Fix for overflowing jlongs/32-Bit RocksJava resolution for jlong overflows Summary: This pull request solves the jlong overflow problem on 32-Bit machines as described in 1. There is a new org.rocksdb.test.PlatformRandomHelper to assist in getting random values. For 32 Bit the getLong method is overriden by xpromaches code above. For 64 Bit it behaves as is. 2. The detection should be cross-platform (Windows is supported though it is not ported completely yet). 3. Every JNI method which sets jlong values must check if the value fits into size_t. If it overflows size_t a InvalidArgument Status object will be returned. If its ok a OK Status will be returned. 4. Setters which have this check will throw a RocksDBException if its no OK Status. Additionally some other parts of code were corrected using the wrong type casts. Test Plan: make rocksdbjava make jtest Differential Revision: Fixed 32-bit overflowing issue when converting jlong to size_t Summary: Fixed 32-bit overflowing issue when converting jlong to size_t by capping jlong to std::numeric_limits<size_t>::max(). Test Plan: make rocksdbjava make jtest Reviewers: ankgup87, ljin, sdong, igor Reviewed By: igor Subscribers: leveldb Differential Revision:"
,,0.2646,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: improvements Minor corrections to resolve build problems with RocksJava code./"
,,0.3653,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: BackupInfos & Restore-/BackupableDB enhancements Summary: BackupableDB deleteBackup method BackupableDB purgeOldBackups bugfix BackupInfos now available in Restorable-/BackupableDB Extended BackupableDBTest to cover more of the currently implemented functionality. Test Plan: make rocksdbjava make jtest Differential Revision: pull request from fyrz/32BitRocksJavaBug 32 Bit RocksJava Fix for overflowing jlongs/32-Bit RocksJava resolution for jlong overflows Summary: This pull request solves the jlong overflow problem on 32-Bit machines as described in 1. There is a new org.rocksdb.test.PlatformRandomHelper to assist in getting random values. For 32 Bit the getLong method is overriden by xpromaches code above. For 64 Bit it behaves as is. 2. The detection should be cross-platform (Windows is supported though it is not ported completely yet). 3. Every JNI method which sets jlong values must check if the value fits into size_t. If it overflows size_t a InvalidArgument Status object will be returned. If its ok a OK Status will be returned. 4. Setters which have this check will throw a RocksDBException if its no OK Status. Additionally some other parts of code were corrected using the wrong type casts. Test Plan: make rocksdbjava make jtest Differential Revision:"
,,0.2706,rocksdb,"Merge pull request from fyrz/RocksJavaBuildFix [RocksJava] Build fix after options refactoring/[RocksJava] Build fix after options refactoring/fixed conflict in java/Makefile/Fix code style problems identified by lint/Merge pull request from fyrz/32BitRocksJavaBug 32 Bit RocksJava Fix for overflowing jlongs/32-Bit RocksJava resolution for jlong overflows Summary: This pull request solves the jlong overflow problem on 32-Bit machines as described in 1. There is a new org.rocksdb.test.PlatformRandomHelper to assist in getting random values. For 32 Bit the getLong method is overriden by xpromaches code above. For 64 Bit it behaves as is. 2. The detection should be cross-platform (Windows is supported though it is not ported completely yet). 3. Every JNI method which sets jlong values must check if the value fits into size_t. If it overflows size_t a InvalidArgument Status object will be returned. If its ok a OK Status will be returned. 4. Setters which have this check will throw a RocksDBException if its no OK Status. Additionally some other parts of code were corrected using the wrong type casts. Test Plan: make rocksdbjava make jtest Differential Revision: lint errors in java/rocksjni/options.cc Summary: Fix lint errors in java/rocksjni/options.cc Test Plan: make rocksdbjava/[Java] Fixed 32-bit overflowing issue when converting jlong to size_t Summary: Fixed 32-bit overflowing issue when converting jlong to size_t by capping jlong to std::numeric_limits<size_t>::max(). Test Plan: make rocksdbjava make jtest Reviewers: ankgup87, ljin, sdong, igor Reviewed By: igor Subscribers: leveldb Differential Revision:"
,,0.3643,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision: pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.0767,rocksdb,Merge pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/db_ttl_impl.h: pass func parameter by reference Fix for: [utilities/ttl/db_ttl_impl.h:209]: (performance) Function parameter merge_op should be passed by reference. Signed-off-by: Danny Al-Gaaf
,,0.2584,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: Mac compile/Added a few statistics for BackupableDB Summary: Added the following statistics to BackupableDB: 1. Number of successful and failed backups in class BackupStatistics 2. Time taken to do a backup 3. Number of files in a backup 1 is implemented in the BackupStatistics class 2 and 3 are added in the BackupMeta and BackupInfo class Test Plan: 1 can be tested using BackupStatistics::ToString(), 2 and 3 can be tested in the BackupInfo class Reviewers: sdong, igor2, ljin, igor Reviewed By: igor Differential Revision: pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.2725,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.268,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.2468,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.2985,rocksdb,"Merge pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/Fixed a signed-unsigned comparison in spatial_db.cc issue Summary: Fixed a signed-unsigned comparison in spatial_db.cc utilities/spatialdb/spatial_db.cc:542:38: error: comparison between signed and unsigned integer expressions [-Werror=sign-compare] cc1plus: all warnings being treated as errors make: *** [utilities/spatialdb/spatial_db.o] Error 1 Test Plan: make spatial_db_test ./spatial_db_test Reviewers: ljin, sdong, reddragon, igor Reviewed By: reddragon Subscribers: reddragon, leveldb Differential Revision: missing break statement/Merge pull request from huahang/patch-2 fix a few compile warnings/fix a few compile warnings 1, const qualifiers on return types make no sense and will trigger a compile warning: warning: type qualifiers ignored on function return type [-Wignored-qualifiers] 2, class HistogramImpl has virtual functions and thus should have a virtual destructor 3, with some toolchain, the macro __STDC_FORMAT_MACROS is predefined and thus should be checked before define Change-Id: I69747a03bfae88671bfbb2637c80d17600159c99 Signed-off-by: liuhuahang"
,,0.27399999999999997,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.271,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.3075,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: naked calls to operator new and delete (Fixes This replaces a mishmash of pointers in the Block and BlockContents classes with std::unique_ptr. It also changes the semantics of BlockContents to be limited to use as a constructor parameter for Block objects, as it owns any block buffers handed to it./"
,,0.3551,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision: pull request from dalgaaf/wip-da-SCA-20141001 Fix some issues from SCA/Replace naked calls to operator new and delete (Fixes This replaces a mishmash of pointers in the Block and BlockContents classes with std::unique_ptr. It also changes the semantics of BlockContents to be limited to use as a constructor parameter for Block objects, as it owns any block buffers handed to it./Fix compile Summary: gcc on our dev boxes is not happy about __attribute__((unused)) Test Plan: compiles now Reviewers: sdong, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision:"
,,0.2951,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: pull request from tdfischer/perf-timer-destructors Refactor PerfStepTimer to automatically stop on destruct/Refactor PerfStepTimer to stop on destruct This eliminates the need to remember to call PERF_TIMER_STOP when a section has been timed. This allows more useful design with the perf timers and enables possible return value optimizations. Simplistic example: class Foo { public: Foo(int v) : m_v(v); private: int m_v; } Foo makeFrobbedFoo(int *errno) { *errno 0; return Foo(); } Foo bar(int *errno) { PERF_TIMER_GUARD(some_timer); return makeFrobbedFoo(errno); } int main(int argc, char[] argv) { Foo f; int errno; f bar(&errno); if (errno) return return 0; } After bar() is called, perf_context.some_timer would be incremented as if Stop(&perf_context.some_timer) was called at the end, and the compiler is still able to produce optimizations on the return value from makeFrobbedFoo() through to main()./"
,,0.26,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision: table: return estimated size 1 Summary: This is to avoid cutting file prematurely and resulting file size to be half of specified. Test Plan: db_bench Reviewers: sdong, yhchiang, igor Reviewed By: igor Subscribers: leveldb Differential Revision: compaction bug in Cuckoo Table Builder. Use kvs_.size() instead of num_entries in FileSize() method. Summary: Fix compaction bug in Cuckoo Table Builder. Use kvs_.size() instead of num_entries in FileSize() method. Also added tests. Test Plan: make check all Also ran db_bench to generate multiple files. Reviewers: sdong, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision:"
,,0.2695,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.1496,rocksdb,"Turn on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.268,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.27399999999999997,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.0577,rocksdb,Merge pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/
,,0.3107,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: compile Summary: gcc on our dev boxes is not happy about __attribute__((unused)) Test Plan: compiles now Reviewers: sdong, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision:"
,,0.3536,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision: naked calls to operator new and delete (Fixes This replaces a mishmash of pointers in the Block and BlockContents classes with std::unique_ptr. It also changes the semantics of BlockContents to be limited to use as a constructor parameter for Block objects, as it owns any block buffers handed to it./"
,,0.1849,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.1266,rocksdb,"Fix compile Summary: gcc on our dev boxes is not happy about __attribute__((unused)) Test Plan: compiles now Reviewers: sdong, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision: ios compile Summary: We need to set contbuild for this :) Test Plan: compiles Reviewers: sdong, yhchiang, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision:"
,,0.2785,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.2931,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: compile error in table/plain_table_index.cc Summary: Fix compile error in table/plain_table_index.cc Test Plan: make/"
,,0.2591,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: pull request from dalgaaf/wip-da-SCA-20141001 Fix some issues from SCA/table/cuckoo_table_reader.cc: pass func parameter by reference Fix for: [table/cuckoo_table_reader.cc:196]: (performance) Function parameter target should be passed by reference. Signed-off-by: Danny Al-Gaaf pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/table/cuckoo_table_reader.cc: pass func parameter by ref Fix for: [table/cuckoo_table_reader.cc:198]: (performance) Function parameter file_data should be passed by reference. Signed-off-by: Danny Al-Gaaf"
,,0.3022,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: naked calls to operator new and delete (Fixes This replaces a mishmash of pointers in the Block and BlockContents classes with std::unique_ptr. It also changes the semantics of BlockContents to be limited to use as a constructor parameter for Block objects, as it owns any block buffers handed to it./"
,,0.268,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.1379,rocksdb,"Replace naked calls to operator new and delete (Fixes This replaces a mishmash of pointers in the Block and BlockContents classes with std::unique_ptr. It also changes the semantics of BlockContents to be limited to use as a constructor parameter for Block objects, as it owns any block buffers handed to it./Fix compile Summary: gcc on our dev boxes is not happy about __attribute__((unused)) Test Plan: compiles now Reviewers: sdong, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision: retrying to read property block from a table when it does not exist. Summary: Avoid retrying to read property block from a table when it does not exist in updating stats for compensating deletion entries. In addition, ReadTableProperties() now returns Status::NotFound instead of Status::Corruption when table properties does not exist in the file. Test Plan: make db_test export ROCKSDB_TESTS=CompactionDeleteionTrigger ./db_test Reviewers: ljin, sdong Reviewed By: sdong Subscribers: leveldb Differential Revision:"
,,0.0577,rocksdb,Merge pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/
,,0.1157,rocksdb,"Replace naked calls to operator new and delete (Fixes This replaces a mishmash of pointers in the Block and BlockContents classes with std::unique_ptr. It also changes the semantics of BlockContents to be limited to use as a constructor parameter for Block objects, as it owns any block buffers handed to it./"
,,0.1532,rocksdb,"Turn on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.2188,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: naked calls to operator new and delete (Fixes This replaces a mishmash of pointers in the Block and BlockContents classes with std::unique_ptr. It also changes the semantics of BlockContents to be limited to use as a constructor parameter for Block objects, as it owns any block buffers handed to it./"
,,0.2484,rocksdb,"Merge pull request from huahang/patch-2 fix a few compile warnings/fix a few compile warnings 1, const qualifiers on return types make no sense and will trigger a compile warning: warning: type qualifiers ignored on function return type [-Wignored-qualifiers] 2, class HistogramImpl has virtual functions and thus should have a virtual destructor 3, with some toolchain, the macro __STDC_FORMAT_MACROS is predefined and thus should be checked before define Change-Id: I69747a03bfae88671bfbb2637c80d17600159c99 Signed-off-by: liuhuahang"
,,0.4141,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision: pull request from huahang/patch-2 fix a few compile warnings/fix a few compile warnings 1, const qualifiers on return types make no sense and will trigger a compile warning: warning: type qualifiers ignored on function return type [-Wignored-qualifiers] 2, class HistogramImpl has virtual functions and thus should have a virtual destructor 3, with some toolchain, the macro __STDC_FORMAT_MACROS is predefined and thus should be checked before define Change-Id: I69747a03bfae88671bfbb2637c80d17600159c99 Signed-off-by: liuhuahang"
,,0.3804,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.1879,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: missing column families Summary: Before this diff, whenever we Write to non-existing column family, Write() would fail. This diff adds an option to not fail a Write() when WriteBatch points to non-existing column family. MongoDB said this would be useful for them, since they might have a transaction updating an index that was dropped by another thread. This way, they dont have to worry about checking if all indexes are alive on every write. They dont care if they lose writes to dropped index. Test Plan: added a small unit test Reviewers: sdong, yhchiang, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision:"
,,0.1833,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.2042,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: conflict in java/Makefile/Fixing comile errors on OS X Summary: Building master on OS X has some compile errors due to implicit type conversions which generate warnings which RocksDBs build settings raise as errors. Test Plan: It compiles Reviewers: ljin, igor Reviewed By: ljin Differential Revision: per column family metrics in db_bench Summary: see above Test Plan: make check, ran db_bench and looked at output begin *PUBLIC* platform impact section Bugzilla: end platform impact Reviewers: igor Differential Revision: for better CuckooTable performance Summary: Add the MultiGet API to allow prefetching. With file size of 1.5G, I configured it to have 0.9 hash ratio that can fill With 115M keys and result in 2 hash functions, the lookup QPS is ~4.9M/s vs. 3M/s for Get(). It is tricky to set the parameters right. Since files size is determined by power-of-two factor, that means of keys is fixed in each file. With big file size (thus smaller of files), we will have more chance to waste lot of space in the last file lower space utilization as a result. Using smaller file size can improve the situation, but that harms lookup speed. Test Plan: db_bench Reviewers: yhchiang, sdong, igor Reviewed By: sdong Subscribers: leveldb Differential Revision: db_bench with lots of column families to regression tests Summary: That way we can see when this graph goes up and be happy. Couple of changes: 1. title 2. fix db_bench to delete column families before deleting the DB. this was asserting when compiled in debug mode 3. dont sync manifest when disableDataSync. We discussed this offline. I can move it to separate diff if youd like Test Plan: ran it Reviewers: sdong, yhchiang, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision: pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.1045,rocksdb,"Merge pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang purging logs from separate log directory Summary: 1. Support purging info logs from a separate paths from DB path. Refactor the codes of generating info log prefixes so that it can be called when generating new files and scanning log directory. 2. Fix the bug of not scanning multiple DB paths (should only impact multiple DB paths) Test Plan: Add unit test for generating and parsing info log files Add end-to-end test in db_test Reviewers: yhchiang, ljin Reviewed By: ljin Subscribers: leveldb, igor, dhruba Differential Revision:"
,,0.3375,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.4208,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: pull request from huahang/patch-2 fix a few compile warnings/fix a few compile warnings 1, const qualifiers on return types make no sense and will trigger a compile warning: warning: type qualifiers ignored on function return type [-Wignored-qualifiers] 2, class HistogramImpl has virtual functions and thus should have a virtual destructor 3, with some toolchain, the macro __STDC_FORMAT_MACROS is predefined and thus should be checked before define Change-Id: I69747a03bfae88671bfbb2637c80d17600159c99 Signed-off-by: liuhuahang"
,,0.1849,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.1944,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: missing column families Summary: Before this diff, whenever we Write to non-existing column family, Write() would fail. This diff adds an option to not fail a Write() when WriteBatch points to non-existing column family. MongoDB said this would be useful for them, since they might have a transaction updating an index that was dropped by another thread. This way, they dont have to worry about checking if all indexes are alive on every write. They dont care if they lose writes to dropped index. Test Plan: added a small unit test Reviewers: sdong, yhchiang, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision:"
,,0.3366,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.1738,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.1786,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.1514,rocksdb,"Turn on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.3648,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: the shadowing in db/compaction.cc and include/rocksdb/db.h Summary: Fixed the shadowing in db/compaction.cc and include/rocksdb/db.h Test Plan: make/Fixed compile error in db/compaction.cc and db/compaction_picker.cc Summary: Fixed compile error in db/compaction.cc and db/compaction_picker.cc Test Plan: make/Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang"
,,0.2755,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.3275,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.3667,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.2159,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/corruption_test.cc: pass parameter by reference Fix for: [db/corruption_test.cc:134]: (performance) Function parameter fname should be passed by reference. Signed-off-by: Danny Al-Gaaf unit tests errors Summary: Those were introduced with because the flushing behavior changed when max_background_flushes is > 0. Test Plan: make check Reviewers: ljin, yhchiang, sdong Reviewed By: sdong Subscribers: leveldb Differential Revision:"
,,0.3339,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.2057,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision: the bug where compaction does not fail when RocksDB cant create a new file. Summary: This diff has two fixes. 1. Fix the bug where compaction does not fail when RocksDB cant create a new file. 2. When NewWritableFiles() fails in OpenCompactionOutputFiles(), previously such fail-to-created file will be still be included as a compaction output. This patch also fixes this bug. 3. Allow VersionEdit::EncodeTo() to return Status and add basic check. Test Plan: ./version_edit_test export ROCKSDB_TESTS=FileCreationRandomFailure ./db_test Reviewers: ljin, sdong, nkg-, igor Reviewed By: igor Subscribers: dhruba, leveldb Differential Revision: swapped variable names to accurately reflect usage/Avoid retrying to read property block from a table when it does not exist. Summary: Avoid retrying to read property block from a table when it does not exist in updating stats for compensating deletion entries. In addition, ReadTableProperties() now returns Status::NotFound instead of Status::Corruption when table properties does not exist in the file. Test Plan: make db_test export ROCKSDB_TESTS=CompactionDeleteionTrigger ./db_test Reviewers: ljin, sdong Reviewed By: sdong Subscribers: leveldb Differential Revision:"
,,0.2695,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.2755,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.3288,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.2833,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/Fix compaction bug in Cuckoo Table Builder. Use kvs_.size() instead of num_entries in FileSize() method. Summary: Fix compaction bug in Cuckoo Table Builder. Use kvs_.size() instead of num_entries in FileSize() method. Also added tests. Test Plan: make check all Also ran db_bench to generate multiple files. Reviewers: sdong, ljin Reviewed By: ljin Subscribers: leveldb Differential Revision:"
,,0.1712,rocksdb,"Fixed compile warning on Mac caused by unused variables. Summary: Fixed compile warning caused by unused variables. ./db/compaction_picker.h:118:7: error: private field max_grandparent_overlap_factor_ is not used [-Werror,-Wunused-private-field] int max_grandparent_overlap_factor_; ^ ./db/compaction_picker.h:119:7: error: private field expanded_compaction_factor_ is not used [-Werror,-Wunused-private-field] int expanded_compaction_factor_; ^ 2 errors generated. Test Plan: make db_test/"
,,0.2894,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: pull request from dalgaaf/wip-da-SCA-20141001 Fix some issues from SCA/Merge pull request from tdfischer/perf-timer-destructors Refactor PerfStepTimer to automatically stop on destruct/Refactor PerfStepTimer to stop on destruct This eliminates the need to remember to call PERF_TIMER_STOP when a section has been timed. This allows more useful design with the perf timers and enables possible return value optimizations. Simplistic example: class Foo { public: Foo(int v) : m_v(v); private: int m_v; } Foo makeFrobbedFoo(int *errno) { *errno 0; return Foo(); } Foo bar(int *errno) { PERF_TIMER_GUARD(some_timer); return makeFrobbedFoo(errno); } int main(int argc, char[] argv) { Foo f; int errno; f bar(&errno); if (errno) return return 0; } After bar() is called, perf_context.some_timer would be incremented as if Stop(&perf_context.some_timer) was called at the end, and the compiler is still able to produce optimizations on the return value from makeFrobbedFoo() through to main()./"
,,0.1427,rocksdb,Merge pull request from project-zerus/patch-1 fix more compile warnings/fix more compile warnings N/A Change-Id: I5b6f9c70aea7d3f3489328834fed323d41106d9f Signed-off-by: liuhuahang
,,0.2516,rocksdb,"Merge pull request from huahang/patch-2 fix a few compile warnings/fix a few compile warnings 1, const qualifiers on return types make no sense and will trigger a compile warning: warning: type qualifiers ignored on function return type [-Wignored-qualifiers] 2, class HistogramImpl has virtual functions and thus should have a virtual destructor 3, with some toolchain, the macro __STDC_FORMAT_MACROS is predefined and thus should be checked before define Change-Id: I69747a03bfae88671bfbb2637c80d17600159c99 Signed-off-by: liuhuahang"
,,0.265,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision:"
,,0.2037,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: the bug where compaction does not fail when RocksDB cant create a new file. Summary: This diff has two fixes. 1. Fix the bug where compaction does not fail when RocksDB cant create a new file. 2. When NewWritableFiles() fails in OpenCompactionOutputFiles(), previously such fail-to-created file will be still be included as a compaction output. This patch also fixes this bug. 3. Allow VersionEdit::EncodeTo() to return Status and add basic check. Test Plan: ./version_edit_test export ROCKSDB_TESTS=FileCreationRandomFailure ./db_test Reviewers: ljin, sdong, nkg-, igor Reviewed By: igor Subscribers: dhruba, leveldb Differential Revision:"
,,0.27399999999999997,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: pull request from dalgaaf/wip-da-SCA-20140930 Various SCA fixes/DB::Flush() Do not wait for background threads when there is nothing in mem table Summary: When we have multiple column families, users can issue Flush() on every column families to make sure everything is flushes, even if some of them might be empty. By skipping the waiting for empty cases, it can be greatly speed up. Still wait for peoples comments before writing unit tests for it. Test Plan: Will write a unit test to make sure it is correct. Reviewers: ljin, yhchiang, igor Reviewed By: igor Subscribers: leveldb, dhruba Differential Revision: pull request from tdfischer/perf-timer-destructors Refactor PerfStepTimer to automatically stop on destruct/Refactor PerfStepTimer to stop on destruct This eliminates the need to remember to call PERF_TIMER_STOP when a section has been timed. This allows more useful design with the perf timers and enables possible return value optimizations. Simplistic example: class Foo { public: Foo(int v) : m_v(v); private: int m_v; } Foo makeFrobbedFoo(int *errno) { *errno 0; return Foo(); } Foo bar(int *errno) { PERF_TIMER_GUARD(some_timer); return makeFrobbedFoo(errno); } int main(int argc, char[] argv) { Foo f; int errno; f bar(&errno); if (errno) return return 0; } After bar() is called, perf_context.some_timer would be incremented as if Stop(&perf_context.some_timer) was called at the end, and the compiler is still able to produce optimizations on the return value from makeFrobbedFoo() through to main()./"
,,0.1849,rocksdb,"Turn back on Summary: It turns out that has different rules for gcc than clang. Previous commit fixed clang. This commits fixes the rest of the warnings for gcc. Test Plan: compiles Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision:"
,,0.3301,rocksdb,"Turn on and fix all the errors Summary: We need to turn on for mobile. See D1671432 (internal phabricator) for details. This diff turns on the warning flag and fixes all the errors. There were also some interesting errors that I might call bugs, especially in plain table. Going forward, I think it makes sense to have this flag turned on and be very very careful when converting 64-bit to 32-bit variables. Test Plan: compiles Reviewers: ljin, rven, yhchiang, sdong Reviewed By: yhchiang Subscribers: bobbaldwin, dhruba, leveldb Differential Revision: on Summary: ...and fix all the errors :) Jim suggested turning on because it helped him fix number of critical bugs in fbcode. I think its a good idea to be clean. Test Plan: compiles Reviewers: yhchiang, rven, sdong, ljin Reviewed By: ljin Subscribers: dhruba, leveldb Differential Revision:"
,,0.1554,rocksdb,"Turn off Summary: So glibc is not so we need to turn it off :( error: ëint sigaction(int, const sigaction*, sigaction*)í hides constructor for ëstruct sigactioní The rest of the changes in this diff is that we include .h files under rocksdb namespace, which is a no-no. Test Plan: compiles now Reviewers: ljin, yhchiang, rven, sdong Reviewed By: sdong Subscribers: dhruba, leveldb Differential Revision: off-by-one error when using readlink/"
,,0.0879,rocksdb,Fix travis-build error Summary: Fix travis-build error/Fix signed/unsigned compile/
,,0.0694,rocksdb,[RocksJava] Extended Testcases/
,,0.0995,rocksdb,Merge pull request from fyrz/RocksJava-Restore-PrecisionFix [RocksJava] Fixed MacOS build of RocksJava/[RocksJava] Fixed MacOS build of RocksJava There were still some precision loss problems remainging in RocksJava. This pull request resolve these./Merge pull request from fyrz/RocksJava-PrecisionFix [RocksJava] Fix precision problem in rocksjni/[RocksJava] Fix precision problem in rocksjni/
,,0.0967,rocksdb,Merge pull request from StanislavGlebik/document_db_improvement Fixed negative numbers comparison in DocumentDB/Fixed negative numbers comparison in DocumentDB/
,,0.0648,rocksdb,Merge pull request from alabid/alabid/fix-example-typo fix really trivial typo in column families example/fix really trivial typo/
,,0.0849,rocksdb,Merge pull request from fyrz/RocksJava-Native-Library-Loader-Fix [RocksJava] RocksJava Testcases/[RocksJava] RocksJava Testcases NativeLibraryLoader Test EnvironmentTest Bugfix/
,,0.0789,rocksdb,Merge pull request from dalgaaf/wip-da-fix-elif Fix with no expression/stack_trace.cc: fix check for OS_MACOSX Fix with no expression add defined() to check. Signed-off-by: Danny Al-Gaaf
,,0.1016,rocksdb,"Fixed a compile error in ROCKSDB_LITE Summary: Fixed a compile error in ROCKSDB_LITE Test Plan: make db_stress OPT=-DROCKSDB_LITE Reviewers: sdong, igor, anthony Subscribers: dhruba, leveldb Differential Revision:"
,,0.098,rocksdb,Merge pull request from aloukissas/unused_param Fix unused parameter warnings in db.h/Fix unused parameter warnings./Fix unused parameter warnings./
,,0.2749,rocksdb,"Fixed compile warning in rocksdbjava Summary: Fixed the following compile warning in rocksdbjava: java/rocksjni/comparatorjnicallback.cc:20:14: warning: unused variable ërsí [-Wunused-variable] const jint rs env->GetJavaVM(&m_jvm); ^ java/rocksjni/comparatorjnicallback.cc: In member function ëJNIEnv* rocksdb::BaseComparatorJniCallback::getJniEnv() constí: java/rocksjni/comparatorjnicallback.cc:45:8: warning: unused variable ërsí [-Wunused-variable] jint rs m_jvm->AttachCurrentThread(reinterpret_cast<void **>(&env), NULL); ^ java/rocksjni/loggerjnicallback.cc: In constructor ërocksdb::LoggerJniCallback::LoggerJniCallback(JNIEnv*, jobject)í: java/rocksjni/loggerjnicallback.cc:19:14: warning: unused variable ërsí [-Wunused-variable] const jint rs env->GetJavaVM(&m_jvm); ^ java/rocksjni/loggerjnicallback.cc: In member function ëJNIEnv* rocksdb::LoggerJniCallback::getJniEnv() constí: java/rocksjni/loggerjnicallback.cc:33:8: warning: unused variable ërsí [-Wunused-variable] jint rs m_jvm->AttachCurrentThread(reinterpret_cast<void **>(&env), NULL); ^ Test Plan: make rocksdbjava Reviewers: sdong, anthony, IslamAbdelRahman, igor Reviewed By: igor Subscribers: dhruba, leveldb Differential Revision:"
,,0.2955,rocksdb,"Fixed a compile warning in rocksjni/loggerjnicallback.cc Summary: This patch fixes the following compile warning. java/rocksjni/loggerjnicallback.cc: In constructor ërocksdb::LoggerJniCallback::LoggerJniCallback(JNIEnv*, jobject)í: java/rocksjni/loggerjnicallback.cc:19:14: warning: unused variable ërsí [-Wunused-variable] const jint rs env->GetJavaVM(&m_jvm); ^ Test Plan: make rocksdbjavastaticrelease Reviewers: sdong, anthony, IslamAbdelRahman, igor Reviewed By: igor Subscribers: dhruba, leveldb Differential Revision: compile warning in rocksdbjava Summary: Fixed the following compile warning in rocksdbjava: java/rocksjni/comparatorjnicallback.cc:20:14: warning: unused variable ërsí [-Wunused-variable] const jint rs env->GetJavaVM(&m_jvm); ^ java/rocksjni/comparatorjnicallback.cc: In member function ëJNIEnv* rocksdb::BaseComparatorJniCallback::getJniEnv() constí: java/rocksjni/comparatorjnicallback.cc:45:8: warning: unused variable ërsí [-Wunused-variable] jint rs m_jvm->AttachCurrentThread(reinterpret_cast<void **>(&env), NULL); ^ java/rocksjni/loggerjnicallback.cc: In constructor ërocksdb::LoggerJniCallback::LoggerJniCallback(JNIEnv*, jobject)í: java/rocksjni/loggerjnicallback.cc:19:14: warning: unused variable ërsí [-Wunused-variable] const jint rs env->GetJavaVM(&m_jvm); ^ java/rocksjni/loggerjnicallback.cc: In member function ëJNIEnv* rocksdb::LoggerJniCallback::getJniEnv() constí: java/rocksjni/loggerjnicallback.cc:33:8: warning: unused variable ërsí [-Wunused-variable] jint rs m_jvm->AttachCurrentThread(reinterpret_cast<void **>(&env), NULL); ^ Test Plan: make rocksdbjava Reviewers: sdong, anthony, IslamAbdelRahman, igor Reviewed By: igor Subscribers: dhruba, leveldb Differential Revision:"
,,0.0694,rocksdb,Merge pull request from zhipeng-jia/fix_clang_warning Fix clang warnings/Fix clang compile error under Linux/
,,0.1517,rocksdb,Merge pull request from warrenfalk/fix32 fix a compile error on 32-bit (fixes an unused function compiler warning in crc32c in 32-bit mode/fix shorten-64-to-32 warning in crc32c/fix a compile error on 32-bit/
,,0.0823,rocksdb,Merge pull request from zhipeng-jia/fix_clang_warning Fix clang warnings/Fix clang warnings regarding unnecessary std::move/
,,0.0843,rocksdb,Merge pull request from zhipeng-jia/fix_clang_warning Fix clang warnings/Fix clang warnings regarding unnecessary std::move/
,,0.0823,rocksdb,Merge pull request from zhipeng-jia/fix_clang_warning Fix clang warnings/Fix clang warnings regarding unnecessary std::move/
,,0.066,rocksdb,Fix rebase issues and new code warnings./
,,0.1889,rocksdb,"Fixed compile warnings in posix_logger.h and coding.h Summary: Fixed the following compile warnings: /Users/yhchiang/rocksdb/util/posix_logger.h:32:11: error: unused variable kDebugLogChunkSize [-Werror,-Wunused-const-variable] const int kDebugLogChunkSize 128 * 1024; ^ /Users/yhchiang/rocksdb/util/coding.h:24:20: error: unused variable kMaxVarint32Length [-Werror,-Wunused-const-variable] const unsigned int kMaxVarint32Length 5; ^ 2 errors generated. Test Plan: make clean rocksdb Reviewers: igor, sdong, anthony, IslamAbdelRahman, rven, kradhakrishnan, adamretter Reviewed By: adamretter Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.1679,rocksdb,"Fix the build break on Ubuntu 15.10 when gcc 5.2.1 is used Summary: Using gcc 5.2.1 to compile RocksDB on Ubuntu 15.10 results in a warning about unused variable. Warning is treated as an error and all of it results in a build break. Fix the issue and make sure that everything compiles with that particular configuration. P.S. Lint complains about a non-ASCII character used in the source code (""Wagner-Fischer""). Fix this as well. Test Plan: Everything compiler cleanly on the system which exhibited the problem. `make clean && make 16` on CentOS. `make clean && USE_CLANG=1 make 16` on CentOS. Reviewers: sdong, igor Reviewed By: igor Subscribers: andrewkr, dhruba Differential Revision:"
,,0.1915,rocksdb,"Fixed compile warnings in posix_logger.h and coding.h Summary: Fixed the following compile warnings: /Users/yhchiang/rocksdb/util/posix_logger.h:32:11: error: unused variable kDebugLogChunkSize [-Werror,-Wunused-const-variable] const int kDebugLogChunkSize 128 * 1024; ^ /Users/yhchiang/rocksdb/util/coding.h:24:20: error: unused variable kMaxVarint32Length [-Werror,-Wunused-const-variable] const unsigned int kMaxVarint32Length 5; ^ 2 errors generated. Test Plan: make clean rocksdb Reviewers: igor, sdong, anthony, IslamAbdelRahman, rven, kradhakrishnan, adamretter Reviewed By: adamretter Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.1849,rocksdb,"Fix clang analyzer errors Summary: Fixing erros reported by clang static analyzer. * Removing some unused variables. * Adding assertions to fix false positives reported by clang analyzer. * Adding `__clang_analyzer__` macro to suppress false positive warnings. Test Plan: USE_CLANG=1 OPT=-g make analyze Reviewers: andrewkr, sdong Reviewed By: sdong Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.1895,rocksdb,"Fix clang analyzer errors Summary: Fixing erros reported by clang static analyzer. * Removing some unused variables. * Adding assertions to fix false positives reported by clang analyzer. * Adding `__clang_analyzer__` macro to suppress false positive warnings. Test Plan: USE_CLANG=1 OPT=-g make analyze Reviewers: andrewkr, sdong Reviewed By: sdong Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.191,rocksdb,"Fix clang analyzer errors Summary: Fixing erros reported by clang static analyzer. * Removing some unused variables. * Adding assertions to fix false positives reported by clang analyzer. * Adding `__clang_analyzer__` macro to suppress false positive warnings. Test Plan: USE_CLANG=1 OPT=-g make analyze Reviewers: andrewkr, sdong Reviewed By: sdong Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.1804,rocksdb,"Fix clang analyzer errors Summary: Fixing erros reported by clang static analyzer. * Removing some unused variables. * Adding assertions to fix false positives reported by clang analyzer. * Adding `__clang_analyzer__` macro to suppress false positive warnings. Test Plan: USE_CLANG=1 OPT=-g make analyze Reviewers: andrewkr, sdong Reviewed By: sdong Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.1697,rocksdb,"Fix clang analyzer errors Summary: Fixing erros reported by clang static analyzer. * Removing some unused variables. * Adding assertions to fix false positives reported by clang analyzer. * Adding `__clang_analyzer__` macro to suppress false positive warnings. Test Plan: USE_CLANG=1 OPT=-g make analyze Reviewers: andrewkr, sdong Reviewed By: sdong Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.1849,rocksdb,"Fix clang analyzer errors Summary: Fixing erros reported by clang static analyzer. * Removing some unused variables. * Adding assertions to fix false positives reported by clang analyzer. * Adding `__clang_analyzer__` macro to suppress false positive warnings. Test Plan: USE_CLANG=1 OPT=-g make analyze Reviewers: andrewkr, sdong Reviewed By: sdong Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.1743,rocksdb,"Fix clang analyzer errors Summary: Fixing erros reported by clang static analyzer. * Removing some unused variables. * Adding assertions to fix false positives reported by clang analyzer. * Adding `__clang_analyzer__` macro to suppress false positive warnings. Test Plan: USE_CLANG=1 OPT=-g make analyze Reviewers: andrewkr, sdong Reviewed By: sdong Subscribers: andrewkr, dhruba, leveldb Differential Revision:"
,,0.0699,rocksdb,"Add NoSpace subcode to IOError (#1320) Add a sub code to distinguish ""out of space"" errors from regular I/O errors/Add Status to RocksDBException so that meaningful function result Status from the C++ API isnt lost (#1273)/"
,,0.075,rocksdb,fix typo in comments (#1360) * fix typo in option.hs comment * fix typo in checkpoints comment/
,,0.1194,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.1083,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.2227,rocksdb,"Range deletion microoptimizations Summary: Made RangeDelAggregators InternalKeyComparator member a reference-to-const so we dont need to copy-construct it. Also added InternalKeyComparator to ImmutableCFOptions so we dont need to construct one for each DBIter. Made MemTable::NewRangeTombstoneIterator and the table readers NewRangeTombstoneIterator() functions return nullptr instead of NewEmptyInternalIterator to avoid the allocation. Updated callers accordingly. Closes Differential Revision: D4208169 Pulled By: ajkr fbshipit-source-id: 2fd65cf/Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.1486,rocksdb,"util/thread_local.h: silence a clang-build warning Summary: otherwise clang complains with /home/jenkins/workspace/ceph-master/src/rocksdb/util/thread_local.h:205:5: error: macro expansion producing defined has undefined behavior [-Werror,-Wexpansion-to-defined] ^ /home/jenkins/workspace/ceph-master/src/rocksdb/util/thread_local.h:22:4: note: expanded from macro ROCKSDB_SUPPORT_THREAD_LOCAL defined(OS_WIN) && defined(OS_MACOSX) && defined(IOS_CROSS_COMPILE) ^` Signed-off-by: Kefu Chai Closes Differential Revision: D4394140 Pulled By: siying fbshipit-source-id: f0beda0/gcc-7 requires include for std::function Summary: Fixes compile error: In file included from ./util/statistics.h:17:0, from ./util/stop_watch.h:8, from ./util/perf_step_timer.h:9, from ./util/iostats_context_imp.h:8, from ./util/posix_logger.h:27, from ./port/util_logger.h:18, from ./db/auto_roll_logger.h:15, from db/auto_roll_logger.cc:6: ./util/thread_local.h:65:16: error: function in namespace std does not name a template type typedef std::function<void(void*, void*)> FoldFunc; Closes Differential Revision: D4318702 Pulled By: yiwu-arbug fbshipit-source-id: 8c5d17a/Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/"
,,0.1314,rocksdb,"Fix travis (compile for clang 3.9) Summary: Travis fail because it uses clang 3.6 which dont recognize `__attribute__((__no_sanitize__(""undefined"")))` Closes Differential Revision: D4257175 Pulled By: IslamAbdelRahman fbshipit-source-id: fb4d1ab/disable UBSAN for functions with intentional shift / overflow Summary: disable UBSAN for functions with intentional left shift on number / overflow These functions are rocksdb:: Hash FixedLengthColBufEncoder::Append FaultInjectionTest:: Key Closes Differential Revision: D4240801 Pulled By: IslamAbdelRahman fbshipit-source-id: 3e1caf6/"
,,0.1157,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.2247,rocksdb,"Range deletion microoptimizations Summary: Made RangeDelAggregators InternalKeyComparator member a reference-to-const so we dont need to copy-construct it. Also added InternalKeyComparator to ImmutableCFOptions so we dont need to construct one for each DBIter. Made MemTable::NewRangeTombstoneIterator and the table readers NewRangeTombstoneIterator() functions return nullptr instead of NewEmptyInternalIterator to avoid the allocation. Updated callers accordingly. Closes Differential Revision: D4208169 Pulled By: ajkr fbshipit-source-id: 2fd65cf/Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.1194,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.1176,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.1213,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.1157,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.091,rocksdb,Gcc 7 fallthrough Summary: hopefully the last of the gcc-7 compile errors Closes Differential Revision: D4332106 Pulled By: IslamAbdelRahman fbshipit-source-id: 139448c/
,,0.1157,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.2059,rocksdb,"Change the default of delayed slowdown value to 16MB/s Summary: Change the default of delayed slowdown value to 16MB/s and further increase the L0 stop condition to 36 files. Closes Differential Revision: D4489229 Pulled By: siying fbshipit-source-id: 1003981/Fix OptimizeForPointLookup() Summary: If users directly call OptimizeForPointLookup(), it is broken as the option isnt compatible with parallel memtable insert. Fix it by using memtable bloomo filter instead. Closes Differential Revision: D4442836 Pulled By: siying fbshipit-source-id: bf6c9cd/direct io write support Summary: rocksdb direct io support ``` ~/rocksdb] ./db_bench Initializing RocksDB Options from the specified file Initializing RocksDB Options from command-line flags RocksDB: version 5.0 Date: Wed Nov 23 13:17:43 2016 CPU: 40 * Intel(R) Xeon(R) CPU E5-2660 v2 2.20GHz CPUCache: 25600 KB Keys: 16 bytes each Values: 100 bytes each (50 bytes after compression) Entries: 1000000 Prefix: 0 bytes Keys per prefix: 0 RawSize: 110.6 MB (estimated) FileSize: 62.9 MB (estimated) Write rate: 0 bytes/second Compression: Snappy Memtablerep: skip_list Perf Level: 1 WARNING: Assertions are enabled; benchmarks unnecessarily slow Initializing RocksDB Options from the specified file Initializing RocksDB Options from command-line flags DB path: [/tmp/rocksdbtest-112628/dbbench] fillseq : 4.393 micros/op 227639 ops/sec; 25.2 MB/s ~/roc Closes Differential Revision: D4241093 Pulled By: lightmark fbshipit-source-id: 98c29e3/Improve Write Stalling System Summary: Current write stalling system has the problem of lacking of positive feedback if the restricted rate is already too low. Users sometimes stack in very low slowdown value. With the diff, we add a positive feedback (increasing the slowdown value) if we recover from slowdown state back to normal. To avoid the positive feedback to keep the slowdown value to be to high, we add issue a negative feedback every time we are close to the stop condition. Experiments show it is easier to reach a relative balance than before. Also increase level0_stop_writes_trigger default from 24 to 32. Since level0_slowdown_writes_trigger default is 20, stop trigger 24 only gives four files as the buffer time to slowdown writes. In order to avoid stop in four files while 20 files have been accumulated, the slowdown value must be very low, which is amost the same as stop. It also doesnt give enough time for the slowdown value to converge. Increase it to 32 will smooth out the system. Closes Differential Revision: D4218519 Pulled By: siying fbshipit-source-id: 95e4088/Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.1139,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.2747,rocksdb,"Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.1157,rocksdb,Gcc 7 error expansion to defined Summary: sorry if these gcc-7/clang-4 cleanups are getting tedious. Closes Differential Revision: D4318792 Pulled By: yiwu-arbug fbshipit-source-id: 8e85891/
,,0.2353,rocksdb,"Remove incorrect statistics warning Summary: statistics are always concurrently updated regardless of whether a single instance or multiple instances are used. remove the warning since its unnecessarily preventing people from sharing stats objects across rocksdb instances. replace which was having some problem with our internal tools. Closes Differential Revision: D4495970 Pulled By: ajkr fbshipit-source-id: 6601f61/Change the default of delayed slowdown value to 16MB/s Summary: Change the default of delayed slowdown value to 16MB/s and further increase the L0 stop condition to 36 files. Closes Differential Revision: D4489229 Pulled By: siying fbshipit-source-id: 1003981/fixed typo Summary: I fixed exisit exist Closes Differential Revision: D4451466 Pulled By: yiwu-arbug fbshipit-source-id: b447c3a/direct io write support Summary: rocksdb direct io support ``` ~/rocksdb] ./db_bench Initializing RocksDB Options from the specified file Initializing RocksDB Options from command-line flags RocksDB: version 5.0 Date: Wed Nov 23 13:17:43 2016 CPU: 40 * Intel(R) Xeon(R) CPU E5-2660 v2 2.20GHz CPUCache: 25600 KB Keys: 16 bytes each Values: 100 bytes each (50 bytes after compression) Entries: 1000000 Prefix: 0 bytes Keys per prefix: 0 RawSize: 110.6 MB (estimated) FileSize: 62.9 MB (estimated) Write rate: 0 bytes/second Compression: Snappy Memtablerep: skip_list Perf Level: 1 WARNING: Assertions are enabled; benchmarks unnecessarily slow Initializing RocksDB Options from the specified file Initializing RocksDB Options from command-line flags DB path: [/tmp/rocksdbtest-112628/dbbench] fillseq : 4.393 micros/op 227639 ops/sec; 25.2 MB/s ~/roc Closes Differential Revision: D4241093 Pulled By: lightmark fbshipit-source-id: 98c29e3/Unified InlineSkipList::Insert algorithm with hinting Summary: This PR is based on nbronsons diff with small modifications to wire it up with existing interface. Comparing to previous version, this approach works better for inserting keys in decreasing order or updating the same key, and impose less restriction to the prefix extractor. Summary from original diff This diff introduces a single InlineSkipList::Insert that unifies the existing sequential insert optimization (prev_), concurrent insertion, and insertion using externally-managed insertion point hints. Theres a deep symmetry between insertion hints (cursors) and the concurrent algorithm. In both cases we have partial information from the recent past that is likely but not certain to be accurate. This diff introduces the struct InlineSkipList::Splice, which encodes predecessor and successor information in the same form that was previously only used within a single call to InsertConcurrently. Splice holds information about an insertion point that can be used to levera Closes Differential Revision: D4217283 Pulled By: yiwu-arbug fbshipit-source-id: 33ee437/Add WriteOptions.no_slowdown Summary: If the WriteOptions.no_slowdown flag is set AND we need to wait or sleep for the write request, then fail immediately with Status::Incomplete(). Closes Differential Revision: D4191405 Pulled By: maysamyabandeh fbshipit-source-id: 7f3ce3f/Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.3732,rocksdb,"Unified InlineSkipList::Insert algorithm with hinting Summary: This PR is based on nbronsons diff with small modifications to wire it up with existing interface. Comparing to previous version, this approach works better for inserting keys in decreasing order or updating the same key, and impose less restriction to the prefix extractor. Summary from original diff This diff introduces a single InlineSkipList::Insert that unifies the existing sequential insert optimization (prev_), concurrent insertion, and insertion using externally-managed insertion point hints. Theres a deep symmetry between insertion hints (cursors) and the concurrent algorithm. In both cases we have partial information from the recent past that is likely but not certain to be accurate. This diff introduces the struct InlineSkipList::Splice, which encodes predecessor and successor information in the same form that was previously only used within a single call to InsertConcurrently. Splice holds information about an insertion point that can be used to levera Closes Differential Revision: D4217283 Pulled By: yiwu-arbug fbshipit-source-id: 33ee437/Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.1299,rocksdb,"Fix travis (compile for clang 3.9) Summary: Travis fail because it uses clang 3.6 which dont recognize `__attribute__((__no_sanitize__(""undefined"")))` Closes Differential Revision: D4257175 Pulled By: IslamAbdelRahman fbshipit-source-id: fb4d1ab/disable UBSAN for functions with intentional shift / overflow Summary: disable UBSAN for functions with intentional left shift on number / overflow These functions are rocksdb:: Hash FixedLengthColBufEncoder::Append FaultInjectionTest:: Key Closes Differential Revision: D4240801 Pulled By: IslamAbdelRahman fbshipit-source-id: 3e1caf6/"
,,0.16699999999999998,rocksdb,"Fix for 2PC causing WAL to grow too large Summary: Consider the following single column family scenario: prepare in log A commit in log B *WAL is too large, flush all CFs to releast log A* *CFA is on log B so we do not see CFA is depending on log A so no flush is requested* To fix this we must also consider the log containing the prepare section when determining what log a CF is dependent on. Closes Differential Revision: D4403265 Pulled By: reidHoruff fbshipit-source-id: ce800ff/Improve Write Stalling System Summary: Current write stalling system has the problem of lacking of positive feedback if the restricted rate is already too low. Users sometimes stack in very low slowdown value. With the diff, we add a positive feedback (increasing the slowdown value) if we recover from slowdown state back to normal. To avoid the positive feedback to keep the slowdown value to be to high, we add issue a negative feedback every time we are close to the stop condition. Experiments show it is easier to reach a relative balance than before. Also increase level0_stop_writes_trigger default from 24 to 32. Since level0_slowdown_writes_trigger default is 20, stop trigger 24 only gives four files as the buffer time to slowdown writes. In order to avoid stop in four files while 20 files have been accumulated, the slowdown value must be very low, which is amost the same as stop. It also doesnt give enough time for the slowdown value to converge. Increase it to 32 will smooth out the system. Closes Differential Revision: D4218519 Pulled By: siying fbshipit-source-id: 95e4088/DeleteRange unsupported in non-block-based tables Summary: Return an error from DeleteRange() (or Write() if the user is using the low-level WriteBatch API) if an unsupported table type is configured. Closes Differential Revision: D4185933 Pulled By: ajkr fbshipit-source-id: abcdf84/"
,,0.2011,rocksdb,"Improve Write Stalling System Summary: Current write stalling system has the problem of lacking of positive feedback if the restricted rate is already too low. Users sometimes stack in very low slowdown value. With the diff, we add a positive feedback (increasing the slowdown value) if we recover from slowdown state back to normal. To avoid the positive feedback to keep the slowdown value to be to high, we add issue a negative feedback every time we are close to the stop condition. Experiments show it is easier to reach a relative balance than before. Also increase level0_stop_writes_trigger default from 24 to 32. Since level0_slowdown_writes_trigger default is 20, stop trigger 24 only gives four files as the buffer time to slowdown writes. In order to avoid stop in four files while 20 files have been accumulated, the slowdown value must be very low, which is amost the same as stop. It also doesnt give enough time for the slowdown value to converge. Increase it to 32 will smooth out the system. Closes Differential Revision: D4218519 Pulled By: siying fbshipit-source-id: 95e4088/"
,,0.28800000000000003,rocksdb,"Unified InlineSkipList::Insert algorithm with hinting Summary: This PR is based on nbronsons diff with small modifications to wire it up with existing interface. Comparing to previous version, this approach works better for inserting keys in decreasing order or updating the same key, and impose less restriction to the prefix extractor. Summary from original diff This diff introduces a single InlineSkipList::Insert that unifies the existing sequential insert optimization (prev_), concurrent insertion, and insertion using externally-managed insertion point hints. Theres a deep symmetry between insertion hints (cursors) and the concurrent algorithm. In both cases we have partial information from the recent past that is likely but not certain to be accurate. This diff introduces the struct InlineSkipList::Splice, which encodes predecessor and successor information in the same form that was previously only used within a single call to InsertConcurrently. Splice holds information about an insertion point that can be used to levera Closes Differential Revision: D4217283 Pulled By: yiwu-arbug fbshipit-source-id: 33ee437/"
,,0.1359,rocksdb,"Fix travis (compile for clang 3.9) Summary: Travis fail because it uses clang 3.6 which dont recognize `__attribute__((__no_sanitize__(""undefined"")))` Closes Differential Revision: D4257175 Pulled By: IslamAbdelRahman fbshipit-source-id: fb4d1ab/disable UBSAN for functions with intentional shift / overflow Summary: disable UBSAN for functions with intentional left shift on number / overflow These functions are rocksdb:: Hash FixedLengthColBufEncoder::Append FaultInjectionTest:: Key Closes Differential Revision: D4240801 Pulled By: IslamAbdelRahman fbshipit-source-id: 3e1caf6/"
,,0.29600000000000004,rocksdb,"Fix for 2PC causing WAL to grow too large Summary: Consider the following single column family scenario: prepare in log A commit in log B *WAL is too large, flush all CFs to releast log A* *CFA is on log B so we do not see CFA is depending on log A so no flush is requested* To fix this we must also consider the log containing the prepare section when determining what log a CF is dependent on. Closes Differential Revision: D4403265 Pulled By: reidHoruff fbshipit-source-id: ce800ff/Fix implicit conversion between int64_t to int Summary: Make conversion explicit, implicit conversion breaks the build Closes Differential Revision: D4245158 Pulled By: IslamAbdelRahman fbshipit-source-id: aaec00d/Avoid intentional overflow in GetL0ThresholdSpeedupCompaction Summary: fixes integer overflow in GetL0ThresholdSpeedupCompaction() by checking if int become UBSAN will complain about that since this is still an overflow, we can fix the issue by simply using int64_t Closes Differential Revision: D4241525 Pulled By: IslamAbdelRahman fbshipit-source-id: b3ae21f/Improve Write Stalling System Summary: Current write stalling system has the problem of lacking of positive feedback if the restricted rate is already too low. Users sometimes stack in very low slowdown value. With the diff, we add a positive feedback (increasing the slowdown value) if we recover from slowdown state back to normal. To avoid the positive feedback to keep the slowdown value to be to high, we add issue a negative feedback every time we are close to the stop condition. Experiments show it is easier to reach a relative balance than before. Also increase level0_stop_writes_trigger default from 24 to 32. Since level0_slowdown_writes_trigger default is 20, stop trigger 24 only gives four files as the buffer time to slowdown writes. In order to avoid stop in four files while 20 files have been accumulated, the slowdown value must be very low, which is amost the same as stop. It also doesnt give enough time for the slowdown value to converge. Increase it to 32 will smooth out the system. Closes Differential Revision: D4218519 Pulled By: siying fbshipit-source-id: 95e4088/Unified InlineSkipList::Insert algorithm with hinting Summary: This PR is based on nbronsons diff with small modifications to wire it up with existing interface. Comparing to previous version, this approach works better for inserting keys in decreasing order or updating the same key, and impose less restriction to the prefix extractor. Summary from original diff This diff introduces a single InlineSkipList::Insert that unifies the existing sequential insert optimization (prev_), concurrent insertion, and insertion using externally-managed insertion point hints. Theres a deep symmetry between insertion hints (cursors) and the concurrent algorithm. In both cases we have partial information from the recent past that is likely but not certain to be accurate. This diff introduces the struct InlineSkipList::Splice, which encodes predecessor and successor information in the same form that was previously only used within a single call to InsertConcurrently. Splice holds information about an insertion point that can be used to levera Closes Differential Revision: D4217283 Pulled By: yiwu-arbug fbshipit-source-id: 33ee437/DeleteRange unsupported in non-block-based tables Summary: Return an error from DeleteRange() (or Write() if the user is using the low-level WriteBatch API) if an unsupported table type is configured. Closes Differential Revision: D4185933 Pulled By: ajkr fbshipit-source-id: abcdf84/Fix min_write_buffer_number_to_merge 0 bug Summary: Its possible that we set min_write_buffer_number_to_merge to 0. This should never happen Closes Differential Revision: D4183356 Pulled By: yiwu-arbug fbshipit-source-id: c9d39d7/Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.2747,rocksdb,"Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.2021,rocksdb,"Improve Write Stalling System Summary: Current write stalling system has the problem of lacking of positive feedback if the restricted rate is already too low. Users sometimes stack in very low slowdown value. With the diff, we add a positive feedback (increasing the slowdown value) if we recover from slowdown state back to normal. To avoid the positive feedback to keep the slowdown value to be to high, we add issue a negative feedback every time we are close to the stop condition. Experiments show it is easier to reach a relative balance than before. Also increase level0_stop_writes_trigger default from 24 to 32. Since level0_slowdown_writes_trigger default is 20, stop trigger 24 only gives four files as the buffer time to slowdown writes. In order to avoid stop in four files while 20 files have been accumulated, the slowdown value must be very low, which is amost the same as stop. It also doesnt give enough time for the slowdown value to converge. Increase it to 32 will smooth out the system. Closes Differential Revision: D4218519 Pulled By: siying fbshipit-source-id: 95e4088/"
,,0.2026,rocksdb,"Range deletion microoptimizations Summary: Made RangeDelAggregators InternalKeyComparator member a reference-to-const so we dont need to copy-construct it. Also added InternalKeyComparator to ImmutableCFOptions so we dont need to construct one for each DBIter. Made MemTable::NewRangeTombstoneIterator and the table readers NewRangeTombstoneIterator() functions return nullptr instead of NewEmptyInternalIterator to avoid the allocation. Updated callers accordingly. Closes Differential Revision: D4208169 Pulled By: ajkr fbshipit-source-id: 2fd65cf/Remove Arena in RangeDelAggregator Summary: The Arena construction/destruction introduced significant overhead to read-heavy workload just by creating empty vectors for its blocks, so avoid it in RangeDelAggregator. Closes Differential Revision: D4207781 Pulled By: ajkr fbshipit-source-id: 9d1c130/Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.29100000000000004,rocksdb,"Unified InlineSkipList::Insert algorithm with hinting Summary: This PR is based on nbronsons diff with small modifications to wire it up with existing interface. Comparing to previous version, this approach works better for inserting keys in decreasing order or updating the same key, and impose less restriction to the prefix extractor. Summary from original diff This diff introduces a single InlineSkipList::Insert that unifies the existing sequential insert optimization (prev_), concurrent insertion, and insertion using externally-managed insertion point hints. Theres a deep symmetry between insertion hints (cursors) and the concurrent algorithm. In both cases we have partial information from the recent past that is likely but not certain to be accurate. This diff introduces the struct InlineSkipList::Splice, which encodes predecessor and successor information in the same form that was previously only used within a single call to InsertConcurrently. Splice holds information about an insertion point that can be used to levera Closes Differential Revision: D4217283 Pulled By: yiwu-arbug fbshipit-source-id: 33ee437/"
,,0.2748,rocksdb,"Simplify MemTable::Update Summary: As suggested by testn in The Add is at the end of the function. Having a fallthough will result in it being added twice. Closes Differential Revision: D4331906 Pulled By: yiwu-arbug fbshipit-source-id: 895c4a0/intentional fallthough (prevents gcc-7/clang-4 error) Summary: db/memtable.cc: In member function void rocksdb::MemTable::Update(rocksdb::SequenceNumber, const rocksdb::Slice&, const rocksdb::Slice&): db/memtable.cc:736:11: error: this statement may fall through [-Werror=implicit-fallthrough=] } ^ db/memtable.cc:738:9: note: here default: ^~~~~~~ cc1plus: all warnings being treated as errors closes Closes Differential Revision: D4318696 Pulled By: yiwu-arbug fbshipit-source-id: 1a8981c/Unified InlineSkipList::Insert algorithm with hinting Summary: This PR is based on nbronsons diff with small modifications to wire it up with existing interface. Comparing to previous version, this approach works better for inserting keys in decreasing order or updating the same key, and impose less restriction to the prefix extractor. Summary from original diff This diff introduces a single InlineSkipList::Insert that unifies the existing sequential insert optimization (prev_), concurrent insertion, and insertion using externally-managed insertion point hints. Theres a deep symmetry between insertion hints (cursors) and the concurrent algorithm. In both cases we have partial information from the recent past that is likely but not certain to be accurate. This diff introduces the struct InlineSkipList::Splice, which encodes predecessor and successor information in the same form that was previously only used within a single call to InsertConcurrently. Splice holds information about an insertion point that can be used to levera Closes Differential Revision: D4217283 Pulled By: yiwu-arbug fbshipit-source-id: 33ee437/Range deletion microoptimizations Summary: Made RangeDelAggregators InternalKeyComparator member a reference-to-const so we dont need to copy-construct it. Also added InternalKeyComparator to ImmutableCFOptions so we dont need to construct one for each DBIter. Made MemTable::NewRangeTombstoneIterator and the table readers NewRangeTombstoneIterator() functions return nullptr instead of NewEmptyInternalIterator to avoid the allocation. Updated callers accordingly. Closes Differential Revision: D4208169 Pulled By: ajkr fbshipit-source-id: 2fd65cf/Remove Arena in RangeDelAggregator Summary: The Arena construction/destruction introduced significant overhead to read-heavy workload just by creating empty vectors for its blocks, so avoid it in RangeDelAggregator. Closes Differential Revision: D4207781 Pulled By: ajkr fbshipit-source-id: 9d1c130/Report memory usage by memtable insert hints map. Summary: It is hard to measure acutal memory usage by std containers. Even providing a custom allocator will miss count some of the usage. Here we only do a wild guess on its memory usage. Closes Differential Revision: D4179945 Pulled By: yiwu-arbug fbshipit-source-id: 32ab929/Optimize sequential insert into memtable Part 1: Interface Summary: Currently our skip-list have an optimization to speedup sequential inserts from a single stream, by remembering the last insert position. We extend the idea to support sequential inserts from multiple streams, and even tolerate small reordering wihtin each stream. This PR is the interface part adding the following: Add `memtable_insert_prefix_extractor` to allow specifying prefix for each key. Add `InsertWithHint()` interface to memtable, to allow underlying implementation to return a hint of insert position, which can be later pass back to optimize inserts. Memtable will maintain a map from prefix to hints and pass the hint via `InsertWithHint()` if `memtable_insert_prefix_extractor` is non-null. Closes Differential Revision: D4079367 Pulled By: yiwu-arbug fbshipit-source-id: 3555326/"
,,0.20600000000000002,rocksdb,"Improve Write Stalling System Summary: Current write stalling system has the problem of lacking of positive feedback if the restricted rate is already too low. Users sometimes stack in very low slowdown value. With the diff, we add a positive feedback (increasing the slowdown value) if we recover from slowdown state back to normal. To avoid the positive feedback to keep the slowdown value to be to high, we add issue a negative feedback every time we are close to the stop condition. Experiments show it is easier to reach a relative balance than before. Also increase level0_stop_writes_trigger default from 24 to 32. Since level0_slowdown_writes_trigger default is 20, stop trigger 24 only gives four files as the buffer time to slowdown writes. In order to avoid stop in four files while 20 files have been accumulated, the slowdown value must be very low, which is amost the same as stop. It also doesnt give enough time for the slowdown value to converge. Increase it to 32 will smooth out the system. Closes Differential Revision: D4218519 Pulled By: siying fbshipit-source-id: 95e4088/"
,,0.1136,rocksdb,"Statistic for how often rate limiter is drained Summary: This is the metric I plan to use for adaptive rate limiting. The statistics are updated only if the rate limiter is drained by flush or compaction. I believe (but am not certain) that this is the normal case. The Statistics object is passed in RateLimiter::Request() to avoid requiring changes to client code, which wouldve been necessary if we passed it in the RateLimiter constructor. Closes Differential Revision: D4646489 Pulled By: ajkr fbshipit-source-id: d8e0161/"
,,0.1153,rocksdb,"Statistic for how often rate limiter is drained Summary: This is the metric I plan to use for adaptive rate limiting. The statistics are updated only if the rate limiter is drained by flush or compaction. I believe (but am not certain) that this is the normal case. The Statistics object is passed in RateLimiter::Request() to avoid requiring changes to client code, which wouldve been necessary if we passed it in the RateLimiter constructor. Closes Differential Revision: D4646489 Pulled By: ajkr fbshipit-source-id: d8e0161/"
,,0.0913,rocksdb,"Fix build with MinGW Summary: There still are many warnings (most of them about invalid printf format for long long), but it builds if FAIL_ON_WARNINGS is disabled. Closes Differential Revision: D4807355 Pulled By: siying fbshipit-source-id: ef03786/"
,,0.1169,rocksdb,"Statistic for how often rate limiter is drained Summary: This is the metric I plan to use for adaptive rate limiting. The statistics are updated only if the rate limiter is drained by flush or compaction. I believe (but am not certain) that this is the normal case. The Statistics object is passed in RateLimiter::Request() to avoid requiring changes to client code, which wouldve been necessary if we passed it in the RateLimiter constructor. Closes Differential Revision: D4646489 Pulled By: ajkr fbshipit-source-id: d8e0161/"
,,0.1186,rocksdb,"Statistic for how often rate limiter is drained Summary: This is the metric I plan to use for adaptive rate limiting. The statistics are updated only if the rate limiter is drained by flush or compaction. I believe (but am not certain) that this is the normal case. The Statistics object is passed in RateLimiter::Request() to avoid requiring changes to client code, which wouldve been necessary if we passed it in the RateLimiter constructor. Closes Differential Revision: D4646489 Pulled By: ajkr fbshipit-source-id: d8e0161/"
,,0.0932,rocksdb,"Fix build with MinGW Summary: There still are many warnings (most of them about invalid printf format for long long), but it builds if FAIL_ON_WARNINGS is disabled. Closes Differential Revision: D4807355 Pulled By: siying fbshipit-source-id: ef03786/"
,,0.1186,rocksdb,"Statistic for how often rate limiter is drained Summary: This is the metric I plan to use for adaptive rate limiting. The statistics are updated only if the rate limiter is drained by flush or compaction. I believe (but am not certain) that this is the normal case. The Statistics object is passed in RateLimiter::Request() to avoid requiring changes to client code, which wouldve been necessary if we passed it in the RateLimiter constructor. Closes Differential Revision: D4646489 Pulled By: ajkr fbshipit-source-id: d8e0161/"
,,0.4228,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4179,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4241,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4037,rocksdb,"Expose DB::DeleteRange and WriteBath::DeleteRange in Java Summary: Added JNI wrapper from `DeleteRange` methods Closes Differential Revision: D4657746 Pulled By: yiwu-arbug fbshipit-source-id: 3fc7ab8/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4205,rocksdb,"Fix Compilation errors when using IBM Java Summary: PR to fix this issue Closes Differential Revision: D4682411 Pulled By: siying fbshipit-source-id: a519be1/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.3989,rocksdb,"Expose DB::DeleteRange and WriteBath::DeleteRange in Java Summary: Added JNI wrapper from `DeleteRange` methods Closes Differential Revision: D4657746 Pulled By: yiwu-arbug fbshipit-source-id: 3fc7ab8/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4179,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4204,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4241,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.3983,rocksdb,"Fix Compilation errors when using IBM Java Summary: PR to fix this issue Closes Differential Revision: D4682411 Pulled By: siying fbshipit-source-id: a519be1/Expose DB::DeleteRange and WriteBath::DeleteRange in Java Summary: Added JNI wrapper from `DeleteRange` methods Closes Differential Revision: D4657746 Pulled By: yiwu-arbug fbshipit-source-id: 3fc7ab8/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4216,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4216,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4191,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4179,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4193,rocksdb,"Fix Compilation errors when using IBM Java Summary: PR to fix this issue Closes Differential Revision: D4682411 Pulled By: siying fbshipit-source-id: a519be1/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4253,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4216,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4158,rocksdb,"Fix Compilation errors when using IBM Java Summary: PR to fix this issue Closes Differential Revision: D4682411 Pulled By: siying fbshipit-source-id: a519be1/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4191,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4154,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4228,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4216,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4265,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4216,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4204,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4154,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4228,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4204,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4048,rocksdb,"Expose DB::DeleteRange and WriteBath::DeleteRange in Java Summary: Added JNI wrapper from `DeleteRange` methods Closes Differential Revision: D4657746 Pulled By: yiwu-arbug fbshipit-source-id: 3fc7ab8/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4265,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4241,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4228,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4179,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4001,rocksdb,"Expose DB::DeleteRange and WriteBath::DeleteRange in Java Summary: Added JNI wrapper from `DeleteRange` methods Closes Differential Revision: D4657746 Pulled By: yiwu-arbug fbshipit-source-id: 3fc7ab8/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4179,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4191,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.3866,rocksdb,"dynamic setting of stats_dump_period_sec through SetDBOption() Summary: Resolved the following issue: Closes Differential Revision: D4736764 Pulled By: yiwu-arbug fbshipit-source-id: 64fe0b7/Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4204,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4167,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4179,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4228,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.4179,rocksdb,"Fixed various memory leaks and Java 8 JNI Compatibility Summary: I have manually audited the entire RocksJava code base. Sorry for the large pull-request, I have broken it down into many small atomic commits though. My initial intention was to fix the warnings that appear when running RocksJava on Java 8 with `-Xcheck:jni`, for example when running `make jtest` you would see many errors similar to: ``` WARNING in native method: JNI call made without checking exceptions when required to from CallObjectMethod WARNING in native method: JNI call made without checking exceptions when required to from CallVoidMethod WARNING in native method: JNI call made without checking exceptions when required to from CallStaticVoidMethod ... ``` A few of those warnings still remain, however they seem to come directly from the JVM and are not directly related to RocksJava; I am in contact with the OpenJDK hostpot-dev mailing list about these As a result of fixing these, I realised we were not r Closes Differential Revision: D4591758 Pulled By: siying fbshipit-source-id: 7f7fdf4/"
,,0.0913,rocksdb,"Fix build with MinGW Summary: There still are many warnings (most of them about invalid printf format for long long), but it builds if FAIL_ON_WARNINGS is disabled. Closes Differential Revision: D4807355 Pulled By: siying fbshipit-source-id: ef03786/"
,,0.1186,rocksdb,"Statistic for how often rate limiter is drained Summary: This is the metric I plan to use for adaptive rate limiting. The statistics are updated only if the rate limiter is drained by flush or compaction. I believe (but am not certain) that this is the normal case. The Statistics object is passed in RateLimiter::Request() to avoid requiring changes to client code, which wouldve been necessary if we passed it in the RateLimiter constructor. Closes Differential Revision: D4646489 Pulled By: ajkr fbshipit-source-id: d8e0161/"
,,0.0932,rocksdb,"Fix build with MinGW Summary: There still are many warnings (most of them about invalid printf format for long long), but it builds if FAIL_ON_WARNINGS is disabled. Closes Differential Revision: D4807355 Pulled By: siying fbshipit-source-id: ef03786/"
,,0.0911,rocksdb,Implement ReopenWritibaleFile on Windows and other fixes Summary: Make default impl return NoSupported so the db_blob tests exist in a meaningful manner. Replace std::thread to port::Thread Closes Differential Revision: D5275563 Pulled By: yiwu-arbug fbshipit-source-id: cedf1a18a2c05e20d768c1308b3f3224dbd70ab6/
,,0.1399,rocksdb,"Suppress clang-analyzer false positive Summary: Fixing two types of clang-analyzer false positives: * db is deleted and then reopen, and clang-analyzer thinks we are reusing the pointer after it has been deleted. Adding asserts to hint clang-analyzer the pointer is recreated. * ParsedInternalKey is (intentionally) uninitialized. Initialize the struct only when clang-analyzer is running. Closes Differential Revision: D5093801 Pulled By: yiwu-arbug fbshipit-source-id: f51355382098eb3da5ab9f64e094c6d03e6bdf7d/"
,,0.1399,rocksdb,"Suppress clang-analyzer false positive Summary: Fixing two types of clang-analyzer false positives: * db is deleted and then reopen, and clang-analyzer thinks we are reusing the pointer after it has been deleted. Adding asserts to hint clang-analyzer the pointer is recreated. * ParsedInternalKey is (intentionally) uninitialized. Initialize the struct only when clang-analyzer is running. Closes Differential Revision: D5093801 Pulled By: yiwu-arbug fbshipit-source-id: f51355382098eb3da5ab9f64e094c6d03e6bdf7d/"
,,0.1683,rocksdb,"Make ""make analyze"" happy Summary: ""make analyze"" is reporting some errors. Its complicated to look but it seems to me that they are all false positive. Anyway, I think cleaning them up is a good idea. Some of the changes are hacky but I dont know a better way. Closes Differential Revision: D5341710 Pulled By: siying fbshipit-source-id: 6070e430e0e41a080ef441e05e8ec827d45efab6/Fix errors in clang-analyzer builds Summary: Fix build error in db_iter.cc when running clang-analyzer. ``` CC db/db_iter.o db/db_iter.cc:938:21: error: no matching constructor for initialization of rocksdb::ParsedInternalKey ParsedInternalKey ikey(Slice(), 0, 0); ^ ~~~~~~~~~~~~~ ./db/dbformat.h:84:3: note: candidate constructor not viable: no known conversion from int to rocksdb::ValueType for 3rd argument ParsedInternalKey(const Slice& u, const SequenceNumber& seq, ValueType t) ^ ./db/dbformat.h:78:8: note: candidate constructor (the implicit copy constructor) not viable: requires 1 argument, but 3 were provided struct ParsedInternalKey { ^ ./db/dbformat.h:78:8: note: candidate constructor (the implicit move constructor) not viable: requires 1 argument, but 3 were provided ./db/dbformat.h:83:3: note: candidate constructor not viable: requires 0 arguments, but 3 were provided ParsedInternalKey() { } // Intentionally left uninitialized (for speed) ^ 1 error generated. ``` Closes Differential Revision: D5115751 Pulled By: sagar0 fbshipit-source-id: b0e386d4e935e4725b07761c3ca5f7a8cbde3692/Suppress clang-analyzer false positive Summary: Fixing two types of clang-analyzer false positives: * db is deleted and then reopen, and clang-analyzer thinks we are reusing the pointer after it has been deleted. Adding asserts to hint clang-analyzer the pointer is recreated. * ParsedInternalKey is (intentionally) uninitialized. Initialize the struct only when clang-analyzer is running. Closes Differential Revision: D5093801 Pulled By: yiwu-arbug fbshipit-source-id: f51355382098eb3da5ab9f64e094c6d03e6bdf7d/"
,,0.0929,rocksdb,Implement ReopenWritibaleFile on Windows and other fixes Summary: Make default impl return NoSupported so the db_blob tests exist in a meaningful manner. Replace std::thread to port::Thread Closes Differential Revision: D5275563 Pulled By: yiwu-arbug fbshipit-source-id: cedf1a18a2c05e20d768c1308b3f3224dbd70ab6/
,,0.0964,rocksdb,Implement ReopenWritibaleFile on Windows and other fixes Summary: Make default impl return NoSupported so the db_blob tests exist in a meaningful manner. Replace std::thread to port::Thread Closes Differential Revision: D5275563 Pulled By: yiwu-arbug fbshipit-source-id: cedf1a18a2c05e20d768c1308b3f3224dbd70ab6/
,,0.11199999999999999,rocksdb,"Not using aligned_alloc with gcc4 + asan Summary: GCC 5 + ASAN does not instrument aligned_alloc, which can make ASAN report false-positive with ""free on address which was not malloc"" error. Also suppress leak warning with LRUCache::DisownData(). Closes Differential Revision: D5696465 Pulled By: yiwu-arbug fbshipit-source-id: 87c607c002511fa089b18cc35e24909bee0e74b4/"
,,0.1221,rocksdb,"Compilation fixes for powerpc build, error and missing header guards Summary: This pull request contains miscellaneous compilation fixes. Thanks, Chinmay Closes Differential Revision: D6941424 Pulled By: sagar0 fbshipit-source-id: fe9c26507bf131221f2466740204bff40a15614a/"
,,0.1602,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1634,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1634,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1618,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1586,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1009,rocksdb,Suppress UBSAN error in finer guanularity Summary: Now we suppress alignment UBSAN error as a whole. Suppressing 3-way CRC and murmurhash feels a better idea than turning off alignment check as a whole. Closes Differential Revision: D6971273 Pulled By: siying fbshipit-source-id: 080b59fed6df494b9f622ef7cb5d42d39e6a8cdf/
,,0.0931,rocksdb,Suppress UBSAN error in finer guanularity Summary: Now we suppress alignment UBSAN error as a whole. Suppressing 3-way CRC and murmurhash feels a better idea than turning off alignment check as a whole. Closes Differential Revision: D6971273 Pulled By: siying fbshipit-source-id: 080b59fed6df494b9f622ef7cb5d42d39e6a8cdf/
,,0.1779,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.0953,rocksdb,Fix GitHub issue gcc-8 warnings Summary: Fix the following gcc-8 warnings: conflicting C language linkage declaration [-Werror] writing to an object with no trivial copy-assignment [-Werror=class-memaccess] array subscript is below array bounds [-Werror=array-bounds] Solves Closes Differential Revision: D7684161 Pulled By: yiwu-arbug fbshipit-source-id: 47c0423d26b74add251f1d3595211eee1e41e54a/
,,0.0597,rocksdb,Support StringAppendOperator(delimiter_char) constructor in java-api Summary: Fixes Closes Differential Revision: D7196585 Pulled By: sagar0 fbshipit-source-id: a854f3fc906862ecba685b31946e4ef7c0b421c5/
,,0.1651,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1747,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1175,rocksdb,"fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/fix handling of empty string as checkpoint directory Summary: made `CreateCheckpoint` properly return `InvalidArgument` when called with an empty directory. Previously it triggered an assertion failure due to a bug in the logic. made `ldb` set empty `checkpoint_dir` if thats what the user specifies, so that we can use it to properly test `CreateCheckpoint` in the future. Differential Revision: D6874562 fbshipit-source-id: dcc1bd41768261d9338987fa7711444289707ed7/"
,,0.1634,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1683,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1699,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1747,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1699,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1715,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1171,rocksdb,"fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/Make Optimistic Tx database stackable Summary: This change models Optimistic Tx db after Pessimistic TX db. The motivation for this change is to make the ptr polymorphic so it can be held by the same raw or smart ptr. Currently, due to the inheritance of the Opt Tx db not being rooted in the manner of Pess Tx from a single DB root it is more difficult to write clean code and have clear ownership of the database in cases when options dictate instantiate of plan DB, Pess Tx DB or Opt tx db. Closes Differential Revision: D7184502 Pulled By: yiwu-arbug fbshipit-source-id: 31d06efafd79497bb0c230e971857dba3bd962c3/"
,,0.1667,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1602,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1715,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1634,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1699,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1554,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.115,rocksdb,"fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/Memory Problem Of Destorying ColumnFamilyHandle after deleting the CF Summary: When destorying column family handle after the column family has been deleted, the handle may hold share pointers of some objects in ColumnFamilyOptions, but in the destructor, the destructing order may cause some of the objects to be destoryed before being used by the following steps. Fix it by making a copy of the option object and destory it as the last step. Closes Differential Revision: D7281025 Pulled By: siying fbshipit-source-id: ac18f3b2841788cba4ccfa1abd8d59158c1113bc/"
,,0.1618,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1683,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1586,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1634,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1667,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1763,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1667,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1699,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1528,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/Use nullptr instead of NULL / 0 more consistently. Summary: Closes Differential Revision: D7170968 Pulled By: yiwu-arbug fbshipit-source-id: 308a6b7dd358a04fd9a7de3d927bfd8abd57d348/
,,0.1601,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/Use nullptr instead of NULL / 0 more consistently. Summary: Closes Differential Revision: D7170968 Pulled By: yiwu-arbug fbshipit-source-id: 308a6b7dd358a04fd9a7de3d927bfd8abd57d348/
,,0.1683,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.1415,rocksdb,"fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/Fix pre_release callback argument list. Summary: Primitive types constness does not affect the signature of the method and has no influence on whether the overriding method would actually have that const bool instead of just bool. In addition, it is rarely useful but does produce a compatibility warnings in VS 2015 compiler. Closes Differential Revision: D7475739 Pulled By: ajkr fbshipit-source-id: fb275378b5acc397399420ae6abb4b6bfe5bd32f/WritePrepared Txn: fix race condition on publishing seq Summary: This commit fixes a race condition on calling SetLastPublishedSequence. The function must be called only from the 2nd write queue when two_write_queues is enabled. However there was a bug that would also call it from the main write queue if CommitTimeWriteBatch is provided to the commit request and yet use_only_the_last_commit_time_batch_for_recovery optimization is not enabled. To fix that we penalize the commit request in such cases by doing an additional write solely to publish the seq number from the 2nd queue. Closes Differential Revision: D7361508 Pulled By: maysamyabandeh fbshipit-source-id: bf8f7a27e5cccf5425dccbce25eb0032e8e5a4d7/"
,,0.1667,rocksdb,fix memory leak in two_level_iterator Summary: this PR fixes a few failed contbuild: 1. ASAN memory leak in Block::NewIterator (table/block.cc:429). the proper destruction of first_level_iter_ and second_level_iter_ of two_level_iterator.cc is missing from the code after the refactoring in 2. various unused param errors introduced by 3. updated comment for `ForceReleaseCachedEntry` to emphasize the use of `force_erase` flag. Closes Reviewed By: maysamyabandeh Differential Revision: D7621192 Pulled By: miasantreble fbshipit-source-id: 476c94264083a0730ded957c29de7807e4f5b146/
,,0.39,rocksdb,"transaction_test: with clang-7 (#4074) Summary: clang version 7.0.0- (trunk) Target: x86_64-unknown-linux-gnu Thread model: posix InstalledDir: /usr/bin clang++-7 ./third-party/gtest-1.7.0/fused-src utilities/transactions/transaction_test.cc utilities/transactions/transaction_test.o utilities/transactions/transaction_test.cc:2282:22: error: unused variable txn_options [-Werror,-Wunused-variable] TransactionOptions txn_options; ^ utilities/transactions/transaction_test.cc:2822:22: error: unused variable txn_options [-Werror,-Wunused-variable] TransactionOptions txn_options; ^ utilities/transactions/transaction_test.cc:2928:22: error: unused variable txn_options [-Werror,-Wunused-variable] TransactionOptions txn_options; ^ utilities/transactions/transaction_test.cc:3109:22: error: unused variable txn_options [-Werror,-Wunused-variable] TransactionOptions txn_options; ^ utilities/transactions/transaction_test.cc:4364:22: error: unused variable txn_options [-Werror,-Wunused-variable] TransactionOptions txn_options; ^ Closes Differential Revision: D8698051 Pulled By: ajkr fbshipit-source-id: 6255618eefdd189962fbea1b02cf1eb5ae501274/Fix clang analyze Summary: This fixes the errors as reported here: Closes Differential Revision: D8263086 Pulled By: lth fbshipit-source-id: 5e148d489cab2153e5846d16979a0a1f2d677d57/"
,,0.105,rocksdb,"Small issues (#4564) Summary: Couple of very minor improvements (typos in comments, full qualification of class name, reordering members of a struct to make it smaller) Pull Request resolved: Differential Revision: D10510183 Pulled By: maysamyabandeh fbshipit-source-id: c7ddf9bfbf2db08cd31896c3fd93789d3fa68c8b/Suppress clang analyzer error (#4299) Summary: Suppress multiple clang-analyzer error. All of them are clang false-positive. Pull Request resolved: Differential Revision: D9430740 Pulled By: yiwu-arbug fbshipit-source-id: fbdd575bdc214d124826d61d35a117995c509279/"
,,0.121,rocksdb,Suppress clang analyzer error (#4299) Summary: Suppress multiple clang-analyzer error. All of them are clang false-positive. Pull Request resolved: Differential Revision: D9430740 Pulled By: yiwu-arbug fbshipit-source-id: fbdd575bdc214d124826d61d35a117995c509279/
,,0.1192,rocksdb,Suppress clang analyzer error (#4299) Summary: Suppress multiple clang-analyzer error. All of them are clang false-positive. Pull Request resolved: Differential Revision: D9430740 Pulled By: yiwu-arbug fbshipit-source-id: fbdd575bdc214d124826d61d35a117995c509279/
,,0.1246,rocksdb,Suppress clang analyzer error (#4299) Summary: Suppress multiple clang-analyzer error. All of them are clang false-positive. Pull Request resolved: Differential Revision: D9430740 Pulled By: yiwu-arbug fbshipit-source-id: fbdd575bdc214d124826d61d35a117995c509279/
,,0.1446,rocksdb,fix compilation with g++ option `-Wsuggest-override` (#4272) Summary: Fixes compilation warnings (which are turned into compilation errors by default) when compiling with g++ option `-Wsuggest-override`. Pull Request resolved: Differential Revision: D9322556 Pulled By: siying fbshipit-source-id: abd57a29ec8f544bee77c0bb438f31be830b7244/
,,0.1629,rocksdb,fix clang analyzer error (#4583) Summary: clang analyzer currently fails with the following warnings: > db/log_reader.cc:323:9: warning: Undefined or garbage value returned to caller return r; ^~~~~~~~ db/log_reader.cc:344:11: warning: Undefined or garbage value returned to caller return r; ^~~~~~~~ db/log_reader.cc:369:11: warning: Undefined or garbage value returned to caller return r; Pull Request resolved: Differential Revision: D10523517 Pulled By: miasantreble fbshipit-source-id: 0cc8b8f27657b202bead148bbe7c4aa84fed095b/
,,0.0812,rocksdb,util: fix log_write_bench (#5335) Summary: log_write_bench doesnt compile due to some recent API changes. This patch fixes the compile by adding the missing params for OptimizeForLogWrite() and WritableFileWriter(). Signed-off-by: Yuan Zhou Pull Request resolved: Differential Revision: D15588875 Pulled By: miasantreble fbshipit-source-id: 726ff4dc227733e915c3b796df25bd3ab0b431ac/
,,0.0912,rocksdb,"fix sign compare warnings (#5651) Summary: Fix warnings for gcc9. Pull Request resolved: Test Plan: Tested with ubuntu19.10+gcc9 Differential Revision: D16567428 fbshipit-source-id: 730b2704d42ba0c4e4ea946a3199bbb34be4c25c/Break large file writes into 1GB chunks (#5213) Summary: This is a workaround for the issue described in It has been tested on a database with very large values, but not dedicated test has been added to the code base. Pull Request resolved: Differential Revision: D15243116 Pulled By: siying fbshipit-source-id: e0c226a6cd71a60924dcd7ce7af74abcb4054484/"
,,0.1994,rocksdb,"Make clang-analyzer happy (#5821) Summary: clang-analyzer has uncovered a bunch of places where the code is relying on pointers being valid and one case (in VectorIterator) where a moved-from object is being used: In file included from db/range_tombstone_fragmenter.cc:17: ./util/vector_iterator.h:23:18: warning: Method called on moved-from object keys of type std::vector current_(keys.size()) { ^~~~~~~~~~~ 1 warning generated. utilities/persistent_cache/block_cache_tier_file.cc:39:14: warning: Called C++ object pointer is null Status s env->NewRandomAccessFile(filepath, file, opt); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:47:19: warning: Called C++ object pointer is null Status status env_->GetFileSize(Path(), size); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:290:14: warning: Called C++ object pointer is null Status s env_->FileExists(Path()); ^~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:363:35: warning: Called C++ object pointer is null CacheWriteBuffer* const buf alloc_->Allocate(); ^~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:399:41: warning: Called C++ object pointer is null const uint64_t file_off buf_doff_ * alloc_->BufferSize(); ^~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:463:33: warning: Called C++ object pointer is null size_t start_idx lba.off_ / alloc_->BufferSize(); ^~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:515:5: warning: Called C++ object pointer is null alloc_->Deallocate(bufs_[i]); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~ 7 warnings generated. ar: creating librocksdb_debug.a utilities/memory/memory_test.cc:68:25: warning: Called C++ object pointer is null cache_set->insert(db->GetDBOptions().row_cache.get()); ^~~~~~~~~~~~~~~~~~ 1 warning generated. The patch fixes these by adding assertions and explicitly passing in zero when initializing VectorIterator::current_ (which preserves the existing behavior). Pull Request resolved: Test Plan: Ran make check and make analyze to make sure the warnings have disappeared. Differential Revision: D17455949 Pulled By: ltamasi fbshipit-source-id: 363619618ea649a0674287f9f3b3393e390571ee/"
,,0.1073,rocksdb,"Fixed FALLOC_FL_KEEP_SIZE undefined (#5614) Summary: Fix `error: ëFALLOC_FL_KEEP_SIZEí` undeclared error in `io_posix.cc` during Vagrant build in CentOS as per issue Pull Request resolved: Differential Revision: D17217960 fbshipit-source-id: ef736c51b16833107fd9ccc7917ed1def2a8d02c/fix compile error: ëFALLOC_FL_KEEP_SIZEí undeclared (#5708) Summary: add ""linux/falloc.h"" in env/io_posix.cc to fix compile error: ëFALLOC_FL_KEEP_SIZEí undeclared Signed-off-by: sheng qiu Pull Request resolved: Differential Revision: D16832922 fbshipit-source-id: 30e787c4a1b5a9724a8acfd68962ff5ec5f27d3e/"
,,0.2026,rocksdb,"Make clang-analyzer happy (#5821) Summary: clang-analyzer has uncovered a bunch of places where the code is relying on pointers being valid and one case (in VectorIterator) where a moved-from object is being used: In file included from db/range_tombstone_fragmenter.cc:17: ./util/vector_iterator.h:23:18: warning: Method called on moved-from object keys of type std::vector current_(keys.size()) { ^~~~~~~~~~~ 1 warning generated. utilities/persistent_cache/block_cache_tier_file.cc:39:14: warning: Called C++ object pointer is null Status s env->NewRandomAccessFile(filepath, file, opt); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:47:19: warning: Called C++ object pointer is null Status status env_->GetFileSize(Path(), size); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:290:14: warning: Called C++ object pointer is null Status s env_->FileExists(Path()); ^~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:363:35: warning: Called C++ object pointer is null CacheWriteBuffer* const buf alloc_->Allocate(); ^~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:399:41: warning: Called C++ object pointer is null const uint64_t file_off buf_doff_ * alloc_->BufferSize(); ^~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:463:33: warning: Called C++ object pointer is null size_t start_idx lba.off_ / alloc_->BufferSize(); ^~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:515:5: warning: Called C++ object pointer is null alloc_->Deallocate(bufs_[i]); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~ 7 warnings generated. ar: creating librocksdb_debug.a utilities/memory/memory_test.cc:68:25: warning: Called C++ object pointer is null cache_set->insert(db->GetDBOptions().row_cache.get()); ^~~~~~~~~~~~~~~~~~ 1 warning generated. The patch fixes these by adding assertions and explicitly passing in zero when initializing VectorIterator::current_ (which preserves the existing behavior). Pull Request resolved: Test Plan: Ran make check and make analyze to make sure the warnings have disappeared. Differential Revision: D17455949 Pulled By: ltamasi fbshipit-source-id: 363619618ea649a0674287f9f3b3393e390571ee/"
,,0.2033,rocksdb,"Make clang-analyzer happy (#5821) Summary: clang-analyzer has uncovered a bunch of places where the code is relying on pointers being valid and one case (in VectorIterator) where a moved-from object is being used: In file included from db/range_tombstone_fragmenter.cc:17: ./util/vector_iterator.h:23:18: warning: Method called on moved-from object keys of type std::vector current_(keys.size()) { ^~~~~~~~~~~ 1 warning generated. utilities/persistent_cache/block_cache_tier_file.cc:39:14: warning: Called C++ object pointer is null Status s env->NewRandomAccessFile(filepath, file, opt); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:47:19: warning: Called C++ object pointer is null Status status env_->GetFileSize(Path(), size); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:290:14: warning: Called C++ object pointer is null Status s env_->FileExists(Path()); ^~~~~~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:363:35: warning: Called C++ object pointer is null CacheWriteBuffer* const buf alloc_->Allocate(); ^~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:399:41: warning: Called C++ object pointer is null const uint64_t file_off buf_doff_ * alloc_->BufferSize(); ^~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:463:33: warning: Called C++ object pointer is null size_t start_idx lba.off_ / alloc_->BufferSize(); ^~~~~~~~~~~~~~~~~~~~ utilities/persistent_cache/block_cache_tier_file.cc:515:5: warning: Called C++ object pointer is null alloc_->Deallocate(bufs_[i]); ^~~~~~~~~~~~~~~~~~~~~~~~~~~~ 7 warnings generated. ar: creating librocksdb_debug.a utilities/memory/memory_test.cc:68:25: warning: Called C++ object pointer is null cache_set->insert(db->GetDBOptions().row_cache.get()); ^~~~~~~~~~~~~~~~~~ 1 warning generated. The patch fixes these by adding assertions and explicitly passing in zero when initializing VectorIterator::current_ (which preserves the existing behavior). Pull Request resolved: Test Plan: Ran make check and make analyze to make sure the warnings have disappeared. Differential Revision: D17455949 Pulled By: ltamasi fbshipit-source-id: 363619618ea649a0674287f9f3b3393e390571ee/"
,,0.2122,rocksdb,"Fix memory leak on error opening PlainTable (#5951) Summary: Several error paths in opening of a plain table would leak memory. PR opened the leak to one more error path, which happens to have been (mistakenly) exercised by CuckooTableDBTest.AdaptiveTable. That test has been fixed, and the exercising of plain table error cases (more than before) has been added as BadOptions1 and BadOptions2 to PlainTableDBTest. This effectively moved the memory leak to plain_table_db_test. Also here is a cheap fix for the memory leak, without (yet?) changing the signature of ReadTableProperties. This fixes ASAN on unit tests. Pull Request resolved: Test Plan: make COMPILE_WITH_ASAN=1 check Differential Revision: D18051940 Pulled By: pdillinger fbshipit-source-id: e2952930c09a2b46c4f1ff09818c5090426929de/"
,,0.1409,rocksdb,"Fix memory leak on error opening PlainTable (#5951) Summary: Several error paths in opening of a plain table would leak memory. PR opened the leak to one more error path, which happens to have been (mistakenly) exercised by CuckooTableDBTest.AdaptiveTable. That test has been fixed, and the exercising of plain table error cases (more than before) has been added as BadOptions1 and BadOptions2 to PlainTableDBTest. This effectively moved the memory leak to plain_table_db_test. Also here is a cheap fix for the memory leak, without (yet?) changing the signature of ReadTableProperties. This fixes ASAN on unit tests. Pull Request resolved: Test Plan: make COMPILE_WITH_ASAN=1 check Differential Revision: D18051940 Pulled By: pdillinger fbshipit-source-id: e2952930c09a2b46c4f1ff09818c5090426929de/Fix PlainTableReader not to crash sst_dump (#5940) Summary: Plain table SSTs could crash sst_dump because of a bug in PlainTableReader that can leave table_properties_ as null. Even if it was intended not to keep the table properties in some cases, they were leaked on the offending code path. Steps to reproduce: $ db_bench $ sst_dump from [] to [] Process /dev/shm/dbbench/000014.sst Sst file format: plain table Raw user collected properties Segmentation fault (core dumped) Also added missing unit testing of plain table full_scan_mode, and an assertion in NewIterator to check for regression. Pull Request resolved: Test Plan: new unit test, manual, make check Differential Revision: D18018145 Pulled By: pdillinger fbshipit-source-id: 4310c755e824c4cd6f3f86a3abc20dfa417c5e07/Fix Appveyor build due to signed/unsigned comparison Summary: Pull Request resolved: Test Plan: Travis CI and Appveyor should complete successfully. Differential Revision: D17287422 Pulled By: anand1976 fbshipit-source-id: d9408b692f78be95d0088b29b33f6a8ff40ec97b/Add regression test for serialized Bloom filters (#5778) Summary: Check that we dont accidentally change the on-disk format of existing Bloom filter implementations, including for various CACHE_LINE_SIZE (by changing temporarily). Pull Request resolved: Test Plan: thisisthetest Differential Revision: D17269630 Pulled By: pdillinger fbshipit-source-id: c77017662f010a77603b7d475892b1f0d5563d8b/"
,,0.0933,rocksdb,Implement PinnableSlice::remove_prefix (#6330) Summary: The function was left unimplemented. Although we currently dont have a use for that it was declared with an assert(0) to prevent mistakenly using the remove_prefix of the parent class. The function body with only assert(0) however causes issues with some compilers warning levels. The patch implements the function to avoid the warning. It also piggybacks some minor code warning for unnecessary semicolons after the function definition.s Pull Request resolved: Differential Revision: D19559062 Pulled By: maysamyabandeh fbshipit-source-id: 3a022484f688c9abd4556e5412bcc2628ab96a00/
,,0.0976,rocksdb,Implement PinnableSlice::remove_prefix (#6330) Summary: The function was left unimplemented. Although we currently dont have a use for that it was declared with an assert(0) to prevent mistakenly using the remove_prefix of the parent class. The function body with only assert(0) however causes issues with some compilers warning levels. The patch implements the function to avoid the warning. It also piggybacks some minor code warning for unnecessary semicolons after the function definition.s Pull Request resolved: Differential Revision: D19559062 Pulled By: maysamyabandeh fbshipit-source-id: 3a022484f688c9abd4556e5412bcc2628ab96a00/
